(window.webpackJsonp=window.webpackJsonp||[]).push([["chunk-4b0d3da7"],{1276:function(t,e,i){"use strict";var n=i("d784"),h=i("44e7"),v=i("825a"),u=i("1d80"),y=i("4840"),x=i("8aa5"),_=i("50c4"),b=i("14c3"),p=i("9263"),i=i("d039"),d=[].push,M=Math.min,w=4294967295,S=!i(function(){return!RegExp(w,"y")});n("split",2,function(r,f,m){var g="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||1<".".split(/()()/).length||"".split(/.?/).length?function(t,e){var i=String(u(this)),n=void 0===e?w:e>>>0;if(0==n)return[];if(void 0===t)return[i];if(!h(t))return f.call(i,t,n);for(var r,s,a,o=[],e=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),l=0,c=new RegExp(t.source,e+"g");(r=p.call(c,i))&&!((s=c.lastIndex)>l&&(o.push(i.slice(l,r.index)),1<r.length&&r.index<i.length&&d.apply(o,r.slice(1)),a=r[0].length,l=s,o.length>=n));)c.lastIndex===r.index&&c.lastIndex++;return l===i.length?!a&&c.test("")||o.push(""):o.push(i.slice(l)),o.length>n?o.slice(0,n):o}:"0".split(void 0,0).length?function(t,e){return void 0===t&&0===e?[]:f.call(this,t,e)}:f;return[function(t,e){var i=u(this),n=null==t?void 0:t[r];return void 0!==n?n.call(t,i,e):g.call(String(i),t,e)},function(t,e){var i=m(g,t,this,e,g!==f);if(i.done)return i.value;var n=v(t),r=String(this),i=y(n,RegExp),s=n.unicode,t=(n.ignoreCase?"i":"")+(n.multiline?"m":"")+(n.unicode?"u":"")+(S?"y":"g"),a=new i(S?n:"^(?:"+n.source+")",t),o=void 0===e?w:e>>>0;if(0==o)return[];if(0===r.length)return null===b(a,r)?[r]:[];for(var l=0,c=0,h=[];c<r.length;){a.lastIndex=S?c:0;var u,p=b(a,S?r:r.slice(c));if(null===p||(u=M(_(a.lastIndex+(S?0:c)),r.length))===l)c=x(r,c,s);else{if(h.push(r.slice(l,c)),h.length===o)return h;for(var d=1;d<=p.length-1;d++)if(h.push(p[d]),h.length===o)return h;c=l=u}}return h.push(r.slice(l)),h}]},!S)},"14c3":function(t,e,i){var n=i("c6b6"),r=i("9263");t.exports=function(t,e){var i=t.exec;if("function"==typeof i){i=i.call(t,e);if("object"!=typeof i)throw TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==n(t))throw TypeError("RegExp#exec called on incompatible receiver");return r.call(t,e)}},"44e7":function(t,e,i){var n=i("861d"),r=i("c6b6"),s=i("b622")("match");t.exports=function(t){var e;return n(t)&&(void 0!==(e=t[s])?!!e:"RegExp"==r(t))}},4721:function(t,e,i){"use strict";i.d(e,"a",function(){return n});var nt=i("5a89"),n=function(t,e){var n,r,s,a,o,l;document,this.object=t,this.domElement=e,this.enabled=!0,this.target=new nt.pb,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:nt.I.ROTATE,MIDDLE:nt.I.DOLLY,RIGHT:nt.I.PAN},this.touches={ONE:nt.jb.ROTATE,TWO:nt.jb.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return m.phi},this.getAzimuthalAngle=function(){return m.theta},this.saveState=function(){c.target0.copy(c.target),c.position0.copy(c.object.position),c.zoom0=c.object.zoom},this.reset=function(){c.target.copy(c.target0),c.object.position.copy(c.position0),c.object.zoom=c.zoom0,c.object.updateProjectionMatrix(),c.dispatchEvent(h),c.update(),d=p.NONE},this.update=(n=new nt.pb,r=(new nt.Y).setFromUnitVectors(t.up,new nt.pb(0,1,0)),s=r.clone().invert(),a=new nt.pb,o=new nt.Y,l=2*Math.PI,function(){var t=c.object.position;n.copy(t).sub(c.target),n.applyQuaternion(r),m.setFromVector3(n),c.autoRotate&&d===p.NONE&&C(2*Math.PI/60/60*c.autoRotateSpeed),c.enableDamping?(m.theta+=g.theta*c.dampingFactor,m.phi+=g.phi*c.dampingFactor):(m.theta+=g.theta,m.phi+=g.phi);var e=c.minAzimuthAngle,i=c.maxAzimuthAngle;return isFinite(e)&&isFinite(i)&&(e<-Math.PI?e+=l:e>Math.PI&&(e-=l),i<-Math.PI?i+=l:i>Math.PI&&(i-=l),m.theta=e<=i?Math.max(e,Math.min(i,m.theta)):m.theta>(e+i)/2?Math.max(e,m.theta):Math.min(i,m.theta)),m.phi=Math.max(c.minPolarAngle,Math.min(c.maxPolarAngle,m.phi)),m.makeSafe(),m.radius*=v,m.radius=Math.max(c.minDistance,Math.min(c.maxDistance,m.radius)),!0===c.enableDamping?c.target.addScaledVector(y,c.dampingFactor):c.target.add(y),n.setFromSpherical(m),n.applyQuaternion(s),t.copy(c.target).add(n),c.object.lookAt(c.target),!0===c.enableDamping?(g.theta*=1-c.dampingFactor,g.phi*=1-c.dampingFactor,y.multiplyScalar(1-c.dampingFactor)):(g.set(0,0,0),y.set(0,0,0)),v=1,!!(x||a.distanceToSquared(c.object.position)>f||8*(1-o.dot(c.object.quaternion))>f)&&(c.dispatchEvent(h),a.copy(c.object.position),o.copy(c.object.quaternion),!(x=!1))}),this.dispose=function(){c.domElement.removeEventListener("contextmenu",it,!1),c.domElement.removeEventListener("pointerdown",q,!1),c.domElement.removeEventListener("wheel",K,!1),c.domElement.removeEventListener("touchstart",$,!1),c.domElement.removeEventListener("touchend",et,!1),c.domElement.removeEventListener("touchmove",tt,!1),c.domElement.ownerDocument.removeEventListener("pointermove",Z,!1),c.domElement.ownerDocument.removeEventListener("pointerup",J,!1),c.domElement.removeEventListener("keydown",Q,!1)};var c=this,h={type:"change"},i={type:"start"},u={type:"end"},p={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},d=p.NONE,f=1e-6,m=new nt.ib,g=new nt.ib,v=1,y=new nt.pb,x=!1,_=new nt.ob,b=new nt.ob,M=new nt.ob,w=new nt.ob,S=new nt.ob,A=new nt.ob,T=new nt.ob,L=new nt.ob,P=new nt.ob;function E(){return Math.pow(.95,c.zoomSpeed)}function C(t){g.theta-=t}function N(t){g.phi-=t}var O,I,D,R=(O=new nt.pb,function(t,e){O.setFromMatrixColumn(e,0),O.multiplyScalar(-t),y.add(O)}),z=(D=new nt.pb,function(t,e){!0===c.screenSpacePanning?D.setFromMatrixColumn(e,1):(D.setFromMatrixColumn(e,0),D.crossVectors(c.object.up,D)),D.multiplyScalar(t),y.add(D)}),F=(I=new nt.pb,function(t,e){var i,n=c.domElement;c.object.isPerspectiveCamera?(i=c.object.position,I.copy(i).sub(c.target),i=I.length(),i*=Math.tan(c.object.fov/2*Math.PI/180),R(2*t*i/n.clientHeight,c.object.matrix),z(2*e*i/n.clientHeight,c.object.matrix)):c.object.isOrthographicCamera?(R(t*(c.object.right-c.object.left)/c.object.zoom/n.clientWidth,c.object.matrix),z(e*(c.object.top-c.object.bottom)/c.object.zoom/n.clientHeight,c.object.matrix)):c.enablePan=!1});function U(t){c.object.isPerspectiveCamera?v/=t:c.object.isOrthographicCamera?(c.object.zoom=Math.max(c.minZoom,Math.min(c.maxZoom,c.object.zoom*t)),c.object.updateProjectionMatrix(),x=!0):c.enableZoom=!1}function B(t){c.object.isPerspectiveCamera?v*=t:c.object.isOrthographicCamera?(c.object.zoom=Math.max(c.minZoom,Math.min(c.maxZoom,c.object.zoom/t)),c.object.updateProjectionMatrix(),x=!0):c.enableZoom=!1}function k(t){_.set(t.clientX,t.clientY)}function V(t){w.set(t.clientX,t.clientY)}function j(t){var e;1==t.touches.length?_.set(t.touches[0].pageX,t.touches[0].pageY):(e=.5*(t.touches[0].pageX+t.touches[1].pageX),t=.5*(t.touches[0].pageY+t.touches[1].pageY),_.set(e,t))}function G(t){var e;1==t.touches.length?w.set(t.touches[0].pageX,t.touches[0].pageY):(e=.5*(t.touches[0].pageX+t.touches[1].pageX),t=.5*(t.touches[0].pageY+t.touches[1].pageY),w.set(e,t))}function W(t){var e=t.touches[0].pageX-t.touches[1].pageX,t=t.touches[0].pageY-t.touches[1].pageY,t=Math.sqrt(e*e+t*t);T.set(0,t)}function H(t){var e;1==t.touches.length?b.set(t.touches[0].pageX,t.touches[0].pageY):(e=.5*(t.touches[0].pageX+t.touches[1].pageX),i=.5*(t.touches[0].pageY+t.touches[1].pageY),b.set(e,i)),M.subVectors(b,_).multiplyScalar(c.rotateSpeed);var i=c.domElement;C(2*Math.PI*M.x/i.clientHeight),N(2*Math.PI*M.y/i.clientHeight),_.copy(b)}function X(t){var e;1==t.touches.length?S.set(t.touches[0].pageX,t.touches[0].pageY):(e=.5*(t.touches[0].pageX+t.touches[1].pageX),t=.5*(t.touches[0].pageY+t.touches[1].pageY),S.set(e,t)),A.subVectors(S,w).multiplyScalar(c.panSpeed),F(A.x,A.y),w.copy(S)}function Y(t){var e=t.touches[0].pageX-t.touches[1].pageX,t=t.touches[0].pageY-t.touches[1].pageY,t=Math.sqrt(e*e+t*t);L.set(0,t),P.set(0,Math.pow(L.y/T.y,c.zoomSpeed)),U(P.y),T.copy(L)}function q(t){if(!1!==c.enabled)switch(t.pointerType){case"mouse":case"pen":!function(t){var e;switch(t.preventDefault(),(c.domElement.focus?c.domElement:window).focus(),t.button){case 0:e=c.mouseButtons.LEFT;break;case 1:e=c.mouseButtons.MIDDLE;break;case 2:e=c.mouseButtons.RIGHT;break;default:e=-1}switch(e){case nt.I.DOLLY:if(!1===c.enableZoom)return;T.set(t.clientX,t.clientY),d=p.DOLLY;break;case nt.I.ROTATE:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===c.enablePan)return;V(t),d=p.PAN}else{if(!1===c.enableRotate)return;k(t),d=p.ROTATE}break;case nt.I.PAN:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===c.enableRotate)return;k(t),d=p.ROTATE}else{if(!1===c.enablePan)return;V(t),d=p.PAN}break;default:d=p.NONE}d!==p.NONE&&(c.domElement.ownerDocument.addEventListener("pointermove",Z,!1),c.domElement.ownerDocument.addEventListener("pointerup",J,!1),c.dispatchEvent(i))}(t)}}function Z(t){if(!1!==c.enabled)switch(t.pointerType){case"mouse":case"pen":!function(e){if(!1!==c.enabled)switch(e.preventDefault(),d){case p.ROTATE:if(!1===c.enableRotate)return;!function(){b.set(e.clientX,e.clientY),M.subVectors(b,_).multiplyScalar(c.rotateSpeed);var t=c.domElement;C(2*Math.PI*M.x/t.clientHeight),N(2*Math.PI*M.y/t.clientHeight),_.copy(b),c.update()}();break;case p.DOLLY:if(!1===c.enableZoom)return;L.set(e.clientX,e.clientY),P.subVectors(L,T),0<P.y?U(E()):P.y<0&&B(E()),T.copy(L),c.update();break;case p.PAN:if(!1===c.enablePan)return;S.set(e.clientX,e.clientY),A.subVectors(S,w).multiplyScalar(c.panSpeed),F(A.x,A.y),w.copy(S),c.update()}}(t)}}function J(t){switch(t.pointerType){case"mouse":case"pen":c.domElement.ownerDocument.removeEventListener("pointermove",Z,!1),c.domElement.ownerDocument.removeEventListener("pointerup",J,!1),!1!==c.enabled&&(c.dispatchEvent(u),d=p.NONE)}}function K(t){!1===c.enabled||!1===c.enableZoom||d!==p.NONE&&d!==p.ROTATE||(t.preventDefault(),t.stopPropagation(),c.dispatchEvent(i),(t=t).deltaY<0?B(E()):0<t.deltaY&&U(E()),c.update(),c.dispatchEvent(u))}function Q(t){!1!==c.enabled&&!1!==c.enableKeys&&!1!==c.enablePan&&function(t){var e=!1;switch(t.keyCode){case c.keys.UP:F(0,c.keyPanSpeed),e=!0;break;case c.keys.BOTTOM:F(0,-c.keyPanSpeed),e=!0;break;case c.keys.LEFT:F(c.keyPanSpeed,0),e=!0;break;case c.keys.RIGHT:F(-c.keyPanSpeed,0),e=!0}e&&(t.preventDefault(),c.update())}(t)}function $(t){if(!1!==c.enabled){switch(t.preventDefault(),t.touches.length){case 1:switch(c.touches.ONE){case nt.jb.ROTATE:if(!1===c.enableRotate)return;j(t),d=p.TOUCH_ROTATE;break;case nt.jb.PAN:if(!1===c.enablePan)return;G(t),d=p.TOUCH_PAN;break;default:d=p.NONE}break;case 2:switch(c.touches.TWO){case nt.jb.DOLLY_PAN:if(!1===c.enableZoom&&!1===c.enablePan)return;e=t,c.enableZoom&&W(e),c.enablePan&&G(e),d=p.TOUCH_DOLLY_PAN;break;case nt.jb.DOLLY_ROTATE:if(!1===c.enableZoom&&!1===c.enableRotate)return;e=t,c.enableZoom&&W(e),c.enableRotate&&j(e),d=p.TOUCH_DOLLY_ROTATE;break;default:d=p.NONE}break;default:d=p.NONE}d!==p.NONE&&c.dispatchEvent(i)}var e}function tt(t){if(!1!==c.enabled)switch(t.preventDefault(),t.stopPropagation(),d){case p.TOUCH_ROTATE:if(!1===c.enableRotate)return;H(t),c.update();break;case p.TOUCH_PAN:if(!1===c.enablePan)return;X(t),c.update();break;case p.TOUCH_DOLLY_PAN:if(!1===c.enableZoom&&!1===c.enablePan)return;e=t,c.enableZoom&&Y(e),c.enablePan&&X(e),c.update();break;case p.TOUCH_DOLLY_ROTATE:if(!1===c.enableZoom&&!1===c.enableRotate)return;e=t,c.enableZoom&&Y(e),c.enableRotate&&H(e),c.update();break;default:d=p.NONE}var e}function et(t){!1!==c.enabled&&(c.dispatchEvent(u),d=p.NONE)}function it(t){!1!==c.enabled&&t.preventDefault()}c.domElement.addEventListener("contextmenu",it,!1),c.domElement.addEventListener("pointerdown",q,!1),c.domElement.addEventListener("wheel",K,!1),c.domElement.addEventListener("touchstart",$,!1),c.domElement.addEventListener("touchend",et,!1),c.domElement.addEventListener("touchmove",tt,!1),c.domElement.addEventListener("keydown",Q,!1),this.update()};n.prototype=Object.create(nt.s.prototype),n.prototype.constructor=n;i=function(t,e){n.call(this,t,e),this.screenSpacePanning=!1,this.mouseButtons.LEFT=nt.I.PAN,this.mouseButtons.RIGHT=nt.I.ROTATE,this.touches.ONE=nt.jb.PAN,this.touches.TWO=nt.jb.DOLLY_ROTATE};(i.prototype=Object.create(nt.s.prototype)).constructor=i},"5a89":function(t,e,i){"use strict";i.d(e,"a",function(){return Ho}),i.d(e,"b",function(){return yl}),i.d(e,"c",function(){return vl}),i.d(e,"d",function(){return al}),i.d(e,"e",function(){return V}),i.d(e,"f",function(){return gi}),i.d(e,"g",function(){return Le}),i.d(e,"h",function(){return Ze}),i.d(e,"i",function(){return ul}),i.d(e,"j",function(){return _e}),i.d(e,"k",function(){return qs}),i.d(e,"l",function(){return lo}),i.d(e,"m",function(){return Ys}),i.d(e,"n",function(){return eo}),i.d(e,"o",function(){return Wo}),i.d(e,"p",function(){return j}),i.d(e,"r",function(){return Rt}),i.d(e,"s",function(){return c}),i.d(e,"t",function(){return ya}),i.d(e,"v",function(){return ro}),i.d(e,"w",function(){return ze}),i.d(e,"x",function(){return nl}),i.d(e,"y",function(){return A}),i.d(e,"A",function(){return Xs}),i.d(e,"B",function(){return Wl}),i.d(e,"C",function(){return Cr}),i.d(e,"D",function(){return Ts}),i.d(e,"E",function(){return _s}),i.d(e,"F",function(){return Es}),i.d(e,"G",function(){return io}),i.d(e,"H",function(){return Jo}),i.d(e,"I",function(){return n}),i.d(e,"J",function(){return we}),i.d(e,"K",function(){return Pt}),i.d(e,"L",function(){return Ot}),i.d(e,"M",function(){return di}),i.d(e,"N",function(){return Se}),i.d(e,"O",function(){return za}),i.d(e,"P",function(){return Ia}),i.d(e,"Q",function(){return Qt}),i.d(e,"R",function(){return xa}),i.d(e,"T",function(){return Io}),i.d(e,"U",function(){return Mi}),i.d(e,"V",function(){return Oi}),i.d(e,"W",function(){return zs}),i.d(e,"X",function(){return Ns}),i.d(e,"Y",function(){return _}),i.d(e,"Z",function(){return Q}),i.d(e,"ab",function(){return Rl}),i.d(e,"cb",function(){return U}),i.d(e,"db",function(){return zr}),i.d(e,"eb",function(){return _i}),i.d(e,"gb",function(){return Do}),i.d(e,"hb",function(){return Sa}),i.d(e,"ib",function(){return Ul}),i.d(e,"jb",function(){return r}),i.d(e,"kb",function(){return Ta}),i.d(e,"lb",function(){return ho}),i.d(e,"mb",function(){return La}),i.d(e,"nb",function(){return Pa}),i.d(e,"ob",function(){return Et}),i.d(e,"pb",function(){return Nt}),i.d(e,"qb",function(){return Dr});const n={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},r={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},A=0,V=1,j=2,G=100,w=301,S=302,T=306,L=307,U=1e3,B=1001,k=1002,W=1003,H=1004,X=1005,Y=1006,q=1008,wt=1009,Z=1012,J=1014,St=1015,At=1016,K=1020,Q=1022,Tt=1023,$=1026,tt=1027,l=2400,h=2401,Lt=3e3,s=7680,a=35044,o=35048,P="300 es";function c(){}Object.assign(c.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;const i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)},removeEventListener:function(t,e){if(void 0!==this._listeners){const i=this._listeners[t];if(void 0!==i){const t=i.indexOf(e);-1!==t&&i.splice(t,1)}}},dispatchEvent:function(i){if(void 0!==this._listeners){const t=this._listeners[i.type];if(void 0!==t){i.target=this;const n=t.slice(0);for(let t=0,e=n.length;t<e;t++)n[t].call(this,i)}}}});const u=[];for(let t=0;t<256;t++)u[t]=(t<16?"0":"")+t.toString(16);let p=1234567;const Pt={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(u[255&t]+u[t>>8&255]+u[t>>16&255]+u[t>>24&255]+"-"+u[255&e]+u[e>>8&255]+"-"+u[e>>16&15|64]+u[e>>24&255]+"-"+u[63&i|128]+u[i>>8&255]+"-"+u[i>>16&255]+u[i>>24&255]+u[255&n]+u[n>>8&255]+u[n>>16&255]+u[n>>24&255]).toUpperCase()},clamp:function(t,e,i){return Math.max(e,Math.min(i,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,i,n,r){return n+(t-e)*(r-n)/(i-e)},lerp:function(t,e,i){return(1-i)*t+i*e},smoothstep:function(t,e,i){return t<=e?0:i<=t?1:(t=(t-e)/(i-e))*t*(3-2*t)},smootherstep:function(t,e,i){return t<=e?0:i<=t?1:(t=(t-e)/(i-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(p=t%2147483647),p=16807*p%2147483647,(p-1)/2147483646},degToRad:function(t){return t*Pt.DEG2RAD},radToDeg:function(t){return t*Pt.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,i,n,r){const s=Math.cos,a=Math.sin,o=s(i/2),l=a(i/2),c=s((e+n)/2),h=a((e+n)/2),u=s((e-n)/2),p=a((e-n)/2),d=s((n-e)/2),f=a((n-e)/2);switch(r){case"XYX":t.set(o*h,l*u,l*p,o*c);break;case"YZY":t.set(l*p,o*h,l*u,o*c);break;case"ZXZ":t.set(l*u,l*p,o*h,o*c);break;case"XZX":t.set(o*h,l*f,l*d,o*c);break;case"YXY":t.set(l*d,o*h,l*f,o*c);break;case"ZYZ":t.set(l*f,l*d,o*h,o*c)}}};class Et{constructor(t=0,e=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?this.addVectors(t,e):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?this.subVectors(t,e):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){var e=this.x,i=this.y,t=t.elements;return this.x=t[0]*e+t[3]*i+t[6],this.y=t[1]*e+t[4]*i+t[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){var e=this.x-t.x,t=this.y-t.y;return e*e+t*t}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,i){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){var i=Math.cos(e),n=Math.sin(e),r=this.x-t.x,e=this.y-t.y;return this.x=r*i-e*n+t.x,this.y=r*n+e*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class v{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,i,n,r,s,a,o,l){const c=this.elements;return c[0]=t,c[1]=n,c[2]=a,c[3]=e,c[4]=r,c[5]=o,c[6]=i,c[7]=s,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return(new this.constructor).fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){t=t.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,r=this.elements,s=i[0],a=i[3],o=i[6],l=i[1],c=i[4],h=i[7],u=i[2],p=i[5],d=i[8],f=n[0],m=n[3],g=n[6],v=n[1],y=n[4],x=n[7],_=n[2],b=n[5],M=n[8];return r[0]=s*f+a*v+o*_,r[3]=s*m+a*y+o*b,r[6]=s*g+a*x+o*M,r[1]=l*f+c*v+h*_,r[4]=l*m+c*y+h*b,r[7]=l*g+c*x+h*M,r[2]=u*f+p*v+d*_,r[5]=u*m+p*y+d*b,r[8]=u*g+p*x+d*M,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){var t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],t=t[8];return e*s*t-e*a*l-i*r*t+i*a*o+n*r*l-n*s*o}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8],h=c*s-a*l,u=a*o-c*r,p=l*r-s*o,d=e*h+i*u+n*p;if(0==d)return this.set(0,0,0,0,0,0,0,0,0);var f=1/d;return t[0]=h*f,t[1]=(n*l-c*i)*f,t[2]=(a*i-n*s)*f,t[3]=u*f,t[4]=(c*e-n*o)*f,t[5]=(n*r-a*e)*f,t[6]=p*f,t[7]=(i*o-l*e)*f,t[8]=(s*e-i*r)*f,this}transpose(){var t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).copy(this).invert().transpose()}transposeIntoArray(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,n,r,s,a){var o=Math.cos(r),r=Math.sin(r);return this.set(i*o,i*r,-i*(o*s+r*a)+s+t,-n*r,n*o,-n*(-r*s+o*a)+a+e,0,0,1),this}scale(t,e){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=e,i[4]*=e,i[7]*=e,this}rotate(t){const e=Math.cos(t),i=Math.sin(t),n=this.elements,r=n[0],s=n[3],a=n[6],o=n[1],l=n[4],c=n[7];return n[0]=e*r+i*o,n[3]=e*s+i*l,n[6]=e*a+i*c,n[1]=-i*r+e*o,n[4]=-i*s+e*l,n[7]=-i*a+e*c,this}translate(t,e){const i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=e*i[2],i[4]+=e*i[5],i[7]+=e*i[8],this}equals(t){var e=this.elements,i=t.elements;for(let t=0;t<9;t++)if(e[t]!==i[t])return!1;return!0}fromArray(e,i=0){for(let t=0;t<9;t++)this.elements[t]=e[t+i];return this}toArray(t=[],e=0){var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}}let d;const f={getDataURL:function(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===d&&(d=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),d.width=t.width,d.height=t.height;const i=d.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=d}return 2048<e.width||2048<e.height?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}};let m=0;function g(t=g.DEFAULT_IMAGE,e=g.DEFAULT_MAPPING,i=1001,n=1001,r=1006,s=1008,a=1023,o=1009,l=1,c=3e3){Object.defineProperty(this,"id",{value:m++}),this.uuid=Pt.generateUUID(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=i,this.wrapT=n,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new Et(0,0),this.repeat=new Et(1,1),this.center=new Et(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new v,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.version=0,this.onUpdate=null}function y(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?f.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:{}}g.DEFAULT_IMAGE=void 0,g.DEFAULT_MAPPING=300,g.prototype=Object.assign(Object.create(c.prototype),{constructor:g,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){var e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const n=this.image;if(void 0===n.uuid&&(n.uuid=Pt.generateUUID()),!e&&void 0===t.images[n.uuid]){let i;if(Array.isArray(n)){i=[];for(let t=0,e=n.length;t<e;t++)n[t].isDataTexture?i.push(y(n[t].image)):i.push(y(n[t]))}else i=y(n);t.images[n.uuid]={uuid:n.uuid,url:i}}i.image=n.uuid}return e||(t.textures[this.uuid]=i),i},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||1<t.x)switch(this.wrapS){case U:t.x=t.x-Math.floor(t.x);break;case B:t.x=t.x<0?0:1;break;case k:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||1<t.y)switch(this.wrapT){case U:t.y=t.y-Math.floor(t.y);break;case B:t.y=t.y<0?0:1;break;case k:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}}),Object.defineProperty(g.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});class Ct{constructor(t=0,e=0,i=0,n=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=t,this.y=e,this.z=i,this.w=n}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?this.addVectors(t,e):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?this.subVectors(t,e):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){var e=this.x,i=this.y,n=this.z,r=this.w,t=t.elements;return this.x=t[0]*e+t[4]*i+t[8]*n+t[12]*r,this.y=t[1]*e+t[5]*i+t[9]*n+t[13]*r,this.z=t[2]*e+t[6]*i+t[10]*n+t[14]*r,this.w=t[3]*e+t[7]*i+t[11]*n+t[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,n,r;const s=t.elements,a=s[0],o=s[4],l=s[8],c=s[1],h=s[5],u=s[9],p=s[2],d=s[6],f=s[10];if(Math.abs(o-c)<.01&&Math.abs(l-p)<.01&&Math.abs(u-d)<.01){if(Math.abs(o+c)<.1&&Math.abs(l+p)<.1&&Math.abs(u+d)<.1&&Math.abs(a+h+f-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const t=(a+1)/2,s=(h+1)/2,m=(f+1)/2,g=(o+c)/4,v=(l+p)/4,y=(u+d)/4;return t>s&&t>m?r=t<.01?(i=0,n=.707106781):(i=Math.sqrt(t),n=g/i,v/i):s>m?r=s<.01?(i=.707106781,n=0,.707106781):(n=Math.sqrt(s),i=g/n,y/n):m<.01?(i=.707106781,n=.707106781,r=0):(r=Math.sqrt(m),i=v/r,n=y/r),this.set(i,n,r,e),this}let m=Math.sqrt((d-u)*(d-u)+(l-p)*(l-p)+(c-o)*(c-o));return Math.abs(m)<.001&&(m=1),this.x=(d-u)/m,this.y=(l-p)/m,this.z=(c-o)/m,this.w=Math.acos((a+h+f-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,i){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}function E(t,e,i){this.width=t,this.height=e,this.scissor=new Ct(0,0,t,e),this.scissorTest=!1,this.viewport=new Ct(0,0,t,e),this.texture=new g(void 0,(i=i||{}).mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:Y,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0!==i.stencilBuffer&&i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null}function x(t,e,i){E.call(this,t,e,i),this.samples=4}E.prototype=Object.assign(Object.create(c.prototype),{constructor:E,isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.texture.image.width=t,this.texture.image.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),x.prototype=Object.assign(Object.create(E.prototype),{constructor:x,isWebGLMultisampleRenderTarget:!0,copy:function(t){return E.prototype.copy.call(this,t),this.samples=t.samples,this}});class _{constructor(t=0,e=0,i=0,n=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=t,this._y=e,this._z=i,this._w=n}static slerp(t,e,i,n){return i.copy(t).slerp(e,n)}static slerpFlat(e,i,n,r,s,a,o){let l=n[r+0],c=n[r+1],h=n[r+2],u=n[r+3];var p=s[a+0],n=s[a+1],r=s[a+2],a=s[a+3];if(u!==a||l!==p||c!==n||h!==r){let t=1-o;const i=l*p+c*n+h*r+u*a,d=0<=i?1:-1,f=1-i*i;if(f>Number.EPSILON){const s=Math.sqrt(f),m=Math.atan2(s,i*d);t=Math.sin(t*m)/s,o=Math.sin(o*m)/s}const s=o*d;if(l=l*t+p*s,c=c*t+n*s,h=h*t+r*s,u=u*t+a*s,t===1-o){const e=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=e,c*=e,h*=e,u*=e}}e[i]=l,e[i+1]=c,e[i+2]=h,e[i+3]=u}static multiplyQuaternionsFlat(t,e,i,n,r,s){var a=i[n],o=i[n+1],l=i[n+2],c=i[n+3],h=r[s],i=r[s+1],n=r[s+2],s=r[s+3];return t[e]=a*s+c*h+o*n-l*i,t[e+1]=o*s+c*i+l*h-a*n,t[e+2]=l*s+c*n+a*i-o*h,t[e+3]=c*s-a*h-o*i-l*n,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=t._x,n=t._y,r=t._z,s=t._order,a=Math.cos,o=Math.sin,l=a(i/2),c=a(n/2),h=a(r/2),u=o(i/2),p=o(n/2),d=o(r/2);switch(s){case"XYZ":this._x=u*c*h+l*p*d,this._y=l*p*h-u*c*d,this._z=l*c*d+u*p*h,this._w=l*c*h-u*p*d;break;case"YXZ":this._x=u*c*h+l*p*d,this._y=l*p*h-u*c*d,this._z=l*c*d-u*p*h,this._w=l*c*h+u*p*d;break;case"ZXY":this._x=u*c*h-l*p*d,this._y=l*p*h+u*c*d,this._z=l*c*d+u*p*h,this._w=l*c*h-u*p*d;break;case"ZYX":this._x=u*c*h-l*p*d,this._y=l*p*h+u*c*d,this._z=l*c*d-u*p*h,this._w=l*c*h+u*p*d;break;case"YZX":this._x=u*c*h+l*p*d,this._y=l*p*h+u*c*d,this._z=l*c*d-u*p*h,this._w=l*c*h-u*p*d;break;case"XZY":this._x=u*c*h-l*p*d,this._y=l*p*h-u*c*d,this._z=l*c*d+u*p*h,this._w=l*c*h+u*p*d}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){var i=e/2,e=Math.sin(i);return this._x=t.x*e,this._y=t.y*e,this._z=t.z*e,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){var e=t.elements,i=e[0],n=e[4],r=e[8],s=e[1],a=e[5],o=e[9],l=e[2],c=e[6],t=e[10],e=i+a+t;if(0<e){const h=.5/Math.sqrt(e+1);this._w=.25/h,this._x=(c-o)*h,this._y=(r-l)*h,this._z=(s-n)*h}else if(a<i&&t<i){const h=2*Math.sqrt(1+i-a-t);this._w=(c-o)/h,this._x=.25*h,this._y=(n+s)/h,this._z=(r+l)/h}else if(t<a){const h=2*Math.sqrt(1+a-i-t);this._w=(r-l)/h,this._x=(n+s)/h,this._y=.25*h,this._z=(o+c)/h}else{const h=2*Math.sqrt(1+t-i-a);this._w=(s-n)/h,this._x=(r+l)/h,this._y=(o+c)/h,this._z=.25*h}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<1e-6?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0):(this._x=0,this._y=-t.z,this._z=t.y)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x),this._w=i,this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Pt.clamp(this.dot(t),-1,1)))}rotateTowards(t,e){var i=this.angleTo(t);if(0===i)return this;i=Math.min(1,e/i);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(this._x=this._x*(t=1/t),this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?this.multiplyQuaternions(t,e):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){var i=t._x,n=t._y,r=t._z,s=t._w,a=e._x,o=e._y,t=e._z,e=e._w;return this._x=i*e+s*a+n*t-r*o,this._y=n*e+s*o+r*a-i*t,this._z=r*e+s*t+i*o-n*a,this._w=s*e-i*a-n*o-r*t,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);var i=this._x,n=this._y,r=this._z,s=this._w;let a=s*t._w+i*t._x+n*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),1<=a)return this._w=s,this._x=i,this._y=n,this._z=r,this;var o=1-a*a;if(o<=Number.EPSILON){const c=1-e;return this._w=c*s+e*this._w,this._x=c*i+e*this._x,this._y=c*n+e*this._y,this._z=c*r+e*this._z,this.normalize(),this._onChangeCallback(),this}var l=Math.sqrt(o),t=Math.atan2(l,a),o=Math.sin((1-e)*t)/l,l=Math.sin(e*t)/l;return this._w=s*o+this._w*l,this._x=i*o+this._x*l,this._y=n*o+this._y*l,this._z=r*o+this._z*l,this._onChangeCallback(),this}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}class Nt{constructor(t=0,e=0,i=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=t,this.y=e,this.z=i}set(t,e,i){return void 0===i&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?this.addVectors(t,e):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?this.subVectors(t,e):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?this.multiplyVectors(t,e):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler,this.applyQuaternion(M.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(M.setFromAxisAngle(t,e))}applyMatrix3(t){var e=this.x,i=this.y,n=this.z,t=t.elements;return this.x=t[0]*e+t[3]*i+t[6]*n,this.y=t[1]*e+t[4]*i+t[7]*n,this.z=t[2]*e+t[5]*i+t[8]*n,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){var e=this.x,i=this.y,n=this.z,r=t.elements,t=1/(r[3]*e+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*e+r[4]*i+r[8]*n+r[12])*t,this.y=(r[1]*e+r[5]*i+r[9]*n+r[13])*t,this.z=(r[2]*e+r[6]*i+r[10]*n+r[14])*t,this}applyQuaternion(t){var e=this.x,i=this.y,n=this.z,r=t.x,s=t.y,a=t.z,o=t.w,l=o*e+s*n-a*i,c=o*i+a*e-r*n,t=o*n+r*i-s*e,n=-r*e-s*i-a*n;return this.x=l*o+n*-r+c*-a-t*-s,this.y=c*o+n*-s+t*-r-l*-a,this.z=t*o+n*-a+l*-s-c*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){var e=this.x,i=this.y,n=this.z,t=t.elements;return this.x=t[0]*e+t[4]*i+t[8]*n,this.y=t[1]*e+t[5]*i+t[9]*n,this.z=t[2]*e+t[6]*i+t[10]*n,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t,e){return void 0!==e?this.crossVectors(t,e):this.crossVectors(this,t)}crossVectors(t,e){var i=t.x,n=t.y,r=t.z,s=e.x,t=e.y,e=e.z;return this.x=n*e-r*t,this.y=r*s-i*e,this.z=i*t-n*s,this}projectOnVector(t){var e=t.lengthSq();if(0===e)return this.set(0,0,0);e=t.dot(this)/e;return this.copy(t).multiplyScalar(e)}projectOnPlane(t){return b.copy(this).projectOnVector(t),this.sub(b)}reflect(t){return this.sub(b.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){var e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;e=this.dot(t)/e;return Math.acos(Pt.clamp(e,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){var e=this.x-t.x,i=this.y-t.y,t=this.z-t.z;return e*e+i*i+t*t}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){var n=Math.sin(e)*t;return this.x=n*Math.sin(i),this.y=Math.cos(e)*t,this.z=n*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){t=t.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(t){var e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),t=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=t,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,i){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const b=new Nt,M=new _;class C{constructor(t,e){Object.defineProperty(this,"isBox3",{value:!0}),this.min=void 0!==t?t:new Nt(1/0,1/0,1/0),this.max=void 0!==e?e:new Nt(-1/0,-1/0,-1/0)}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(i){let n=1/0,r=1/0,s=1/0,a=-1/0,o=-1/0,l=-1/0;for(let t=0,e=i.length;t<e;t+=3){var c=i[t],h=i[t+1],u=i[t+2];c<n&&(n=c),h<r&&(r=h),u<s&&(s=u),c>a&&(a=c),h>o&&(o=h),u>l&&(l=u)}return this.min.set(n,r,s),this.max.set(a,o,l),this}setFromBufferAttribute(i){let n=1/0,r=1/0,s=1/0,a=-1/0,o=-1/0,l=-1/0;for(let t=0,e=i.count;t<e;t++){var c=i.getX(t),h=i.getY(t),u=i.getZ(t);c<n&&(n=c),h<r&&(r=h),u<s&&(s=u),c>a&&(a=c),h>o&&(o=h),u>l&&(l=u)}return this.min.set(n,r,s),this.max.set(a,o,l),this}setFromPoints(i){this.makeEmpty();for(let t=0,e=i.length;t<e;t++)this.expandByPoint(i[t]);return this}setFromCenterAndSize(t,e){e=I.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(e),this.max.copy(t).add(e),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return void 0===t&&(t=new Nt),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(t=new Nt),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),D.copy(e.boundingBox),D.applyMatrix4(t.matrixWorld),this.union(D));var i=t.children;for(let t=0,e=i.length;t<e;t++)this.expandByObject(i[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return(e=void 0===e?new Nt:e).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,I),I.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return i=0<t.normal.x?(e=t.normal.x*this.min.x,t.normal.x*this.max.x):(e=t.normal.x*this.max.x,t.normal.x*this.min.x),0<t.normal.y?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),0<t.normal.z?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){return!this.isEmpty()&&(this.getCenter(rt),st.subVectors(this.max,rt),R.subVectors(t.a,rt),z.subVectors(t.b,rt),F.subVectors(t.c,rt),et.subVectors(z,R),it.subVectors(F,z),nt.subVectors(R,F),!!N([0,-et.z,et.y,0,-it.z,it.y,0,-nt.z,nt.y,et.z,0,-et.x,it.z,0,-it.x,nt.z,0,-nt.x,-et.y,et.x,0,-it.y,it.x,0,-nt.y,nt.x,0],R,z,F,st)&&(!!N([1,0,0,0,1,0,0,0,1],R,z,F,st)&&(at.crossVectors(et,it),N([at.x,at.y,at.z],R,z,F,st))))}clampPoint(t,e){return(e=void 0===e?new Nt:e).copy(t).clamp(this.min,this.max)}distanceToPoint(t){return I.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(I).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(O[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),O[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),O[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),O[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),O[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),O[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),O[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),O[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(O)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}function N(i,n,r,s,a){for(let t=0,e=i.length-3;t<=e;t+=3){ot.fromArray(i,t);var o=a.x*Math.abs(ot.x)+a.y*Math.abs(ot.y)+a.z*Math.abs(ot.z),l=n.dot(ot),c=r.dot(ot),h=s.dot(ot);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>o)return!1}return!0}const O=[new Nt,new Nt,new Nt,new Nt,new Nt,new Nt,new Nt,new Nt],I=new Nt,D=new C,R=new Nt,z=new Nt,F=new Nt,et=new Nt,it=new Nt,nt=new Nt,rt=new Nt,st=new Nt,at=new Nt,ot=new Nt,lt=new C;class ct{constructor(t,e){this.center=void 0!==t?t:new Nt,this.radius=void 0!==e?e:-1}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(i,t){const n=this.center;void 0!==t?n.copy(t):lt.setFromPoints(i).getCenter(n);let r=0;for(let t=0,e=i.length;t<e;t++)r=Math.max(r,n.distanceToSquared(i[t]));return this.radius=Math.sqrt(r),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){var i=this.center.distanceToSquared(t);return(e=void 0===e?new Nt:e).copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return void 0===t&&(t=new C),this.isEmpty()?t.makeEmpty():(t.set(this.center,this.center),t.expandByScalar(this.radius)),t}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}}const ht=new Nt,ut=new Nt,pt=new Nt,dt=new Nt,ft=new Nt,mt=new Nt,gt=new Nt;class vt{constructor(t,e){this.origin=void 0!==t?t:new Nt,this.direction=void 0!==e?e:new Nt(0,0,-1)}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return(e=void 0===e?new Nt:e).copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,ht)),this}closestPointToPoint(t,e){(e=void 0===e?new Nt:e).subVectors(t,this.origin);t=e.dot(this.direction);return t<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(t).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){var e=ht.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(ht.copy(this.direction).multiplyScalar(e).add(this.origin),ht.distanceToSquared(t))}distanceSqToSegment(t,e,i,n){ut.copy(t).add(e).multiplyScalar(.5),pt.copy(e).sub(t).normalize(),dt.copy(this.origin).sub(ut);var r=.5*t.distanceTo(e),s=-this.direction.dot(pt),a=dt.dot(this.direction),o=-dt.dot(pt),t=dt.lengthSq(),e=Math.abs(1-s*s);let l,c,h,u;if(0<e)if(l=s*o-a,c=s*a-o,u=r*e,0<=l)if(c>=-u)if(c<=u){const p=1/e;l*=p,c*=p,h=l*(l+s*c+2*a)+c*(s*l+c+2*o)+t}else c=r,l=Math.max(0,-(s*c+a)),h=-l*l+c*(c+2*o)+t;else c=-r,l=Math.max(0,-(s*c+a)),h=-l*l+c*(c+2*o)+t;else h=c<=-u?(l=Math.max(0,-(-s*r+a)),c=0<l?-r:Math.min(Math.max(-r,-o),r),-l*l+c*(c+2*o)+t):c<=u?(l=0,c=Math.min(Math.max(-r,-o),r),c*(c+2*o)+t):(l=Math.max(0,-(s*r+a)),c=0<l?r:Math.min(Math.max(-r,-o),r),-l*l+c*(c+2*o)+t);else c=0<s?-r:r,l=Math.max(0,-(s*c+a)),h=-l*l+c*(c+2*o)+t;return i&&i.copy(this.direction).multiplyScalar(l).add(this.origin),n&&n.copy(pt).multiplyScalar(c).add(ut),h}intersectSphere(t,e){ht.subVectors(t.center,this.origin);var i=ht.dot(this.direction),n=ht.dot(ht)-i*i,t=t.radius*t.radius;if(t<n)return null;t=Math.sqrt(t-n),n=i-t,t=i+t;return n<0&&t<0?null:n<0?this.at(t,e):this.at(n,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){var e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;e=-(this.origin.dot(t.normal)+t.constant)/e;return 0<=e?e:null}intersectPlane(t,e){t=this.distanceToPlane(t);return null===t?null:this.at(t,e)}intersectsPlane(t){var e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,n,r,s,a,o;var l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return n=0<=l?(i=(t.min.x-u.x)*l,(t.max.x-u.x)*l):(i=(t.max.x-u.x)*l,(t.min.x-u.x)*l),s=0<=c?(r=(t.min.y-u.y)*c,(t.max.y-u.y)*c):(r=(t.max.y-u.y)*c,(t.min.y-u.y)*c),i>s||r>n?null:((r>i||i!=i)&&(i=r),(s<n||n!=n)&&(n=s),o=0<=h?(a=(t.min.z-u.z)*h,(t.max.z-u.z)*h):(a=(t.max.z-u.z)*h,(t.min.z-u.z)*h),i>o||a>n?null:((a>i||i!=i)&&(i=a),(o<n||n!=n)&&(n=o),n<0?null:this.at(0<=i?i:n,e)))}intersectsBox(t){return null!==this.intersectBox(t,ht)}intersectTriangle(t,e,i,n,r){ft.subVectors(e,t),mt.subVectors(i,t),gt.crossVectors(ft,mt);let s,a=this.direction.dot(gt);if(0<a){if(n)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}dt.subVectors(this.origin,t);n=s*this.direction.dot(mt.crossVectors(dt,mt));if(n<0)return null;t=s*this.direction.dot(ft.cross(dt));if(t<0)return null;if(n+t>a)return null;t=-s*dt.dot(gt);return t<0?null:this.at(t/a,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}class Ot{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,i,n,r,s,a,o,l,c,h,u,p,d,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=n,g[1]=r,g[5]=s,g[9]=a,g[13]=o,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=p,g[7]=d,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Ot).fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,n=1/yt.setFromMatrixColumn(t,0).length(),r=1/yt.setFromMatrixColumn(t,1).length(),s=1/yt.setFromMatrixColumn(t,2).length();return e[0]=i[0]*n,e[1]=i[1]*n,e[2]=i[2]*n,e[3]=0,e[4]=i[4]*r,e[5]=i[5]*r,e[6]=i[6]*r,e[7]=0,e[8]=i[8]*s,e[9]=i[9]*s,e[10]=i[10]*s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler;const e=this.elements,i=t.x,n=t.y,r=t.z,s=Math.cos(i),a=Math.sin(i),o=Math.cos(n),l=Math.sin(n),c=Math.cos(r),h=Math.sin(r);if("XYZ"===t.order){const t=s*c,i=s*h,n=a*c,r=a*h;e[0]=o*c,e[4]=-o*h,e[8]=l,e[1]=i+n*l,e[5]=t-r*l,e[9]=-a*o,e[2]=r-t*l,e[6]=n+i*l,e[10]=s*o}else if("YXZ"===t.order){const t=o*c,i=o*h,n=l*c,r=l*h;e[0]=t+r*a,e[4]=n*a-i,e[8]=s*l,e[1]=s*h,e[5]=s*c,e[9]=-a,e[2]=i*a-n,e[6]=r+t*a,e[10]=s*o}else if("ZXY"===t.order){const t=o*c,i=o*h,n=l*c,r=l*h;e[0]=t-r*a,e[4]=-s*h,e[8]=n+i*a,e[1]=i+n*a,e[5]=s*c,e[9]=r-t*a,e[2]=-s*l,e[6]=a,e[10]=s*o}else if("ZYX"===t.order){const t=s*c,i=s*h,n=a*c,r=a*h;e[0]=o*c,e[4]=n*l-i,e[8]=t*l+r,e[1]=o*h,e[5]=r*l+t,e[9]=i*l-n,e[2]=-l,e[6]=a*o,e[10]=s*o}else if("YZX"===t.order){const t=s*o,i=s*l,n=a*o,r=a*l;e[0]=o*c,e[4]=r-t*h,e[8]=n*h+i,e[1]=h,e[5]=s*c,e[9]=-a*c,e[2]=-l*c,e[6]=i*h+n,e[10]=t-r*h}else if("XZY"===t.order){const t=s*o,i=s*l,n=a*o,r=a*l;e[0]=o*c,e[4]=-h,e[8]=l*c,e[1]=t*h+r,e[5]=s*c,e[9]=i*h-n,e[2]=n*h-i,e[6]=a*c,e[10]=r*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(_t,t,bt)}lookAt(t,e,i){const n=this.elements;return Dt.subVectors(t,e),0===Dt.lengthSq()&&(Dt.z=1),Dt.normalize(),Mt.crossVectors(i,Dt),0===Mt.lengthSq()&&(1===Math.abs(i.z)?Dt.x+=1e-4:Dt.z+=1e-4,Dt.normalize(),Mt.crossVectors(i,Dt)),Mt.normalize(),It.crossVectors(Dt,Mt),n[0]=Mt.x,n[4]=It.x,n[8]=Dt.x,n[1]=Mt.y,n[5]=It.y,n[9]=Dt.y,n[2]=Mt.z,n[6]=It.z,n[10]=Dt.z,this}multiply(t,e){return void 0!==e?this.multiplyMatrices(t,e):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,r=this.elements,s=i[0],a=i[4],o=i[8],l=i[12],c=i[1],h=i[5],u=i[9],p=i[13],d=i[2],f=i[6],m=i[10],g=i[14],v=i[3],y=i[7],x=i[11],_=i[15],b=n[0],M=n[4],w=n[8],S=n[12],A=n[1],T=n[5],L=n[9],P=n[13],E=n[2],C=n[6],N=n[10],O=n[14],I=n[3],D=n[7],R=n[11],z=n[15];return r[0]=s*b+a*A+o*E+l*I,r[4]=s*M+a*T+o*C+l*D,r[8]=s*w+a*L+o*N+l*R,r[12]=s*S+a*P+o*O+l*z,r[1]=c*b+h*A+u*E+p*I,r[5]=c*M+h*T+u*C+p*D,r[9]=c*w+h*L+u*N+p*R,r[13]=c*S+h*P+u*O+p*z,r[2]=d*b+f*A+m*E+g*I,r[6]=d*M+f*T+m*C+g*D,r[10]=d*w+f*L+m*N+g*R,r[14]=d*S+f*P+m*O+g*z,r[3]=v*b+y*A+x*E+_*I,r[7]=v*M+y*T+x*C+_*D,r[11]=v*w+y*L+x*N+_*R,r[15]=v*S+y*P+x*O+_*z,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){var t=this.elements,e=t[0],i=t[4],n=t[8],r=t[12],s=t[1],a=t[5],o=t[9],l=t[13],c=t[2],h=t[6],u=t[10],p=t[14];return t[3]*(+r*o*h-n*l*h-r*a*u+i*l*u+n*a*p-i*o*p)+t[7]*(+e*o*p-e*l*u+r*s*u-n*s*p+n*l*c-r*o*c)+t[11]*(+e*l*h-e*a*p-r*s*h+i*s*p+r*a*c-i*l*c)+t[15]*(-n*a*c-e*o*h+e*a*u+n*s*h-i*s*u+i*o*c)}transpose(){const t=this.elements;var e=t[1];return t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const n=this.elements;return t.isVector3?(n[12]=t.x,n[13]=t.y,n[14]=t.z):(n[12]=t,n[13]=e,n[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8],h=t[9],u=t[10],p=t[11],d=t[12],f=t[13],m=t[14],g=t[15],v=h*m*l-f*u*l+f*o*p-a*m*p-h*o*g+a*u*g,y=d*u*l-c*m*l-d*o*p+s*m*p+c*o*g-s*u*g,x=c*f*l-d*h*l+d*a*p-s*f*p-c*a*g+s*h*g,_=d*h*o-c*f*o-d*a*u+s*f*u+c*a*m-s*h*m,b=e*v+i*y+n*x+r*_;if(0==b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);var M=1/b;return t[0]=v*M,t[1]=(f*u*r-h*m*r-f*n*p+i*m*p+h*n*g-i*u*g)*M,t[2]=(a*m*r-f*o*r+f*n*l-i*m*l-a*n*g+i*o*g)*M,t[3]=(h*o*r-a*u*r-h*n*l+i*u*l+a*n*p-i*o*p)*M,t[4]=y*M,t[5]=(c*m*r-d*u*r+d*n*p-e*m*p-c*n*g+e*u*g)*M,t[6]=(d*o*r-s*m*r-d*n*l+e*m*l+s*n*g-e*o*g)*M,t[7]=(s*u*r-c*o*r+c*n*l-e*u*l-s*n*p+e*o*p)*M,t[8]=x*M,t[9]=(d*h*r-c*f*r-d*i*p+e*f*p+c*i*g-e*h*g)*M,t[10]=(s*f*r-d*a*r+d*i*l-e*f*l-s*i*g+e*a*g)*M,t[11]=(c*a*r-s*h*r-c*i*l+e*h*l+s*i*p-e*a*p)*M,t[12]=_*M,t[13]=(c*f*n-d*h*n+d*i*u-e*f*u-c*i*m+e*h*m)*M,t[14]=(d*a*n-s*f*n-d*i*o+e*f*o+s*i*m-e*a*m)*M,t[15]=(s*h*n-c*a*n+c*i*o-e*h*o-s*i*u+e*a*u)*M,this}scale(t){const e=this.elements,i=t.x,n=t.y,r=t.z;return e[0]*=i,e[4]*=n,e[8]*=r,e[1]*=i,e[5]*=n,e[9]*=r,e[2]*=i,e[6]*=n,e[10]*=r,e[3]*=i,e[7]*=n,e[11]*=r,this}getMaxScaleOnAxis(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],t=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,t))}makeTranslation(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){var e=Math.cos(t),t=Math.sin(t);return this.set(1,0,0,0,0,e,-t,0,0,t,e,0,0,0,0,1),this}makeRotationY(t){var e=Math.cos(t),t=Math.sin(t);return this.set(e,0,t,0,0,1,0,0,-t,0,e,0,0,0,0,1),this}makeRotationZ(t){var e=Math.cos(t),t=Math.sin(t);return this.set(e,-t,0,0,t,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){var i=Math.cos(e),n=Math.sin(e),r=1-i,s=t.x,a=t.y,o=t.z,e=r*s,t=r*a;return this.set(e*s+i,e*a-n*o,e*o+n*a,0,e*a+n*o,t*a+i,t*o-n*s,0,e*o-n*a,t*o+n*s,r*o*o+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i){return this.set(1,e,i,0,t,1,i,0,t,e,1,0,0,0,0,1),this}compose(t,e,i){const n=this.elements,r=e._x,s=e._y,a=e._z,o=e._w,l=r+r,c=s+s,h=a+a,u=r*l,p=r*c,d=r*h,f=s*c,m=s*h,g=a*h,v=o*l,y=o*c,x=o*h,_=i.x,b=i.y,M=i.z;return n[0]=(1-(f+g))*_,n[1]=(p+x)*_,n[2]=(d-y)*_,n[3]=0,n[4]=(p-x)*b,n[5]=(1-(u+g))*b,n[6]=(m+v)*b,n[7]=0,n[8]=(d+y)*M,n[9]=(m-v)*M,n[10]=(1-(u+f))*M,n[11]=0,n[12]=t.x,n[13]=t.y,n[14]=t.z,n[15]=1,this}decompose(t,e,i){var n=this.elements;let r=yt.set(n[0],n[1],n[2]).length();var s=yt.set(n[4],n[5],n[6]).length(),a=yt.set(n[8],n[9],n[10]).length();this.determinant()<0&&(r=-r),t.x=n[12],t.y=n[13],t.z=n[14],xt.copy(this);var o=1/r,t=1/s,n=1/a;return xt.elements[0]*=o,xt.elements[1]*=o,xt.elements[2]*=o,xt.elements[4]*=t,xt.elements[5]*=t,xt.elements[6]*=t,xt.elements[8]*=n,xt.elements[9]*=n,xt.elements[10]*=n,e.setFromRotationMatrix(xt),i.x=r,i.y=s,i.z=a,this}makePerspective(t,e,i,n,r,s){const a=this.elements,o=2*r/(e-t),l=2*r/(i-n),c=(e+t)/(e-t),h=(i+n)/(i-n),u=-(s+r)/(s-r),p=-2*s*r/(s-r);return a[0]=o,a[4]=0,a[8]=c,a[12]=0,a[1]=0,a[5]=l,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=u,a[14]=p,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,i,n,r,s){const a=this.elements,o=1/(e-t),l=1/(i-n),c=1/(s-r),h=(e+t)*o,u=(i+n)*l,p=(s+r)*c;return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-u,a[2]=0,a[6]=0,a[10]=-2*c,a[14]=-p,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){var e=this.elements,i=t.elements;for(let t=0;t<16;t++)if(e[t]!==i[t])return!1;return!0}fromArray(e,i=0){for(let t=0;t<16;t++)this.elements[t]=e[t+i];return this}toArray(t=[],e=0){var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const yt=new Nt,xt=new Ot,_t=new Nt(0,0,0),bt=new Nt(1,1,1),Mt=new Nt,It=new Nt,Dt=new Nt;class Rt{constructor(t=0,e=0,i=0,n=Rt.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=t,this._y=e,this._z=i,this._order=n}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._order=n||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e,i){const n=Pt.clamp,r=t.elements,s=r[0],a=r[4],o=r[8],l=r[1],c=r[5],h=r[9],u=r[2],p=r[6],d=r[10];switch(e=e||this._order){case"XYZ":this._y=Math.asin(n(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(p,c),this._z=0);break;case"YXZ":this._x=Math.asin(-n(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(n(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-n(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(p,d),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(n(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-n(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(p,c),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-h,d),this._y=0)}return this._order=e,!1!==i&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return zt.makeRotationFromQuaternion(t),this.setFromRotationMatrix(zt,e,i)}setFromVector3(t,e){return this.set(t.x,t.y,t.z,e||this._order)}reorder(t){return Ft.setFromEuler(this),this.setFromQuaternion(Ft,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new Nt(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Rt.DefaultOrder="XYZ",Rt.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const zt=new Ot,Ft=new _;class Ut{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let Bt=0;const kt=new Nt,Vt=new _,jt=new Ot,Gt=new Nt,Wt=new Nt,Ht=new Nt,Xt=new _,Yt=new Nt(1,0,0),qt=new Nt(0,1,0),Zt=new Nt(0,0,1),Jt={type:"added"},Kt={type:"removed"};function Qt(){Object.defineProperty(this,"id",{value:Bt++}),this.uuid=Pt.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Qt.DefaultUp.clone();const t=new Nt,e=new Rt,i=new _,n=new Nt(1,1,1);e._onChange(function(){i.setFromEuler(e,!1)}),i._onChange(function(){e.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Ot},normalMatrix:{value:new v}}),this.matrix=new Ot,this.matrixWorld=new Ot,this.matrixAutoUpdate=Qt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Ut,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}Qt.DefaultUp=new Nt(0,1,0),Qt.DefaultMatrixAutoUpdate=!0,Qt.prototype=Object.assign(Object.create(c.prototype),{constructor:Qt,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return Vt.setFromAxisAngle(t,e),this.quaternion.multiply(Vt),this},rotateOnWorldAxis:function(t,e){return Vt.setFromAxisAngle(t,e),this.quaternion.premultiply(Vt),this},rotateX:function(t){return this.rotateOnAxis(Yt,t)},rotateY:function(t){return this.rotateOnAxis(qt,t)},rotateZ:function(t){return this.rotateOnAxis(Zt,t)},translateOnAxis:function(t,e){return kt.copy(t).applyQuaternion(this.quaternion),this.position.add(kt.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(Yt,t)},translateY:function(t){return this.translateOnAxis(qt,t)},translateZ:function(t){return this.translateOnAxis(Zt,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(jt.copy(this.matrixWorld).invert())},lookAt:function(t,e,i){t.isVector3?Gt.copy(t):Gt.set(t,e,i);i=this.parent;this.updateWorldMatrix(!0,!1),Wt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?jt.lookAt(Wt,Gt,this.up):jt.lookAt(Gt,Wt,this.up),this.quaternion.setFromRotationMatrix(jt),i&&(jt.extractRotation(i.matrixWorld),Vt.setFromRotationMatrix(jt),this.quaternion.premultiply(Vt.invert()))},add:function(t){if(1<arguments.length){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this||t&&t.isObject3D&&(null!==t.parent&&t.parent.remove(t),(t.parent=this).children.push(t),t.dispatchEvent(Jt)),this},remove:function(t){if(1<arguments.length){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}var e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Kt)),this},clear:function(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(Kt)}return this.children.length=0,this},attach:function(t){return this.updateWorldMatrix(!0,!1),jt.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),jt.multiply(t.parent.matrixWorld)),t.applyMatrix4(jt),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(i,n){if(this[i]===n)return this;for(let t=0,e=this.children.length;t<e;t++){var r=this.children[t].getObjectByProperty(i,n);if(void 0!==r)return r}},getWorldPosition:function(t){return void 0===t&&(t=new Nt),this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(t=new _),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Wt,t,Ht),t},getWorldScale:function(t){return void 0===t&&(t=new Nt),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Wt,Xt,t),t},getWorldDirection:function(t){void 0===t&&(t=new Nt),this.updateWorldMatrix(!0,!1);var e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(i){i(this);const n=this.children;for(let t=0,e=n.length;t<e;t++)n[t].traverse(i)},traverseVisible:function(i){if(!1!==this.visible){i(this);const n=this.children;for(let t=0,e=n.length;t<e;t++)n[t].traverseVisible(i)}},traverseAncestors:function(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(i){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||i)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),i=!(this.matrixWorldNeedsUpdate=!1));const n=this.children;for(let t=0,e=n.length;t<e;t++)n[t].updateMatrixWorld(i)},updateWorldMatrix:function(i,t){const e=this.parent;if(!0===i&&null!==e&&e.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const i=this.children;for(let t=0,e=i.length;t<e;t++)i[t].updateWorldMatrix(!1,!0)}},toJSON:function(i){const n=void 0===i||"string"==typeof i,r={};n&&(i={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},r.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const s={};function a(t,e){return void 0===t[e.uuid]&&(t[e.uuid]=e.toJSON(i)),e.uuid}if(s.uuid=this.uuid,s.type=this.type,""!==this.name&&(s.name=this.name),!0===this.castShadow&&(s.castShadow=!0),!0===this.receiveShadow&&(s.receiveShadow=!0),!1===this.visible&&(s.visible=!1),!1===this.frustumCulled&&(s.frustumCulled=!1),0!==this.renderOrder&&(s.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){s.geometry=a(i.geometries,this.geometry);const n=this.geometry.parameters;if(void 0!==n&&void 0!==n.shapes){const r=n.shapes;if(Array.isArray(r))for(let t=0,e=r.length;t<e;t++){const s=r[t];a(i.shapes,s)}else a(i.shapes,r)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(a(i.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const n=[];for(let t=0,e=this.material.length;t<e;t++)n.push(a(i.materials,this.material[t]));s.material=n}else s.material=a(i.materials,this.material);if(0<this.children.length){s.children=[];for(let t=0;t<this.children.length;t++)s.children.push(this.children[t].toJSON(i).object)}if(0<this.animations.length){s.animations=[];for(let t=0;t<this.animations.length;t++){const r=this.animations[t];s.animations.push(a(i.animations,r))}}if(n){const n=t(i.geometries),s=t(i.materials),a=t(i.textures),e=t(i.images),o=t(i.shapes),l=t(i.skeletons),c=t(i.animations);0<n.length&&(r.geometries=n),0<s.length&&(r.materials=s),0<a.length&&(r.textures=a),0<e.length&&(r.images=e),0<o.length&&(r.shapes=o),0<l.length&&(r.skeletons=l),0<c.length&&(r.animations=c)}return r.object=s,r;function t(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const i=e.children[t];this.add(i.clone())}return this}});const $t=new Nt,te=new Nt,ee=new v;class ie{constructor(t,e){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=void 0!==t?t:new Nt(1,0,0),this.constant=void 0!==e?e:0}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,i,n){return this.normal.set(t,e,i),this.constant=n,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,i){e=$t.subVectors(i,e).cross(te.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(e,t),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return(e=void 0===e?new Nt:e).copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){void 0===e&&(e=new Nt);var i=t.delta($t),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(t.start)?e.copy(t.start):void 0;n=-(t.start.dot(this.normal)+this.constant)/n;return n<0||1<n?void 0:e.copy(i).multiplyScalar(n).add(t.start)}intersectsLine(t){var e=this.distanceToPoint(t.start),t=this.distanceToPoint(t.end);return e<0&&0<t||t<0&&0<e}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return(t=void 0===t?new Nt:t).copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const i=e||ee.getNormalMatrix(t),n=this.coplanarPoint($t).applyMatrix4(t),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}const ne=new Nt,re=new Nt,se=new Nt,ae=new Nt,oe=new Nt,le=new Nt,ce=new Nt,he=new Nt,ue=new Nt,pe=new Nt;class de{constructor(t,e,i){this.a=void 0!==t?t:new Nt,this.b=void 0!==e?e:new Nt,this.c=void 0!==i?i:new Nt}static getNormal(t,e,i,n){(n=void 0===n?new Nt:n).subVectors(i,e),ne.subVectors(t,e),n.cross(ne);e=n.lengthSq();return 0<e?n.multiplyScalar(1/Math.sqrt(e)):n.set(0,0,0)}static getBarycoord(t,e,i,n,r){ne.subVectors(n,e),re.subVectors(i,e),se.subVectors(t,e);var s=ne.dot(ne),a=ne.dot(re),n=ne.dot(se),i=re.dot(re),t=re.dot(se),e=s*i-a*a;if(void 0===r&&(r=new Nt),0==e)return r.set(-2,-1,-1);e=1/e,i=(i*n-a*t)*e,e*=s*t-a*n;return r.set(1-i-e,e,i)}static containsPoint(t,e,i,n){return this.getBarycoord(t,e,i,n,ae),0<=ae.x&&0<=ae.y&&ae.x+ae.y<=1}static getUV(t,e,i,n,r,s,a,o){return this.getBarycoord(t,e,i,n,ae),o.set(0,0),o.addScaledVector(r,ae.x),o.addScaledVector(s,ae.y),o.addScaledVector(a,ae.z),o}static isFrontFacing(t,e,i,n){return ne.subVectors(i,e),re.subVectors(t,e),ne.cross(re).dot(n)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,n){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[n]),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return ne.subVectors(this.c,this.b),re.subVectors(this.a,this.b),.5*ne.cross(re).length()}getMidpoint(t){return(t=void 0===t?new Nt:t).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return de.getNormal(this.a,this.b,this.c,t)}getPlane(t){return(t=void 0===t?new ie:t).setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return de.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,i,n,r){return de.getUV(t,this.a,this.b,this.c,e,i,n,r)}containsPoint(t){return de.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return de.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){void 0===e&&(e=new Nt);var i=this.a,n=this.b,r=this.c;let s,a;oe.subVectors(n,i),le.subVectors(r,i),he.subVectors(t,i);var o=oe.dot(he),l=le.dot(he);if(o<=0&&l<=0)return e.copy(i);ue.subVectors(t,n);var c=oe.dot(ue),h=le.dot(ue);if(0<=c&&h<=c)return e.copy(n);var u=o*h-c*l;if(u<=0&&0<=o&&c<=0)return s=o/(o-c),e.copy(i).addScaledVector(oe,s);pe.subVectors(t,r);var p=oe.dot(pe),t=le.dot(pe);if(0<=t&&p<=t)return e.copy(r);o=p*l-o*t;if(o<=0&&0<=l&&t<=0)return a=l/(l-t),e.copy(i).addScaledVector(le,a);l=c*t-p*h;if(l<=0&&0<=h-c&&0<=p-t)return ce.subVectors(r,n),a=(h-c)/(h-c+(p-t)),e.copy(n).addScaledVector(ce,a);l=1/(l+o+u);return s=o*l,a=u*l,e.copy(i).addScaledVector(oe,s).addScaledVector(le,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const fe={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},me={h:0,s:0,l:0},ge={h:0,s:0,l:0};function ve(t,e,i){return i<0&&(i+=1),1<i&&--i,i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}function ye(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function xe(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class _e{constructor(t,e,i){return Object.defineProperty(this,"isColor",{value:!0}),void 0===e&&void 0===i?this.set(t):this.setRGB(t,e,i)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,i){return this.r=t,this.g=e,this.b=i,this}setHSL(t,e,i){return t=Pt.euclideanModulo(t,1),e=Pt.clamp(e,0,1),i=Pt.clamp(i,0,1),0===e?this.r=this.g=this.b=i:(this.r=ve(e=2*i-(i=i<=.5?i*(1+e):i+e-i*e),i,t+1/3),this.g=ve(e,i,t),this.b=ve(e,i,t-1/3)),this}setStyle(t){function e(t){void 0!==t&&parseFloat(t)}let i;if(i=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){let t;var n=i[1],r=i[2];switch(n){case"rgb":case"rgba":if(t=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[4]),this;if(t=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[4]),this;break;case"hsl":case"hsla":if(t=/^(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r)){const i=parseFloat(t[1])/360,s=parseInt(t[2],10)/100,a=parseInt(t[3],10)/100;return e(t[4]),this.setHSL(i,s,a)}}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=i[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&0<t.length?this.setColorName(t):this}setColorName(t){t=fe[t];return void 0!==t&&this.setHex(t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){e=0<e?1/e:1;return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=ye(t.r),this.g=ye(t.g),this.b=ye(t.b),this}copyLinearToSRGB(t){return this.r=xe(t.r),this.g=xe(t.g),this.b=xe(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(t={h:0,s:0,l:0});var e=this.r,i=this.g,n=this.b,r=Math.max(e,i,n),s=Math.min(e,i,n);let a,o;var l=(s+r)/2;if(s===r)a=0,o=0;else{const t=r-s;switch(o=l<=.5?t/(r+s):t/(2-r-s),r){case e:a=(i-n)/t+(i<n?6:0);break;case i:a=(n-e)/t+2;break;case n:a=(e-i)/t+4}a/=6}return t.h=a,t.s=o,t.l=l,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,i){return this.getHSL(me),me.h+=t,me.s+=e,me.l+=i,this.setHSL(me.h,me.s,me.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpHSL(t,e){this.getHSL(me),t.getHSL(ge);var i=Pt.lerp(me.h,ge.h,e),t=Pt.lerp(me.s,ge.s,e),e=Pt.lerp(me.l,ge.l,e);return this.setHSL(i,t,e),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}_e.NAMES=fe,_e.prototype.r=1,_e.prototype.g=1,_e.prototype.b=1;class be{constructor(t,e,i,n,r,s=0){this.a=t,this.b=e,this.c=i,this.normal=n&&n.isVector3?n:new Nt,this.vertexNormals=Array.isArray(n)?n:[],this.color=r&&r.isColor?r:new _e,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=s}clone(){return(new this.constructor).copy(this)}copy(i){this.a=i.a,this.b=i.b,this.c=i.c,this.normal.copy(i.normal),this.color.copy(i.color),this.materialIndex=i.materialIndex;for(let t=0,e=i.vertexNormals.length;t<e;t++)this.vertexNormals[t]=i.vertexNormals[t].clone();for(let t=0,e=i.vertexColors.length;t<e;t++)this.vertexColors[t]=i.vertexColors[t].clone();return this}}let Me=0;function we(){Object.defineProperty(this,"id",{value:Me++}),this.uuid=Pt.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=A,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=G,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=s,this.stencilZFail=s,this.stencilZPass=s,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function Se(t){we.call(this),this.type="MeshBasicMaterial",this.color=new _e(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}we.prototype=Object.assign(Object.create(c.prototype),{constructor:we,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const i in t){var e=t[i];if(void 0!==e)if("shading"!==i){const n=this[i];void 0!==n&&(n&&n.isColor?n.set(e):n&&n.isVector3&&e&&e.isVector3?n.copy(e):this[i]=e)}else this.flatShading=1===e}},toJSON:function(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(i.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,i.reflectivity=this.reflectivity,i.refractionRatio=this.refractionRatio,void 0!==this.combine&&(i.combine=this.combine),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(i.size=this.size),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),!0===this.flatShading&&(i.flatShading=this.flatShading),this.side!==A&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),0<this.alphaTest&&(i.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),1<this.wireframeLinewidth&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(i.morphTargets=!0),!0===this.morphNormals&&(i.morphNormals=!0),!0===this.skinning&&(i.skinning=!0),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),e){const e=n(t.textures),r=n(t.images);0<e.length&&(i.textures=e),0<r.length&&(i.images=r)}return i},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const i=e.clippingPlanes;let n=null;if(null!==i){const e=i.length;n=new Array(e);for(let t=0;t!==e;++t)n[t]=i[t].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(we.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),((Se.prototype=Object.create(we.prototype)).constructor=Se).prototype.isMeshBasicMaterial=!0,Se.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this};const Ae=new Nt,Te=new Et;function Le(t,e,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===i,this.usage=a,this.updateRange={offset:0,count:-1},this.version=0}function Pe(t,e,i){Le.call(this,new Int8Array(t),e,i)}function Ee(t,e,i){Le.call(this,new Uint8Array(t),e,i)}function Ce(t,e,i){Le.call(this,new Uint8ClampedArray(t),e,i)}function Ne(t,e,i){Le.call(this,new Int16Array(t),e,i)}function Oe(t,e,i){Le.call(this,new Uint16Array(t),e,i)}function Ie(t,e,i){Le.call(this,new Int32Array(t),e,i)}function De(t,e,i){Le.call(this,new Uint32Array(t),e,i)}function Re(t,e,i){Le.call(this,new Uint16Array(t),e,i)}function ze(t,e,i){Le.call(this,new Float32Array(t),e,i)}function Fe(t,e,i){Le.call(this,new Float64Array(t),e,i)}Object.defineProperty(Le.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Le.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(i,n,r){i*=this.itemSize,r*=n.itemSize;for(let t=0,e=this.itemSize;t<e;t++)this.array[i+t]=n.array[r+t];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(i){const n=this.array;let r=0;for(let e=0,t=i.length;e<t;e++){let t=i[e];void 0===t&&(t=new _e),n[r++]=t.r,n[r++]=t.g,n[r++]=t.b}return this},copyVector2sArray:function(i){const n=this.array;let r=0;for(let e=0,t=i.length;e<t;e++){let t=i[e];void 0===t&&(t=new Et),n[r++]=t.x,n[r++]=t.y}return this},copyVector3sArray:function(i){const n=this.array;let r=0;for(let e=0,t=i.length;e<t;e++){let t=i[e];void 0===t&&(t=new Nt),n[r++]=t.x,n[r++]=t.y,n[r++]=t.z}return this},copyVector4sArray:function(i){const n=this.array;let r=0;for(let e=0,t=i.length;e<t;e++){let t=i[e];void 0===t&&(t=new Ct),n[r++]=t.x,n[r++]=t.y,n[r++]=t.z,n[r++]=t.w}return this},applyMatrix3:function(i){if(2===this.itemSize)for(let t=0,e=this.count;t<e;t++)Te.fromBufferAttribute(this,t),Te.applyMatrix3(i),this.setXY(t,Te.x,Te.y);else if(3===this.itemSize)for(let t=0,e=this.count;t<e;t++)Ae.fromBufferAttribute(this,t),Ae.applyMatrix3(i),this.setXYZ(t,Ae.x,Ae.y,Ae.z);return this},applyMatrix4:function(i){for(let t=0,e=this.count;t<e;t++)Ae.x=this.getX(t),Ae.y=this.getY(t),Ae.z=this.getZ(t),Ae.applyMatrix4(i),this.setXYZ(t,Ae.x,Ae.y,Ae.z);return this},applyNormalMatrix:function(i){for(let t=0,e=this.count;t<e;t++)Ae.x=this.getX(t),Ae.y=this.getY(t),Ae.z=this.getZ(t),Ae.applyNormalMatrix(i),this.setXYZ(t,Ae.x,Ae.y,Ae.z);return this},transformDirection:function(i){for(let t=0,e=this.count;t<e;t++)Ae.x=this.getX(t),Ae.y=this.getY(t),Ae.z=this.getZ(t),Ae.transformDirection(i),this.setXYZ(t,Ae.x,Ae.y,Ae.z);return this},set:function(t,e=0){return this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this},setXYZ:function(t,e,i,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this},setXYZW:function(t,e,i,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),(Pe.prototype=Object.create(Le.prototype)).constructor=Pe,(Ee.prototype=Object.create(Le.prototype)).constructor=Ee,(Ce.prototype=Object.create(Le.prototype)).constructor=Ce,(Ne.prototype=Object.create(Le.prototype)).constructor=Ne,Oe.prototype=Object.create(Le.prototype),Oe.prototype.constructor=Oe,(Ie.prototype=Object.create(Le.prototype)).constructor=Ie,De.prototype=Object.create(Le.prototype),De.prototype.constructor=De,((Re.prototype=Object.create(Le.prototype)).constructor=Re).prototype.isFloat16BufferAttribute=!0,(ze.prototype=Object.create(Le.prototype)).constructor=ze,(Fe.prototype=Object.create(Le.prototype)).constructor=Fe;class Ue{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(t){const e=[];let i,n,r;var s=t.faces;for(n=0;n<s.length;n++){const t=s[n];t.materialIndex!==r&&(r=t.materialIndex,void 0!==i&&(i.count=3*n-i.start,e.push(i)),i={start:3*n,materialIndex:r})}void 0!==i&&(i.count=3*n-i.start,e.push(i)),this.groups=e}fromGeometry(t){const i=t.faces,n=t.vertices,r=t.faceVertexUvs,s=r[0]&&0<r[0].length,a=r[1]&&0<r[1].length,o=t.morphTargets,l=o.length;let c;if(0<l){c=[];for(let t=0;t<l;t++)c[t]={name:o[t].name,data:[]};this.morphTargets.position=c}var h=t.morphNormals,u=h.length;let p;if(0<u){p=[];for(let t=0;t<u;t++)p[t]={name:h[t].name,data:[]};this.morphTargets.normal=p}var d=t.skinIndices,f=t.skinWeights,m=d.length===n.length,g=f.length===n.length;0<n.length&&i.length;for(let e=0;e<i.length;e++){var v=i[e];this.vertices.push(n[v.a],n[v.b],n[v.c]);var y=v.vertexNormals;if(3===y.length)this.normals.push(y[0],y[1],y[2]);else{const t=v.normal;this.normals.push(t,t,t)}y=v.vertexColors;if(3===y.length)this.colors.push(y[0],y[1],y[2]);else{const t=v.color;this.colors.push(t,t,t)}if(!0===s){const i=r[0][e];void 0!==i?this.uvs.push(i[0],i[1],i[2]):this.uvs.push(new Et,new Et,new Et)}if(!0===a){const i=r[1][e];void 0!==i?this.uvs2.push(i[0],i[1],i[2]):this.uvs2.push(new Et,new Et,new Et)}for(let t=0;t<l;t++){const i=o[t].vertices;c[t].data.push(i[v.a],i[v.b],i[v.c])}for(let t=0;t<u;t++){const n=h[t].vertexNormals[e];p[t].data.push(n.a,n.b,n.c)}m&&this.skinIndices.push(d[v.a],d[v.b],d[v.c]),g&&this.skinWeights.push(f[v.a],f[v.b],f[v.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this}}function Be(i){if(0===i.length)return-1/0;let n=i[0];for(let t=1,e=i.length;t<e;++t)i[t]>n&&(n=i[t]);return n}const ke={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Ve(t,e){return new ke[t](e)}let je=1;const Ge=new Ot,We=new Qt,He=new Nt,Xe=new C,Ye=new C,qe=new Nt;function Ze(){Object.defineProperty(this,"id",{value:je+=2}),this.uuid=Pt.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}Ze.prototype=Object.assign(Object.create(c.prototype),{constructor:Ze,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){return Array.isArray(t)?this.index=new(65535<Be(t)?De:Oe)(t,1):this.index=t,this},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},hasAttribute:function(t){return void 0!==this.attributes[t]},addGroup:function(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(void 0!==i){const e=(new v).getNormalMatrix(t);i.applyNormalMatrix(e),i.needsUpdate=!0}const n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(t),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return Ge.makeRotationX(t),this.applyMatrix4(Ge),this},rotateY:function(t){return Ge.makeRotationY(t),this.applyMatrix4(Ge),this},rotateZ:function(t){return Ge.makeRotationZ(t),this.applyMatrix4(Ge),this},translate:function(t,e,i){return Ge.makeTranslation(t,e,i),this.applyMatrix4(Ge),this},scale:function(t,e,i){return Ge.makeScale(t,e,i),this.applyMatrix4(Ge),this},lookAt:function(t){return We.lookAt(t),We.updateMatrix(),this.applyMatrix4(We.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(He).negate(),this.translate(He.x,He.y,He.z),this},setFromObject:function(t){const e=t.geometry;if(t.isPoints||t.isLine){const t=new ze(3*e.vertices.length,3),i=new ze(3*e.colors.length,3);if(this.setAttribute("position",t.copyVector3sArray(e.vertices)),this.setAttribute("color",i.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){const t=new ze(e.lineDistances.length,1);this.setAttribute("lineDistance",t.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(i){const n=[];for(let t=0,e=i.length;t<e;t++){var r=i[t];n.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new ze(n,3)),this},updateFromObject:function(t){let e=t.geometry;if(t.isMesh){let t=e.__directGeometry;if(!0===e.elementsNeedUpdate&&(t=void 0,e.elementsNeedUpdate=!1),void 0===t)return this.fromGeometry(e);t.verticesNeedUpdate=e.verticesNeedUpdate,t.normalsNeedUpdate=e.normalsNeedUpdate,t.colorsNeedUpdate=e.colorsNeedUpdate,t.uvsNeedUpdate=e.uvsNeedUpdate,t.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=t}if(!0===e.verticesNeedUpdate){const t=this.attributes.position;void 0!==t&&(t.copyVector3sArray(e.vertices),t.needsUpdate=!0),e.verticesNeedUpdate=!1}if(!0===e.normalsNeedUpdate){const t=this.attributes.normal;void 0!==t&&(t.copyVector3sArray(e.normals),t.needsUpdate=!0),e.normalsNeedUpdate=!1}if(!0===e.colorsNeedUpdate){const t=this.attributes.color;void 0!==t&&(t.copyColorsArray(e.colors),t.needsUpdate=!0),e.colorsNeedUpdate=!1}if(e.uvsNeedUpdate){const t=this.attributes.uv;void 0!==t&&(t.copyVector2sArray(e.uvs),t.needsUpdate=!0),e.uvsNeedUpdate=!1}if(e.lineDistancesNeedUpdate){const t=this.attributes.lineDistance;void 0!==t&&(t.copyArray(e.lineDistances),t.needsUpdate=!0),e.lineDistancesNeedUpdate=!1}return e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new Ue).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){const i=new Float32Array(3*t.vertices.length);if(this.setAttribute("position",new Le(i,3).copyVector3sArray(t.vertices)),0<t.normals.length){const i=new Float32Array(3*t.normals.length);this.setAttribute("normal",new Le(i,3).copyVector3sArray(t.normals))}if(0<t.colors.length){const i=new Float32Array(3*t.colors.length);this.setAttribute("color",new Le(i,3).copyColorsArray(t.colors))}if(0<t.uvs.length){const i=new Float32Array(2*t.uvs.length);this.setAttribute("uv",new Le(i,2).copyVector2sArray(t.uvs))}if(0<t.uvs2.length){const i=new Float32Array(2*t.uvs2.length);this.setAttribute("uv2",new Le(i,2).copyVector2sArray(t.uvs2))}this.groups=t.groups;for(const i in t.morphTargets){const n=[],r=t.morphTargets[i];for(let t=0,e=r.length;t<e;t++){const i=r[t],s=new ze(3*i.data.length,3);s.name=i.name,n.push(s.copyVector3sArray(i.data))}this.morphAttributes[i]=n}if(0<t.skinIndices.length){const i=new ze(4*t.skinIndices.length,4);this.setAttribute("skinIndex",i.copyVector4sArray(t.skinIndices))}if(0<t.skinWeights.length){const i=new ze(4*t.skinWeights.length,4);this.setAttribute("skinWeight",i.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new C);var t=this.attributes.position,i=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)this.boundingBox.set(new Nt(-1/0,-1/0,-1/0),new Nt(1/0,1/0,1/0));else{if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),i)for(let t=0,e=i.length;t<e;t++){var n=i[t];Xe.setFromBufferAttribute(n),this.morphTargetsRelative?(qe.addVectors(this.boundingBox.min,Xe.min),this.boundingBox.expandByPoint(qe),qe.addVectors(this.boundingBox.max,Xe.max),this.boundingBox.expandByPoint(qe)):(this.boundingBox.expandByPoint(Xe.min),this.boundingBox.expandByPoint(Xe.max))}}else this.boundingBox.makeEmpty();isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)}},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new ct);var n=this.attributes.position,r=this.morphAttributes.position;if(n&&n.isGLBufferAttribute)this.boundingSphere.set(new Nt,1/0);else if(n){const l=this.boundingSphere.center;if(Xe.setFromBufferAttribute(n),r)for(let t=0,e=r.length;t<e;t++){var s=r[t];Ye.setFromBufferAttribute(s),this.morphTargetsRelative?(qe.addVectors(Xe.min,Ye.min),Xe.expandByPoint(qe),qe.addVectors(Xe.max,Ye.max),Xe.expandByPoint(qe)):(Xe.expandByPoint(Ye.min),Xe.expandByPoint(Ye.max))}Xe.getCenter(l);let i=0;for(let t=0,e=n.count;t<e;t++)qe.fromBufferAttribute(n,t),i=Math.max(i,l.distanceToSquared(qe));if(r)for(let t=0,e=r.length;t<e;t++){var a=r[t],o=this.morphTargetsRelative;for(let t=0,e=a.count;t<e;t++)qe.fromBufferAttribute(a,t),o&&(He.fromBufferAttribute(n,t),qe.add(He)),i=Math.max(i,l.distanceToSquared(qe))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)}},computeFaceNormals:function(){},computeVertexNormals:function(){const n=this.index,r=this.getAttribute("position");if(void 0!==r){let i=this.getAttribute("normal");if(void 0===i)i=new Le(new Float32Array(3*r.count),3),this.setAttribute("normal",i);else for(let t=0,e=i.count;t<e;t++)i.setXYZ(t,0,0,0);const l=new Nt,c=new Nt,h=new Nt,u=new Nt,p=new Nt,d=new Nt,f=new Nt,m=new Nt;if(n)for(let t=0,e=n.count;t<e;t+=3){var s=n.getX(t+0),a=n.getX(t+1),o=n.getX(t+2);l.fromBufferAttribute(r,s),c.fromBufferAttribute(r,a),h.fromBufferAttribute(r,o),f.subVectors(h,c),m.subVectors(l,c),f.cross(m),u.fromBufferAttribute(i,s),p.fromBufferAttribute(i,a),d.fromBufferAttribute(i,o),u.add(f),p.add(f),d.add(f),i.setXYZ(s,u.x,u.y,u.z),i.setXYZ(a,p.x,p.y,p.z),i.setXYZ(o,d.x,d.y,d.z)}else for(let t=0,e=r.count;t<e;t+=3)l.fromBufferAttribute(r,t+0),c.fromBufferAttribute(r,t+1),h.fromBufferAttribute(r,t+2),f.subVectors(h,c),m.subVectors(l,c),f.cross(m),i.setXYZ(t+0,f.x,f.y,f.z),i.setXYZ(t+1,f.x,f.y,f.z),i.setXYZ(t+2,f.x,f.y,f.z);this.normalizeNormals(),i.needsUpdate=!0}},merge:function(t,e){if(t&&t.isBufferGeometry){void 0===e&&(e=0);var i=this.attributes;for(const n in i)if(void 0!==t.attributes[n]){const r=i[n].array,s=t.attributes[n],a=s.array,o=s.itemSize*e,l=Math.min(a.length,r.length-o);for(let t=0,e=o;t<l;t++,e++)r[e]=a[t]}return this}},normalizeNormals:function(){const i=this.attributes.normal;for(let t=0,e=i.count;t<e;t++)qe.fromBufferAttribute(i,t),qe.normalize(),i.setXYZ(t,qe.x,qe.y,qe.z)},toNonIndexed:function(){function i(t,i){const n=t.array,r=t.itemSize,e=t.normalized,s=new n.constructor(i.length*r);let a=0,o=0;for(let t=0,e=i.length;t<e;t++){a=i[t]*r;for(let t=0;t<r;t++)s[o++]=n[a++]}return new Le(s,r,e)}if(null===this.index)return this;const n=new Ze,r=this.index.array,s=this.attributes;for(const t in s){const a=i(s[t],r);n.setAttribute(t,a)}const t=this.morphAttributes;for(const s in t){const a=[],o=t[s];for(let t=0,e=o.length;t<e;t++){const s=i(o[t],r);a.push(s)}n.morphAttributes[s]=a}n.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let t=0,e=a.length;t<e;t++){const r=a[t];n.addGroup(r.start,r.count,r.materialIndex)}return n},toJSON:function(){const i={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),0<Object.keys(this.userData).length&&(i.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(i[n]=t[n]);return i}i.data={attributes:{}};const t=this.index;null!==t&&(i.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const t in n){const r=n[t],s=r.toJSON(i.data);""!==r.name&&(s.name=r.name),i.data.attributes[t]=s}const r={};let s=!1;for(const t in this.morphAttributes){const n=this.morphAttributes[t],a=[];for(let t=0,e=n.length;t<e;t++){const r=n[t],s=r.toJSON(i.data);""!==r.name&&(s.name=r.name),a.push(s)}0<a.length&&(r[t]=a,s=!0)}s&&(i.data.morphAttributes=r,i.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;0<a.length&&(i.data.groups=JSON.parse(JSON.stringify(a)));const e=this.boundingSphere;return null!==e&&(i.data.boundingSphere={center:e.center.toArray(),radius:e.radius}),i},clone:function(){return(new Ze).copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const i={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(i));const r=t.attributes;for(const t in r){const n=r[t];this.setAttribute(t,n.clone(i))}var e=t.morphAttributes;for(const t in e){const n=[],r=e[t];for(let t=0,e=r.length;t<e;t++)n.push(r[t].clone(i));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;var s=t.groups;for(let t=0,e=s.length;t<e;t++){const i=s[t];this.addGroup(i.start,i.count,i.materialIndex)}const a=t.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Je=new Ot,Ke=new vt,Qe=new ct,$e=new Nt,ti=new Nt,ei=new Nt,ii=new Nt,ni=new Nt,ri=new Nt,si=new Nt,ai=new Nt,oi=new Nt,li=new Et,ci=new Et,hi=new Et,ui=new Nt,pi=new Nt;function di(t=new Ze,e=new Se){Qt.call(this),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}function fi(t,e,i,n,r,s,a,o){if(null===(e.side===V?n.intersectTriangle(a,s,r,!0,o):n.intersectTriangle(r,s,a,e.side!==j,o)))return null;pi.copy(o),pi.applyMatrix4(t.matrixWorld);o=i.ray.origin.distanceTo(pi);return o<i.near||o>i.far?null:{distance:o,point:pi.clone(),object:t}}function mi(t,i,n,e,r,s,a,o,l,c,h,u){$e.fromBufferAttribute(r,c),ti.fromBufferAttribute(r,h),ei.fromBufferAttribute(r,u);var p=t.morphTargetInfluences;if(i.morphTargets&&s&&p){si.set(0,0,0),ai.set(0,0,0),oi.set(0,0,0);for(let t=0,e=s.length;t<e;t++){const i=p[t],n=s[t];0!==i&&(ii.fromBufferAttribute(n,c),ni.fromBufferAttribute(n,h),ri.fromBufferAttribute(n,u),a?(si.addScaledVector(ii,i),ai.addScaledVector(ni,i),oi.addScaledVector(ri,i)):(si.addScaledVector(ii.sub($e),i),ai.addScaledVector(ni.sub(ti),i),oi.addScaledVector(ri.sub(ei),i)))}$e.add(si),ti.add(ai),ei.add(oi)}t.isSkinnedMesh&&(t.boneTransform(c,$e),t.boneTransform(h,ti),t.boneTransform(u,ei));const d=fi(t,i,n,e,$e,ti,ei,ui);if(d){o&&(li.fromBufferAttribute(o,c),ci.fromBufferAttribute(o,h),hi.fromBufferAttribute(o,u),d.uv=de.getUV(ui,$e,ti,ei,li,ci,hi,new Et)),l&&(li.fromBufferAttribute(l,c),ci.fromBufferAttribute(l,h),hi.fromBufferAttribute(l,u),d.uv2=de.getUV(ui,$e,ti,ei,li,ci,hi,new Et));const t=new be(c,h,u);de.getNormal($e,ti,ei,t.normal),d.face=t}return d}di.prototype=Object.assign(Object.create(Qt.prototype),{constructor:di,isMesh:!0,copy:function(t){return Qt.prototype.copy.call(this,t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this},updateMorphTargets:function(){const i=this.geometry;if(i.isBufferGeometry){var t=i.morphAttributes,e=Object.keys(t);if(0<e.length){const i=t[e[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=i.length;t<e;t++){var n=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{e=i.morphTargets;void 0!==e&&e.length}},raycast:function(r,s){const t=this.geometry,a=this.material,o=this.matrixWorld;if(void 0!==a&&(null===t.boundingSphere&&t.computeBoundingSphere(),Qe.copy(t.boundingSphere),Qe.applyMatrix4(o),!1!==r.ray.intersectsSphere(Qe)&&(Je.copy(o).invert(),Ke.copy(r.ray).applyMatrix4(Je),null===t.boundingBox||!1!==Ke.intersectsBox(t.boundingBox)))){let n;if(t.isBufferGeometry){const o=t.index,v=t.attributes.position,y=t.morphAttributes.position,x=t.morphTargetsRelative,_=t.attributes.uv,b=t.attributes.uv2,M=t.groups,w=t.drawRange;if(null!==o)if(Array.isArray(a))for(let t=0,e=M.length;t<e;t++){var i=M[t],l=a[i.materialIndex];for(let t=Math.max(i.start,w.start),e=Math.min(i.start+i.count,w.start+w.count);t<e;t+=3){const a=o.getX(t),S=o.getX(t+1),A=o.getX(t+2);n=mi(this,l,r,Ke,v,y,x,_,b,a,S,A),n&&(n.faceIndex=Math.floor(t/3),n.face.materialIndex=i.materialIndex,s.push(n))}}else for(let t=Math.max(0,w.start),e=Math.min(o.count,w.start+w.count);t<e;t+=3){var c=o.getX(t),h=o.getX(t+1),u=o.getX(t+2);n=mi(this,a,r,Ke,v,y,x,_,b,c,h,u),n&&(n.faceIndex=Math.floor(t/3),s.push(n))}else if(void 0!==v)if(Array.isArray(a))for(let t=0,e=M.length;t<e;t++){const o=M[t],T=a[o.materialIndex];for(let t=Math.max(o.start,w.start),e=Math.min(o.start+o.count,w.start+w.count);t<e;t+=3)n=mi(this,T,r,Ke,v,y,x,_,b,t,t+1,t+2),n&&(n.faceIndex=Math.floor(t/3),n.face.materialIndex=o.materialIndex,s.push(n))}else for(let t=Math.max(0,w.start),e=Math.min(v.count,w.start+w.count);t<e;t+=3)n=mi(this,a,r,Ke,v,y,x,_,b,t,t+1,t+2),n&&(n.faceIndex=Math.floor(t/3),s.push(n))}else if(t.isGeometry){const o=Array.isArray(a),L=t.vertices,P=t.faces;let i;var e=t.faceVertexUvs[0];0<e.length&&(i=e);for(let t=0,e=P.length;t<e;t++){var p=P[t],d=o?a[p.materialIndex]:a;if(void 0!==d){var f=L[p.a],m=L[p.b],g=L[p.c];if(n=fi(this,d,r,Ke,f,m,g,ui),n){if(i&&i[t]){const r=i[t];li.copy(r[0]),ci.copy(r[1]),hi.copy(r[2]),n.uv=de.getUV(ui,f,m,g,li,ci,hi,new Et)}n.face=p,n.faceIndex=t,s.push(n)}}}}}}});class gi extends Ze{constructor(t=1,e=1,i=1,n=1,r=1,s=1){super(),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:s};const b=this;n=Math.floor(n),r=Math.floor(r),s=Math.floor(s);const M=[],w=[],S=[],A=[];let T=0,L=0;function a(i,n,r,s,a,o,t,l,c,h,e){var u=o/c,p=t/h,d=o/2,f=t/2,m=l/2,g=c+1,v=h+1;let y=0,x=0;const _=new Nt;for(let e=0;e<v;e++){const b=e*p-f;for(let t=0;t<g;t++){const T=t*u-d;_[i]=T*s,_[n]=b*a,_[r]=m,w.push(_.x,_.y,_.z),_[i]=0,_[n]=0,_[r]=0<l?1:-1,S.push(_.x,_.y,_.z),A.push(t/c),A.push(1-e/h),y+=1}}for(let e=0;e<h;e++)for(let t=0;t<c;t++){const r=T+t+g*e,s=T+t+g*(e+1),a=T+(t+1)+g*(e+1),o=T+(t+1)+g*e;M.push(r,s,o),M.push(s,a,o),x+=6}b.addGroup(L,x,e),L+=x,T+=y}a("z","y","x",-1,-1,i,e,t,s,r,0),a("z","y","x",1,-1,i,e,-t,s,r,1),a("x","z","y",1,1,t,i,e,n,s,2),a("x","z","y",1,-1,t,i,-e,n,s,3),a("x","y","z",1,-1,t,e,i,n,r,4),a("x","y","z",-1,-1,t,e,-i,n,r,5),this.setIndex(M),this.setAttribute("position",new ze(w,3)),this.setAttribute("normal",new ze(S,3)),this.setAttribute("uv",new ze(A,2))}}function vi(t){const e={};for(const i in t){e[i]={};for(const n in t[i]){const r=t[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[i][n]=r.clone():Array.isArray(r)?e[i][n]=r.slice():e[i][n]=r}}return e}function yi(e){const i={};for(let t=0;t<e.length;t++){var n=vi(e[t]);for(const e in n)i[e]=n[e]}return i}const xi={clone:vi,merge:yi};function _i(t){we.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(t.attributes,this.setValues(t))}function bi(){Qt.call(this),this.type="Camera",this.matrixWorldInverse=new Ot,this.projectionMatrix=new Ot,this.projectionMatrixInverse=new Ot}function Mi(t=50,e=1,i=.1,n=2e3){bi.call(this),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}((_i.prototype=Object.create(we.prototype)).constructor=_i).prototype.isShaderMaterial=!0,_i.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=vi(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this},_i.prototype.toJSON=function(t){const e=we.prototype.toJSON.call(this,t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const n=this.uniforms[i].value;n&&n.isTexture?e.uniforms[i]={type:"t",value:n.toJSON(t).uuid}:n&&n.isColor?e.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?e.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?e.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?e.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?e.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?e.uniforms[i]={type:"m4",value:n.toArray()}:e.uniforms[i]={value:n}}0<Object.keys(this.defines).length&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const i={};for(const t in this.extensions)!0===this.extensions[t]&&(i[t]=!0);return 0<Object.keys(i).length&&(e.extensions=i),e},bi.prototype=Object.assign(Object.create(Qt.prototype),{constructor:bi,isCamera:!0,copy:function(t,e){return Qt.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(t=new Nt),this.updateWorldMatrix(!0,!1);var e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){Qt.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(t,e){Qt.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}}),Mi.prototype=Object.assign(Object.create(bi.prototype),{constructor:Mi,isPerspectiveCamera:!0,copy:function(t,e){return bi.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){t=.5*this.getFilmHeight()/t;this.fov=2*Pt.RAD2DEG*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){var t=Math.tan(.5*Pt.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*Pt.RAD2DEG*Math.atan(Math.tan(.5*Pt.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,i,n,r,s){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=this.near;let e=t*Math.tan(.5*Pt.DEG2RAD*this.fov)/this.zoom,i=2*e,n=this.aspect*i,r=-.5*n;var s=this.view;if(null!==this.view&&this.view.enabled){const t=s.fullWidth,a=s.fullHeight;r+=s.offsetX*n/t,e-=s.offsetY*i/a,n*=s.width/t,i*=s.height/a}const a=this.filmOffset;0!==a&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,e,e-i,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=Qt.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});function wi(t,e,s){if(Qt.call(this),this.type="CubeCamera",!0===s.isWebGLCubeRenderTarget){this.renderTarget=s;const a=new Mi(90,1,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new Nt(1,0,0)),this.add(a);const o=new Mi(90,1,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new Nt(-1,0,0)),this.add(o);const l=new Mi(90,1,t,e);l.layers=this.layers,l.up.set(0,0,1),l.lookAt(new Nt(0,1,0)),this.add(l);const c=new Mi(90,1,t,e);c.layers=this.layers,c.up.set(0,0,-1),c.lookAt(new Nt(0,-1,0)),this.add(c);const h=new Mi(90,1,t,e);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new Nt(0,0,1)),this.add(h);const u=new Mi(90,1,t,e);u.layers=this.layers,u.up.set(0,-1,0),u.lookAt(new Nt(0,0,-1)),this.add(u),this.update=function(t,e){null===this.parent&&this.updateMatrixWorld();var i=t.xr.enabled,n=t.getRenderTarget();t.xr.enabled=!1;var r=s.texture.generateMipmaps;s.texture.generateMipmaps=!1,t.setRenderTarget(s,0),t.render(e,a),t.setRenderTarget(s,1),t.render(e,o),t.setRenderTarget(s,2),t.render(e,l),t.setRenderTarget(s,3),t.render(e,c),t.setRenderTarget(s,4),t.render(e,h),s.texture.generateMipmaps=r,t.setRenderTarget(s,5),t.render(e,u),t.setRenderTarget(n),t.xr.enabled=i}}}function Si(t,e,i,n,r,s,a,o,l,c){t=void 0!==t?t:[],e=void 0!==e?e:w,a=void 0!==a?a:Q,g.call(this,t,e,i,n,r,s,a,o,l,c),this.flipY=!1,this._needsFlipEnvMap=!0}function Ai(t,e,i){Number.isInteger(e)&&(e=i),E.call(this,t,t,e),this.texture=new Si(void 0,(e=e||{}).mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture._needsFlipEnvMap=!1}function Ti(t,e,i,n,r,s,a,o,l,c,h,u){g.call(this,null,s,a,o,l,c,n,r,h,u),this.image={data:t||null,width:e||1,height:i||1},this.magFilter=void 0!==l?l:W,this.minFilter=void 0!==c?c:W,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}(wi.prototype=Object.create(Qt.prototype)).constructor=wi,((Si.prototype=Object.create(g.prototype)).constructor=Si).prototype.isCubeTexture=!0,Object.defineProperty(Si.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}}),((Ai.prototype=Object.create(E.prototype)).constructor=Ai).prototype.isWebGLCubeRenderTarget=!0,Ai.prototype.fromEquirectangularTexture=function(t,e){this.texture.type=e.type,this.texture.format=Tt,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const i={tEquirect:{value:null}},n="\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t",r="\n\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t",s=new gi(5,5,5),a=new _i({name:"CubemapFromEquirect",uniforms:vi(i),vertexShader:n,fragmentShader:r,side:V,blending:0});a.uniforms.tEquirect.value=e;const o=new di(s,a),l=e.minFilter;return e.minFilter===q&&(e.minFilter=Y),new wi(1,10,this).update(t,o),e.minFilter=l,o.geometry.dispose(),o.material.dispose(),this},Ai.prototype.clear=function(e,i,n,r){var t=e.getRenderTarget();for(let t=0;t<6;t++)e.setRenderTarget(this,t),e.clear(i,n,r);e.setRenderTarget(t)},((Ti.prototype=Object.create(g.prototype)).constructor=Ti).prototype.isDataTexture=!0;const Li=new ct,Pi=new Nt;class Ei{constructor(t,e,i,n,r,s){this.planes=[void 0!==t?t:new ie,void 0!==e?e:new ie,void 0!==i?i:new ie,void 0!==n?n:new ie,void 0!==r?r:new ie,void 0!==s?s:new ie]}set(t,e,i,n,r,s){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(i),a[3].copy(n),a[4].copy(r),a[5].copy(s),this}clone(){return(new this.constructor).copy(this)}copy(e){const i=this.planes;for(let t=0;t<6;t++)i[t].copy(e.planes[t]);return this}setFromProjectionMatrix(t){const e=this.planes,i=t.elements,n=i[0],r=i[1],s=i[2],a=i[3],o=i[4],l=i[5],c=i[6],h=i[7],u=i[8],p=i[9],d=i[10],f=i[11],m=i[12],g=i[13],v=i[14],y=i[15];return e[0].setComponents(a-n,h-o,f-u,y-m).normalize(),e[1].setComponents(a+n,h+o,f+u,y+m).normalize(),e[2].setComponents(a+r,h+l,f+p,y+g).normalize(),e[3].setComponents(a-r,h-l,f-p,y-g).normalize(),e[4].setComponents(a-s,h-c,f-d,y-v).normalize(),e[5].setComponents(a+s,h+c,f+d,y+v).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),Li.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Li)}intersectsSprite(t){return Li.center.set(0,0,0),Li.radius=.7071067811865476,Li.applyMatrix4(t.matrixWorld),this.intersectsSphere(Li)}intersectsSphere(t){const e=this.planes,i=t.center,n=-t.radius;for(let t=0;t<6;t++)if(e[t].distanceToPoint(i)<n)return!1;return!0}intersectsBox(e){var i=this.planes;for(let t=0;t<6;t++){const n=i[t];if(Pi.x=(0<n.normal.x?e.max:e.min).x,Pi.y=(0<n.normal.y?e.max:e.min).y,Pi.z=(0<n.normal.z?e.max:e.min).z,n.distanceToPoint(Pi)<0)return!1}return!0}containsPoint(e){const i=this.planes;for(let t=0;t<6;t++)if(i[t].distanceToPoint(e)<0)return!1;return!0}}function Ci(){let i=null,t=!1,n=null,r=null;function s(t,e){n(t,e),r=i.requestAnimationFrame(s)}return{start:function(){!0!==t&&null!==n&&(r=i.requestAnimationFrame(s),t=!0)},stop:function(){i.cancelAnimationFrame(r),t=!1},setAnimationLoop:function(t){n=t},setContext:function(t){i=t}}}function Ni(a,t){const o=t.isWebGL2,n=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),n.get(t)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);var e=n.get(t);e&&(a.deleteBuffer(e.buffer),n.delete(t))},update:function(t,e){if(t.isGLBufferAttribute){const a=n.get(t);(!a||a.version<t.version)&&n.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version})}else{t.isInterleavedBufferAttribute&&(t=t.data);const i=n.get(t);void 0===i?n.set(t,function(t,e){var i=t.array,n=t.usage,r=a.createBuffer();a.bindBuffer(e,r),a.bufferData(e,i,n),t.onUploadCallback();let s=5126;return i instanceof Float32Array?s=5126:i instanceof Float64Array||(i instanceof Uint16Array?t.isFloat16BufferAttribute?o&&(s=5131):s=5123:i instanceof Int16Array?s=5122:i instanceof Uint32Array?s=5125:i instanceof Int32Array?s=5124:i instanceof Int8Array?s=5120:i instanceof Uint8Array&&(s=5121)),{buffer:r,type:s,bytesPerElement:i.BYTES_PER_ELEMENT,version:t.version}}(t,e)):i.version<t.version&&(function(t,e,i){const n=e.array,r=e.updateRange;a.bindBuffer(i,t),-1===r.count?a.bufferSubData(i,0,n):(o?a.bufferSubData(i,r.offset*n.BYTES_PER_ELEMENT,n,r.offset,r.count):a.bufferSubData(i,r.offset*n.BYTES_PER_ELEMENT,n.subarray(r.offset,r.offset+r.count)),r.count=-1)}(i.buffer,t,e),i.version=t.version)}}}}class Oi extends Ze{constructor(t=1,i=1,n=1,r=1){super(),this.type="PlaneBufferGeometry",this.parameters={width:t,height:i,widthSegments:n,heightSegments:r};const s=t/2,a=i/2,o=Math.floor(n),l=Math.floor(r),c=o+1,h=l+1,u=t/o,p=i/l,d=[],f=[],m=[],g=[];for(let e=0;e<h;e++){const i=e*p-a;for(let t=0;t<c;t++){const r=t*u-s;f.push(r,-i,0),m.push(0,0,1),g.push(t/o),g.push(1-e/l)}}for(let e=0;e<l;e++)for(let t=0;t<o;t++){const n=t+c*e,r=t+c*(e+1),s=t+1+c*(e+1),a=t+1+c*e;d.push(n,r,a),d.push(r,s,a)}this.setIndex(d),this.setAttribute("position",new ze(f,3)),this.setAttribute("normal",new ze(m,3)),this.setAttribute("uv",new ze(g,2))}}const Ii={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor.xyz *= color.xyz;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Di={common:{diffuse:{value:new _e(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new v},uv2Transform:{value:new v},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Et(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new _e(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new _e(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new v}},sprite:{diffuse:{value:new _e(15658734)},opacity:{value:1},center:{value:new Et(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new v}}},Ri={basic:{uniforms:yi([Di.common,Di.specularmap,Di.envmap,Di.aomap,Di.lightmap,Di.fog]),vertexShader:Ii.meshbasic_vert,fragmentShader:Ii.meshbasic_frag},lambert:{uniforms:yi([Di.common,Di.specularmap,Di.envmap,Di.aomap,Di.lightmap,Di.emissivemap,Di.fog,Di.lights,{emissive:{value:new _e(0)}}]),vertexShader:Ii.meshlambert_vert,fragmentShader:Ii.meshlambert_frag},phong:{uniforms:yi([Di.common,Di.specularmap,Di.envmap,Di.aomap,Di.lightmap,Di.emissivemap,Di.bumpmap,Di.normalmap,Di.displacementmap,Di.fog,Di.lights,{emissive:{value:new _e(0)},specular:{value:new _e(1118481)},shininess:{value:30}}]),vertexShader:Ii.meshphong_vert,fragmentShader:Ii.meshphong_frag},standard:{uniforms:yi([Di.common,Di.envmap,Di.aomap,Di.lightmap,Di.emissivemap,Di.bumpmap,Di.normalmap,Di.displacementmap,Di.roughnessmap,Di.metalnessmap,Di.fog,Di.lights,{emissive:{value:new _e(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ii.meshphysical_vert,fragmentShader:Ii.meshphysical_frag},toon:{uniforms:yi([Di.common,Di.aomap,Di.lightmap,Di.emissivemap,Di.bumpmap,Di.normalmap,Di.displacementmap,Di.gradientmap,Di.fog,Di.lights,{emissive:{value:new _e(0)}}]),vertexShader:Ii.meshtoon_vert,fragmentShader:Ii.meshtoon_frag},matcap:{uniforms:yi([Di.common,Di.bumpmap,Di.normalmap,Di.displacementmap,Di.fog,{matcap:{value:null}}]),vertexShader:Ii.meshmatcap_vert,fragmentShader:Ii.meshmatcap_frag},points:{uniforms:yi([Di.points,Di.fog]),vertexShader:Ii.points_vert,fragmentShader:Ii.points_frag},dashed:{uniforms:yi([Di.common,Di.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ii.linedashed_vert,fragmentShader:Ii.linedashed_frag},depth:{uniforms:yi([Di.common,Di.displacementmap]),vertexShader:Ii.depth_vert,fragmentShader:Ii.depth_frag},normal:{uniforms:yi([Di.common,Di.bumpmap,Di.normalmap,Di.displacementmap,{opacity:{value:1}}]),vertexShader:Ii.normal_vert,fragmentShader:Ii.normal_frag},sprite:{uniforms:yi([Di.sprite,Di.fog]),vertexShader:Ii.sprite_vert,fragmentShader:Ii.sprite_frag},background:{uniforms:{uvTransform:{value:new v},t2D:{value:null}},vertexShader:Ii.background_vert,fragmentShader:Ii.background_frag},cube:{uniforms:yi([Di.envmap,{opacity:{value:1}}]),vertexShader:Ii.cube_vert,fragmentShader:Ii.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ii.equirect_vert,fragmentShader:Ii.equirect_frag},distanceRGBA:{uniforms:yi([Di.common,Di.displacementmap,{referencePosition:{value:new Nt},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ii.distanceRGBA_vert,fragmentShader:Ii.distanceRGBA_frag},shadow:{uniforms:yi([Di.lights,Di.fog,{color:{value:new _e(0)},opacity:{value:1}}]),vertexShader:Ii.shadow_vert,fragmentShader:Ii.shadow_frag}};function zi(o,l,i,c,n){const h=new _e(0);let u,p,d=0,f=null,m=0,g=null;function v(t,e){i.buffers.color.setClear(t.r,t.g,t.b,e,n)}return{getClearColor:function(){return h},setClearColor:function(t,e=1){h.set(t),d=e,v(h,d)},getClearAlpha:function(){return d},setClearAlpha:function(t){d=t,v(h,d)},render:function(t,e,i,n){let r=!0===e.isScene?e.background:null;r&&r.isTexture&&(r=l.get(r));const s=o.xr,a=s.getSession&&s.getSession();a&&"additive"===a.environmentBlendMode&&(r=null),null===r?v(h,d):r&&r.isColor&&(v(r,1),n=!0),(o.autoClear||n)&&o.clear(o.autoClearColor,o.autoClearDepth,o.autoClearStencil),r&&(r.isCubeTexture||r.isWebGLCubeRenderTarget||r.mapping===T)?(void 0===p&&(p=new di(new gi(1,1,1),new _i({name:"BackgroundCubeMaterial",uniforms:vi(Ri.cube.uniforms),vertexShader:Ri.cube.vertexShader,fragmentShader:Ri.cube.fragmentShader,side:V,depthTest:!1,depthWrite:!1,fog:!1})),p.geometry.deleteAttribute("normal"),p.geometry.deleteAttribute("uv"),p.onBeforeRender=function(t,e,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(p.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),c.update(p)),r.isWebGLCubeRenderTarget&&(r=r.texture),p.material.uniforms.envMap.value=r,p.material.uniforms.flipEnvMap.value=r.isCubeTexture&&r._needsFlipEnvMap?-1:1,f===r&&m===r.version&&g===o.toneMapping||(p.material.needsUpdate=!0,f=r,m=r.version,g=o.toneMapping),t.unshift(p,p.geometry,p.material,0,0,null)):r&&r.isTexture&&(void 0===u&&(u=new di(new Oi(2,2),new _i({name:"BackgroundMaterial",uniforms:vi(Ri.background.uniforms),vertexShader:Ri.background.vertexShader,fragmentShader:Ri.background.fragmentShader,side:A,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),c.update(u)),u.material.uniforms.t2D.value=r,!0===r.matrixAutoUpdate&&r.updateMatrix(),u.material.uniforms.uvTransform.value.copy(r.matrix),f===r&&m===r.version&&g===o.toneMapping||(u.material.needsUpdate=!0,f=r,m=r.version,g=o.toneMapping),t.unshift(u,u.geometry,u.material,0,0,null))}}}function Fi(l,c,h,u){const r=l.getParameter(34921),o=u.isWebGL2?null:c.get("OES_vertex_array_object"),s=u.isWebGL2||null!==o,p={},t=m(null);let d=t;function f(t){return u.isWebGL2?l.bindVertexArray(t):o.bindVertexArrayOES(t)}function a(t){return u.isWebGL2?l.deleteVertexArray(t):o.deleteVertexArrayOES(t)}function m(t){const e=[],i=[],n=[];for(let t=0;t<r;t++)e[t]=0,i[t]=0,n[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:i,attributeDivisors:n,object:t,attributes:{},index:null}}function g(){const i=d.newAttributes;for(let t=0,e=i.length;t<e;t++)i[t]=0}function v(t){y(t,0)}function y(t,e){const i=d.newAttributes,n=d.enabledAttributes,r=d.attributeDivisors;i[t]=1,0===n[t]&&(l.enableVertexAttribArray(t),n[t]=1),r[t]!==e&&((u.isWebGL2?l:c.get("ANGLE_instanced_arrays"))[u.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](t,e),r[t]=e)}function x(){const i=d.newAttributes,n=d.enabledAttributes;for(let t=0,e=n.length;t<e;t++)n[t]!==i[t]&&(l.disableVertexAttribArray(t),n[t]=0)}function _(t,e,i,n,r,s){!0!==u.isWebGL2||5124!==i&&5125!==i?l.vertexAttribPointer(t,e,i,n,r,s):l.vertexAttribIPointer(t,e,i,r,s)}function b(){e(),d!==t&&(d=t,f(d.object))}function e(){t.geometry=null,t.program=null,t.wireframe=!1}return{setup:function(t,a,e,i,n){let r=!1;if(s){const c=function(t,e){var i=!0===a.wireframe;let n=p[t.id];void 0===n&&(n={},p[t.id]=n);let r=n[e.id];void 0===r&&(r={},n[e.id]=r);let s=r[i];return void 0===s&&(s=m(u.isWebGL2?l.createVertexArray():o.createVertexArrayOES()),r[i]=s),s}(i,e);d!==c&&(d=c,f(d.object)),r=function(t,e){var i=d.attributes,n=t.attributes;let r=0;for(const t in n){const e=i[t],s=n[t];if(void 0===e)return!0;if(e.attribute!==s)return!0;if(e.data!==s.data)return!0;r++}return d.attributesNum!==r||d.index!==e}(i,n),r&&function(t,e){const i={},n=t.attributes;let r=0;for(const t in n){const e=n[t],s={};(s.attribute=e).data&&(s.data=e.data),i[t]=s,r++}d.attributes=i,d.attributesNum=r,d.index=e}(i,n)}else{const l=!0===a.wireframe;d.geometry===i.id&&d.program===e.id&&d.wireframe===l||(d.geometry=i.id,d.program=e.id,d.wireframe=l,r=!0)}!0===t.isInstancedMesh&&(r=!0),null!==n&&h.update(n,34963),r&&(function(t,e,i,n){if(!1!==u.isWebGL2||!t.isInstancedMesh&&!n.isInstancedBufferGeometry||null!==c.get("ANGLE_instanced_arrays")){g();const r=n.attributes,s=i.getAttributes(),a=e.defaultAttributeValues;for(const c in s){const u=s[c];if(0<=u){const e=r[c];if(void 0!==e){const c=e.normalized,t=e.itemSize,i=h.get(e);if(void 0!==i){const r=i.buffer,s=i.type,a=i.bytesPerElement;if(e.isInterleavedBufferAttribute){const h=e.data,i=h.stride,o=e.offset;h&&h.isInstancedInterleavedBuffer?(y(u,h.meshPerAttribute),void 0===n._maxInstanceCount&&(n._maxInstanceCount=h.meshPerAttribute*h.count)):v(u),l.bindBuffer(34962,r),_(u,t,s,c,i*a,o*a)}else e.isInstancedBufferAttribute?(y(u,e.meshPerAttribute),void 0===n._maxInstanceCount&&(n._maxInstanceCount=e.meshPerAttribute*e.count)):v(u),l.bindBuffer(34962,r),_(u,t,s,c,0,0)}}else if("instanceMatrix"===c){const c=h.get(t.instanceMatrix);if(void 0!==c){const e=c.buffer,i=c.type;y(u+0,1),y(u+1,1),y(u+2,1),y(u+3,1),l.bindBuffer(34962,e),l.vertexAttribPointer(u+0,4,i,!1,64,0),l.vertexAttribPointer(u+1,4,i,!1,64,16),l.vertexAttribPointer(u+2,4,i,!1,64,32),l.vertexAttribPointer(u+3,4,i,!1,64,48)}}else if("instanceColor"===c){const c=h.get(t.instanceColor);if(void 0!==c){const e=c.buffer,i=c.type;y(u,1),l.bindBuffer(34962,e),l.vertexAttribPointer(u,3,i,!1,12,0)}}else if(void 0!==a){const h=a[c];if(void 0!==h)switch(h.length){case 2:l.vertexAttrib2fv(u,h);break;case 3:l.vertexAttrib3fv(u,h);break;case 4:l.vertexAttrib4fv(u,h);break;default:l.vertexAttrib1fv(u,h)}}}}x()}}(t,a,e,i),null!==n&&l.bindBuffer(34963,h.get(n).buffer))},reset:b,resetDefaultState:e,dispose:function(){b();for(const t in p){const e=p[t];for(const i in e){const n=e[i];for(const r in n)a(n[r].object),delete n[r];delete e[i]}delete p[t]}},releaseStatesOfGeometry:function(t){if(void 0!==p[t.id]){const e=p[t.id];for(const t in e){const i=e[t];for(const t in i)a(i[t].object),delete i[t];delete e[t]}delete p[t.id]}},releaseStatesOfProgram:function(t){for(const e in p){const i=p[e];if(void 0!==i[t.id]){const n=i[t.id];for(const t in n)a(n[t].object),delete n[t];delete i[t.id]}}},initAttributes:g,enableAttribute:v,disableUnusedAttributes:x}}function Ui(s,a,o,t){const l=t.isWebGL2;let c;this.setMode=function(t){c=t},this.render=function(t,e){s.drawArrays(c,t,e),o.update(e,c,1)},this.renderInstances=function(i,n,r){if(0!==r){let t,e;if(l)t=s,e="drawArraysInstanced";else if(t=a.get("ANGLE_instanced_arrays"),e="drawArraysInstancedANGLE",null===t)return;t[e](c,i,n,r),o.update(n,c,r)}}}function Bi(e,i,t){let n;function r(t){if("highp"===t){if(0<e.getShaderPrecisionFormat(35633,36338).precision&&0<e.getShaderPrecisionFormat(35632,36338).precision)return"highp";t="mediump"}return"mediump"===t&&0<e.getShaderPrecisionFormat(35633,36337).precision&&0<e.getShaderPrecisionFormat(35632,36337).precision?"mediump":"lowp"}var s="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let a=void 0!==t.precision?t.precision:"highp";var o=r(a);o!==a&&(a=o);var l=!0===t.logarithmicDepthBuffer,c=e.getParameter(34930),h=e.getParameter(35660),u=e.getParameter(3379),p=e.getParameter(34076),d=e.getParameter(34921),f=e.getParameter(36347),m=e.getParameter(36348),g=e.getParameter(36349),o=0<h,t=s||!!i.get("OES_texture_float");return{isWebGL2:s,getMaxAnisotropy:function(){if(void 0!==n)return n;var t=i.get("EXT_texture_filter_anisotropic");return n=null!==t?e.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,n},getMaxPrecision:r,precision:a,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:p,maxAttributes:d,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:o,floatFragmentTextures:t,floatVertexTextures:o&&t,maxSamples:s?e.getParameter(36183):0}}function ki(o){const e=this;let l=null,c=0,h=!1,u=!1;const p=new ie,d=new v,f={value:null,needsUpdate:!1};function m(){f.value!==l&&(f.value=l,f.needsUpdate=0<c),e.numPlanes=c,e.numIntersection=0}function g(i,t,n,r){var s=null!==i?i.length:0;let a=null;if(0!==s){if(a=f.value,!0!==r||null===a){const e=n+4*s,r=t.matrixWorldInverse;d.getNormalMatrix(r),(null===a||a.length<e)&&(a=new Float32Array(e));for(let t=0,e=n;t!==s;++t,e+=4)p.copy(i[t]).applyMatrix4(r,d),p.normal.toArray(a,e),a[e+3]=p.constant}f.value=a,f.needsUpdate=!0}return e.numPlanes=s,e.numIntersection=0,a}this.uniform=f,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,i){var n=0!==t.length||e||0!==c||h;return h=e,l=g(t,i,0),c=t.length,n},this.beginShadows=function(){u=!0,g(null)},this.endShadows=function(){u=!1,m()},this.setState=function(i,t,n){const r=i.clippingPlanes,s=i.clipIntersection,e=i.clipShadows,a=o.get(i);if(!h||null===r||0===r.length||u&&!e)u?g(null):m();else{const o=u?0:c,i=4*o;let e=a.clippingState||null;f.value=e,e=g(r,t,i,n);for(let t=0;t!==i;++t)e[t]=l[t];a.clippingState=e,this.numIntersection=s?this.numPlanes:0,this.numPlanes+=o}}}function Vi(s){let a=new WeakMap;function o(t,e){return 303===e?t.mapping=w:304===e&&(t.mapping=S),t}function l(t){const e=t.target;e.removeEventListener("dispose",l);const i=a.get(e);void 0!==i&&(a.delete(e),i.dispose())}return{get:function(t){if(t&&t.isTexture){var e=t.mapping;if(303===e||304===e){if(a.has(t))return o(a.get(t).texture,t.mapping);e=t.image;if(e&&0<e.height){const i=s.getRenderList(),n=s.getRenderTarget(),r=new Ai(e.height/2);return r.fromEquirectangularTexture(s,t),a.set(t,r),s.setRenderTarget(n),s.setRenderList(i),t.addEventListener("dispose",l),o(r.texture,t.mapping)}return null}}return t},dispose:function(){a=new WeakMap}}}function ji(i){const n={};return{has:function(t){if(void 0!==n[t])return null!==n[t];let e;switch(t){case"WEBGL_depth_texture":e=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":e=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":e=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":e=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:e=i.getExtension(t)}return n[t]=e,null!==e},get:function(t){return this.has(t),n[t]}}}function Gi(t,o,r,s){const a=new WeakMap,l=new WeakMap;function c(t){const e=t.target,i=a.get(e);null!==i.index&&o.remove(i.index);for(const n in i.attributes)o.remove(i.attributes[n]);e.removeEventListener("dispose",c),a.delete(e);t=l.get(i);t&&(o.remove(t),l.delete(i)),s.releaseStatesOfGeometry(i),!0===e.isInstancedBufferGeometry&&delete e._maxInstanceCount,r.memory.geometries--}function n(i){const n=[],r=i.index,s=i.attributes.position;let t=0;if(null!==r){const i=r.array;t=r.version;for(let t=0,e=i.length;t<e;t+=3){const r=i[t+0],s=i[t+1],l=i[t+2];n.push(r,s,s,l,l,r)}}else{const i=s.array;t=s.version;for(let t=0,e=i.length/3-1;t<e;t+=3){const i=t+0,r=t+1,s=t+2;n.push(i,r,r,s,s,i)}}const e=new(65535<Be(n)?De:Oe)(n,1);e.version=t;var a=l.get(i);a&&o.remove(a),l.set(i,e)}return{get:function(t,e){let i=a.get(e);return i||(e.addEventListener("dispose",c),e.isBufferGeometry?i=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new Ze).setFromObject(t)),i=e._bufferGeometry),a.set(e,i),r.memory.geometries++,i)},update:function(t){const i=t.attributes;for(const t in i)o.update(i[t],34962);var e=t.morphAttributes;for(const t in e){const i=e[t];for(let t=0,e=i.length;t<e;t++)o.update(i[t],34962)}},getWireframeAttribute:function(t){var e,i=l.get(t);return(!i||null!==(e=t.index)&&i.version<e.version)&&n(t),l.get(t)}}}function Wi(s,a,o,t){const l=t.isWebGL2;let c,h,u;this.setMode=function(t){c=t},this.setIndex=function(t){h=t.type,u=t.bytesPerElement},this.render=function(t,e){s.drawElements(c,e,h,t*u),o.update(e,c,1)},this.renderInstances=function(i,n,r){if(0!==r){let t,e;if(l)t=s,e="drawElementsInstanced";else if(t=a.get("ANGLE_instanced_arrays"),e="drawElementsInstancedANGLE",null===t)return;t[e](c,n,h,i*u,r),o.update(n,c,r)}}}function Hi(t){const n={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:n,programs:null,autoReset:!0,reset:function(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0},update:function(t,e,i){switch(n.calls++,e){case 4:n.triangles+=i*(t/3);break;case 1:n.lines+=i*(t/2);break;case 3:n.lines+=i*(t-1);break;case 2:n.lines+=i*t;break;case 0:n.points+=i*t}}}}function Xi(t,e){return t[0]-e[0]}function Yi(t,e){return Math.abs(e[1])-Math.abs(t[1])}function qi(u){const p={},d=new Float32Array(8),f=[];for(let t=0;t<8;t++)f[t]=[t,0];return{update:function(e,i,t,n){var r=e.morphTargetInfluences,s=void 0===r?0:r.length;let a=p[i.id];if(void 0===a){a=[];for(let t=0;t<s;t++)a[t]=[t,0];p[i.id]=a}for(let t=0;t<s;t++){const p=a[t];p[0]=t,p[1]=r[t]}a.sort(Yi);for(let t=0;t<8;t++)t<s&&a[t][1]?(f[t][0]=a[t][0],f[t][1]=a[t][1]):(f[t][0]=Number.MAX_SAFE_INTEGER,f[t][1]=0);f.sort(Xi);var o=t.morphTargets&&i.morphAttributes.position,l=t.morphNormals&&i.morphAttributes.normal;let c=0;for(let t=0;t<8;t++){const p=f[t],e=p[0],h=p[1];e!==Number.MAX_SAFE_INTEGER&&h?(o&&i.getAttribute("morphTarget"+t)!==o[e]&&i.setAttribute("morphTarget"+t,o[e]),l&&i.getAttribute("morphNormal"+t)!==l[e]&&i.setAttribute("morphNormal"+t,l[e]),d[t]=h,c+=h):(o&&!0===i.hasAttribute("morphTarget"+t)&&i.deleteAttribute("morphTarget"+t),l&&!0===i.hasAttribute("morphNormal"+t)&&i.deleteAttribute("morphNormal"+t),d[t]=0)}t=i.morphTargetsRelative?1:1-c;n.getUniforms().setValue(u,"morphTargetBaseInfluence",t),n.getUniforms().setValue(u,"morphTargetInfluences",d)}}}function Zi(t,r,s,a){let o=new WeakMap;function l(t){const e=t.target;e.removeEventListener("dispose",l),s.remove(e.instanceMatrix),null!==e.instanceColor&&s.remove(e.instanceColor)}return{update:function(t){const e=a.render.frame,i=t.geometry,n=r.get(t,i);return o.get(n)!==e&&(i.isGeometry&&n.updateFromObject(t),r.update(n),o.set(n,e)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",l)&&t.addEventListener("dispose",l),s.update(t.instanceMatrix,34962),null!==t.instanceColor&&s.update(t.instanceColor,34962)),n},dispose:function(){o=new WeakMap}}}function Ji(t=null,e=1,i=1,n=1){g.call(this,null),this.image={data:t,width:e,height:i,depth:n},this.magFilter=W,this.minFilter=W,this.wrapR=B,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function Ki(t=null,e=1,i=1,n=1){g.call(this,null),this.image={data:t,width:e,height:i,depth:n},this.magFilter=W,this.minFilter=W,this.wrapR=B,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Ri.physical={uniforms:yi([Ri.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Et(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new _e(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:Ii.meshphysical_vert,fragmentShader:Ii.meshphysical_frag},((Ji.prototype=Object.create(g.prototype)).constructor=Ji).prototype.isDataTexture2DArray=!0,((Ki.prototype=Object.create(g.prototype)).constructor=Ki).prototype.isDataTexture3D=!0;const Qi=new g,$i=new Ji,tn=new Ki,en=new Si,nn=[],rn=[],sn=new Float32Array(16),an=new Float32Array(9),on=new Float32Array(4);function ln(i,n,r){const t=i[0];if(t<=0||0<t)return i;var e=n*r;let s=nn[e];if(void 0===s&&(s=new Float32Array(e),nn[e]=s),0!==n){t.toArray(s,0);for(let t=1,e=0;t!==n;++t)e+=r,i[t].toArray(s,e)}return s}function cn(i,n){if(i.length===n.length){for(let t=0,e=i.length;t<e;t++)if(i[t]!==n[t])return;return 1}}function hn(i,n){for(let t=0,e=n.length;t<e;t++)i[t]=n[t]}function un(e,i){let n=rn[i];void 0===n&&(n=new Int32Array(i),rn[i]=n);for(let t=0;t!==i;++t)n[t]=e.allocateTextureUnit();return n}function pn(t,e){const i=this.cache;i[0]!==e&&(t.uniform1f(this.addr,e),i[0]=e)}function dn(t,e){const i=this.cache;void 0!==e.x?i[0]===e.x&&i[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),i[0]=e.x,i[1]=e.y):cn(i,e)||(t.uniform2fv(this.addr,e),hn(i,e))}function fn(t,e){const i=this.cache;void 0!==e.x?i[0]===e.x&&i[1]===e.y&&i[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),i[0]=e.x,i[1]=e.y,i[2]=e.z):void 0!==e.r?i[0]===e.r&&i[1]===e.g&&i[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),i[0]=e.r,i[1]=e.g,i[2]=e.b):cn(i,e)||(t.uniform3fv(this.addr,e),hn(i,e))}function mn(t,e){const i=this.cache;void 0!==e.x?i[0]===e.x&&i[1]===e.y&&i[2]===e.z&&i[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=e.w):cn(i,e)||(t.uniform4fv(this.addr,e),hn(i,e))}function gn(t,e){var i=this.cache,n=e.elements;void 0===n?cn(i,e)||(t.uniformMatrix2fv(this.addr,!1,e),hn(i,e)):cn(i,n)||(on.set(n),t.uniformMatrix2fv(this.addr,!1,on),hn(i,n))}function vn(t,e){var i=this.cache,n=e.elements;void 0===n?cn(i,e)||(t.uniformMatrix3fv(this.addr,!1,e),hn(i,e)):cn(i,n)||(an.set(n),t.uniformMatrix3fv(this.addr,!1,an),hn(i,n))}function yn(t,e){var i=this.cache,n=e.elements;void 0===n?cn(i,e)||(t.uniformMatrix4fv(this.addr,!1,e),hn(i,e)):cn(i,n)||(sn.set(n),t.uniformMatrix4fv(this.addr,!1,sn),hn(i,n))}function xn(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.safeSetTexture2D(e||Qi,r)}function _n(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTexture2DArray(e||$i,r)}function bn(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTexture3D(e||tn,r)}function Mn(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.safeSetTextureCube(e||en,r)}function wn(t,e){const i=this.cache;i[0]!==e&&(t.uniform1i(this.addr,e),i[0]=e)}function Sn(t,e){var i=this.cache;cn(i,e)||(t.uniform2iv(this.addr,e),hn(i,e))}function An(t,e){var i=this.cache;cn(i,e)||(t.uniform3iv(this.addr,e),hn(i,e))}function Tn(t,e){var i=this.cache;cn(i,e)||(t.uniform4iv(this.addr,e),hn(i,e))}function Ln(t,e){const i=this.cache;i[0]!==e&&(t.uniform1ui(this.addr,e),i[0]=e)}function Pn(t,e){t.uniform1fv(this.addr,e)}function En(t,e){t.uniform1iv(this.addr,e)}function Cn(t,e){t.uniform2iv(this.addr,e)}function Nn(t,e){t.uniform3iv(this.addr,e)}function On(t,e){t.uniform4iv(this.addr,e)}function In(t,e){e=ln(e,this.size,2);t.uniform2fv(this.addr,e)}function Dn(t,e){e=ln(e,this.size,3);t.uniform3fv(this.addr,e)}function Rn(t,e){e=ln(e,this.size,4);t.uniform4fv(this.addr,e)}function zn(t,e){e=ln(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,e)}function Fn(t,e){e=ln(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,e)}function Un(t,e){e=ln(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,e)}function Bn(t,e,i){var n=e.length,r=un(i,n);t.uniform1iv(this.addr,r);for(let t=0;t!==n;++t)i.safeSetTexture2D(e[t]||Qi,r[t])}function kn(t,e,i){var n=e.length,r=un(i,n);t.uniform1iv(this.addr,r);for(let t=0;t!==n;++t)i.safeSetTextureCube(e[t]||en,r[t])}function Vn(t,e,i){this.id=t,this.addr=i,this.cache=[],this.setValue=function(){switch(e.type){case 5126:return pn;case 35664:return dn;case 35665:return fn;case 35666:return mn;case 35674:return gn;case 35675:return vn;case 35676:return yn;case 5124:case 35670:return wn;case 35667:case 35671:return Sn;case 35668:case 35672:return An;case 35669:case 35673:return Tn;case 5125:return Ln;case 35678:case 36198:case 36298:case 36306:case 35682:return xn;case 35679:case 36299:case 36307:return bn;case 35680:case 36300:case 36308:case 36293:return Mn;case 36289:case 36303:case 36311:case 36292:return _n}}()}function jn(t,e,i){this.id=t,this.addr=i,this.cache=[],this.size=e.size,this.setValue=function(){switch(e.type){case 5126:return Pn;case 35664:return In;case 35665:return Dn;case 35666:return Rn;case 35674:return zn;case 35675:return Fn;case 35676:return Un;case 5124:case 35670:return En;case 35667:case 35671:return Cn;case 35668:case 35672:return Nn;case 35669:case 35673:return On;case 35678:case 36198:case 36298:case 36306:case 35682:return Bn;case 35680:case 36300:case 36308:case 36293:return kn}}()}function Gn(t){this.id=t,this.seq=[],this.map={}}jn.prototype.updateCache=function(t){var e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),hn(e,t)},Gn.prototype.setValue=function(i,n,r){var s=this.seq;for(let t=0,e=s.length;t!==e;++t){const a=s[t];a.setValue(i,n[a.id],r)}};const Wn=/(\w+)(\])?(\[|\.)?/g;function Hn(t,e){t.seq.push(e),t.map[e.id]=e}function Xn(e,i){this.seq=[],this.map={};const n=e.getProgramParameter(i,35718);for(let t=0;t<n;++t){const n=e.getActiveUniform(i,t);!function(t,i,n){var r=t.name,s=r.length;for(Wn.lastIndex=0;;){var a=Wn.exec(r),o=Wn.lastIndex;let e=a[1];var l="]"===a[2],a=a[3];if(l&&(e|=0),void 0===a||"["===a&&o+2===s){Hn(n,new(void 0===a?Vn:jn)(e,t,i));break}{let t=n.map[e];void 0===t&&(t=new Gn(e),Hn(n,t)),n=t}}}(n,e.getUniformLocation(i,n.name),this)}}function Yn(t,e,i){e=t.createShader(e);return t.shaderSource(e,i),t.compileShader(e),e}Xn.prototype.setValue=function(t,e,i,n){const r=this.map[e];void 0!==r&&r.setValue(t,i,n)},Xn.prototype.setOptional=function(t,e,i){e=e[i];void 0!==e&&this.setValue(t,i,e)},Xn.upload=function(i,n,r,s){for(let t=0,e=n.length;t!==e;++t){const a=n[t],o=r[a.id];!1!==o.needsUpdate&&a.setValue(i,o.value,s)}},Xn.seqWithValue=function(i,n){const r=[];for(let t=0,e=i.length;t!==e;++t){var s=i[t];s.id in n&&r.push(s)}return r};let qn=0;function Zn(t){switch(t){case Lt:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return["Linear","( value )"]}}function Jn(t,i,e){var n=t.getShaderParameter(i,35713),r=t.getShaderInfoLog(i).trim();return(!n||""!==r)&&"THREE.WebGLShader: gl.getShaderInfoLog() "+e+"\n"+r+function(){const e=t.getShaderSource(i).split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}()}function Kn(t,e){e=Zn(e);return"vec4 "+t+"( vec4 value ) { return "+e[0]+"ToLinear"+e[1]+"; }"}function Qn(t){return""!==t}function $n(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function tr(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const er=/^[ \t]*#include +<([\w\d./]+)>/gm;function ir(t){return t.replace(er,nr)}function nr(t,e){var i=Ii[e];if(void 0===i)throw new Error("Can not resolve #include <"+e+">");return ir(i)}const rr=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,sr=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ar(t){return t.replace(sr,lr).replace(rr,or)}function or(t,e,i,n){return lr(0,e,i,n)}function lr(t,e,i,n){let r="";for(let t=parseInt(e);t<parseInt(i);t++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return r}function cr(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function hr(i,n,r,t){const s=i.getContext(),e=r.defines;var a,o,l=r.vertexShader,c=r.fragmentShader;const h=function(){let t="SHADOWMAP_TYPE_BASIC";return 1===r.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===r.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===r.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}(),u=function(){let t="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case w:case S:t="ENVMAP_TYPE_CUBE";break;case T:case L:t="ENVMAP_TYPE_CUBE_UV"}return t}(),p=function(){let t="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case S:case L:t="ENVMAP_MODE_REFRACTION"}return t}(),d=function(){let t="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(),f=0<i.gammaFactor?i.gammaFactor:1,m=r.isWebGL2?"":[r.extensionDerivatives||r.envMapCubeUV||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||"physical"===r.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Qn).join("\n"),g=function(t){const e=[];for(const n in t){var i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(e),v=s.createProgram();let y,x,_=r.glslVersion?"#version "+r.glslVersion+"\n":"";r.isRawShaderMaterial?(y=[g].filter(Qn).join("\n"),0<y.length&&(y+="\n"),x=[m,g].filter(Qn).join("\n"),0<x.length&&(x+="\n")):(y=[cr(r),"#define SHADER_NAME "+r.shaderName,g,r.instancing?"#define USE_INSTANCING":"",r.instancingColor?"#define USE_INSTANCING_COLOR":"",r.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+f,"#define MAX_BONES "+r.maxBones,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+p:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.displacementMap&&r.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.flatShading?"#define FLAT_SHADED":"",r.skinning?"#define USE_SKINNING":"",r.useVertexTexture?"#define BONE_TEXTURE":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals&&!1===r.flatShading?"#define USE_MORPHNORMALS":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+h:"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Qn).join("\n"),x=[m,cr(r),"#define SHADER_NAME "+r.shaderName,g,r.alphaTest?"#define ALPHATEST "+r.alphaTest+(r.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+f,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.matcap?"#define USE_MATCAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+u:"",r.envMap?"#define "+p:"",r.envMap?"#define "+d:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.sheen?"#define USE_SHEEN":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors||r.instancingColor?"#define USE_COLOR":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.gradientMap?"#define USE_GRADIENTMAP":"",r.flatShading?"#define FLAT_SHADED":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+h:"",r.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",r.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(r.extensionShaderTextureLOD||r.envMap)&&r.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==r.toneMapping?"#define TONE_MAPPING":"",0!==r.toneMapping?Ii.tonemapping_pars_fragment:"",0!==r.toneMapping?function(t,e){let i;switch(e){case 1:i="Linear";break;case 2:i="Reinhard";break;case 3:i="OptimizedCineon";break;case 4:i="ACESFilmic";break;case 5:i="Custom";break;default:i="Linear"}return"vec3 "+t+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}("toneMapping",r.toneMapping):"",r.dithering?"#define DITHERING":"",Ii.encodings_pars_fragment,r.map?Kn("mapTexelToLinear",r.mapEncoding):"",r.matcap?Kn("matcapTexelToLinear",r.matcapEncoding):"",r.envMap?Kn("envMapTexelToLinear",r.envMapEncoding):"",r.emissiveMap?Kn("emissiveMapTexelToLinear",r.emissiveMapEncoding):"",r.lightMap?Kn("lightMapTexelToLinear",r.lightMapEncoding):"",(a="linearToOutputTexel",o=Zn(o=r.outputEncoding),"vec4 "+a+"( vec4 value ) { return LinearTo"+o[0]+o[1]+"; }"),r.depthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(Qn).join("\n")),l=tr($n(ir(l),r),r),c=tr($n(ir(c),r),r),l=ar(l),c=ar(c),r.isWebGL2&&!0!==r.isRawShaderMaterial&&(_="#version 300 es\n",y=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+y,x=["#define varying in",r.glslVersion===P?"":"out highp vec4 pc_fragColor;",r.glslVersion===P?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+x);c=_+x+c,l=Yn(s,35633,_+y+l),c=Yn(s,35632,c);if(s.attachShader(v,l),s.attachShader(v,c),void 0!==r.index0AttributeName?s.bindAttribLocation(v,0,r.index0AttributeName):!0===r.morphTargets&&s.bindAttribLocation(v,0,"position"),s.linkProgram(v),i.debug.checkShaderErrors){const i=s.getProgramInfoLog(v).trim(),n=s.getShaderInfoLog(l).trim(),r=s.getShaderInfoLog(c).trim();let t=!0,e=!0;!1===s.getProgramParameter(v,35714)?(t=!1,Jn(s,l,"vertex"),Jn(s,c,"fragment")):""!==i||""!==n&&""!==r||(e=!1),e&&(this.diagnostics={runnable:t,programLog:i,vertexShader:{log:n,prefix:y},fragmentShader:{log:r,prefix:x}})}let b,M;return s.deleteShader(l),s.deleteShader(c),this.getUniforms=function(){return void 0===b&&(b=new Xn(s,v)),b},this.getAttributes=function(){return void 0===M&&(M=function(e,i){const n={},r=e.getProgramParameter(i,35721);for(let t=0;t<r;t++){const r=e.getActiveAttrib(i,t).name;n[r]=e.getAttribLocation(i,r)}return n}(s,v)),M},this.destroy=function(){t.releaseStatesOfProgram(this),s.deleteProgram(v),this.program=void 0},this.name=r.shaderName,this.id=qn++,this.cacheKey=n,this.usedTimes=1,this.program=v,this.vertexShader=l,this.fragmentShader=c,this}function ur(u,p,d,f,t,m){const s=[],g=f.isWebGL2,v=f.logarithmicDepthBuffer,y=f.floatVertexTextures,x=f.maxVertexUniforms,_=f.vertexTextures;let b=f.precision;const M={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},n=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function w(t){return t&&t.isTexture?t.encoding:t&&t.isWebGLRenderTarget?t.texture.encoding:Lt}return{getParameters:function(t,e,i,n,r){var s=n.fog,a=t.isMeshStandardMaterial?n.environment:null,o=p.get(t.envMap||a),l=M[t.type],n=r.isSkinnedMesh?function(t){t=t.skeleton.bones;if(y)return 1024;{const e=x,i=Math.floor((e-20)/4),n=Math.min(i,t.length);return n<t.length?0:n}}(r):0;let c,h;if(null!==t.precision&&(b=f.getMaxPrecision(t.precision),t.precision),l){const u=Ri[l];c=u.vertexShader,h=u.fragmentShader}else c=t.vertexShader,h=t.fragmentShader;a=u.getRenderTarget();return{isWebGL2:g,shaderID:l,shaderName:t.type,vertexShader:c,fragmentShader:h,defines:t.defines,isRawShaderMaterial:!0===t.isRawShaderMaterial,glslVersion:t.glslVersion,precision:b,instancing:!0===r.isInstancedMesh,instancingColor:!0===r.isInstancedMesh&&null!==r.instanceColor,supportsVertexTextures:_,outputEncoding:null!==a?w(a.texture):u.outputEncoding,map:!!t.map,mapEncoding:w(t.map),matcap:!!t.matcap,matcapEncoding:w(t.matcap),envMap:!!o,envMapMode:o&&o.mapping,envMapEncoding:w(o),envMapCubeUV:!!o&&(o.mapping===T||o.mapping===L),lightMap:!!t.lightMap,lightMapEncoding:w(t.lightMap),aoMap:!!t.aoMap,emissiveMap:!!t.emissiveMap,emissiveMapEncoding:w(t.emissiveMap),bumpMap:!!t.bumpMap,normalMap:!!t.normalMap,objectSpaceNormalMap:1===t.normalMapType,tangentSpaceNormalMap:0===t.normalMapType,clearcoatMap:!!t.clearcoatMap,clearcoatRoughnessMap:!!t.clearcoatRoughnessMap,clearcoatNormalMap:!!t.clearcoatNormalMap,displacementMap:!!t.displacementMap,roughnessMap:!!t.roughnessMap,metalnessMap:!!t.metalnessMap,specularMap:!!t.specularMap,alphaMap:!!t.alphaMap,gradientMap:!!t.gradientMap,sheen:!!t.sheen,transmissionMap:!!t.transmissionMap,combine:t.combine,vertexTangents:t.normalMap&&t.vertexTangents,vertexColors:t.vertexColors,vertexUvs:!!(t.map||t.bumpMap||t.normalMap||t.specularMap||t.alphaMap||t.emissiveMap||t.roughnessMap||t.metalnessMap||t.clearcoatMap||t.clearcoatRoughnessMap||t.clearcoatNormalMap||t.displacementMap||t.transmissionMap),uvsVertexOnly:!(t.map||t.bumpMap||t.normalMap||t.specularMap||t.alphaMap||t.emissiveMap||t.roughnessMap||t.metalnessMap||t.clearcoatNormalMap||t.transmissionMap||!t.displacementMap),fog:!!s,useFog:t.fog,fogExp2:s&&s.isFogExp2,flatShading:t.flatShading,sizeAttenuation:t.sizeAttenuation,logarithmicDepthBuffer:v,skinning:t.skinning&&0<n,maxBones:n,useVertexTexture:y,morphTargets:t.morphTargets,morphNormals:t.morphNormals,maxMorphTargets:u.maxMorphTargets,maxMorphNormals:u.maxMorphNormals,numDirLights:e.directional.length,numPointLights:e.point.length,numSpotLights:e.spot.length,numRectAreaLights:e.rectArea.length,numHemiLights:e.hemi.length,numDirLightShadows:e.directionalShadowMap.length,numPointLightShadows:e.pointShadowMap.length,numSpotLightShadows:e.spotShadowMap.length,numClippingPlanes:m.numPlanes,numClipIntersection:m.numIntersection,dithering:t.dithering,shadowMapEnabled:u.shadowMap.enabled&&0<i.length,shadowMapType:u.shadowMap.type,toneMapping:t.toneMapped?u.toneMapping:0,physicallyCorrectLights:u.physicallyCorrectLights,premultipliedAlpha:t.premultipliedAlpha,alphaTest:t.alphaTest,doubleSided:t.side===j,flipSided:t.side===V,depthPacking:void 0!==t.depthPacking&&t.depthPacking,index0AttributeName:t.index0AttributeName,extensionDerivatives:t.extensions&&t.extensions.derivatives,extensionFragDepth:t.extensions&&t.extensions.fragDepth,extensionDrawBuffers:t.extensions&&t.extensions.drawBuffers,extensionShaderTextureLOD:t.extensions&&t.extensions.shaderTextureLOD,rendererExtensionFragDepth:g||d.has("EXT_frag_depth"),rendererExtensionDrawBuffers:g||d.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:g||d.has("EXT_shader_texture_lod"),customProgramCacheKey:t.customProgramCacheKey()}},getProgramCacheKey:function(e){const i=[];if(e.shaderID?i.push(e.shaderID):(i.push(e.fragmentShader),i.push(e.vertexShader)),void 0!==e.defines)for(const u in e.defines)i.push(u),i.push(e.defines[u]);if(!1===e.isRawShaderMaterial){for(let t=0;t<n.length;t++)i.push(e[n[t]]);i.push(u.outputEncoding),i.push(u.gammaFactor)}return i.push(e.customProgramCacheKey),i.join()},getUniforms:function(t){var e=M[t.type];let i;if(e){const t=Ri[e];i=xi.clone(t.uniforms)}else i=t.uniforms;return i},acquireProgram:function(i,n){let r;for(let t=0,e=s.length;t<e;t++){const i=s[t];if(i.cacheKey===n){r=i,++r.usedTimes;break}}return void 0===r&&(r=new hr(u,n,i,t),s.push(r)),r},releaseProgram:function(t){var e;0==--t.usedTimes&&(e=s.indexOf(t),s[e]=s[s.length-1],s.pop(),t.destroy())},programs:s}}function pr(){let n=new WeakMap;return{get:function(t){let e=n.get(t);return void 0===e&&(e={},n.set(t,e)),e},remove:function(t){n.delete(t)},update:function(t,e,i){n.get(t)[e]=i},dispose:function(){n=new WeakMap}}}function dr(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function fr(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function mr(l){const c=[];let h=0;const a=[],o=[],u={id:-1};function p(t,e,i,n,r,s){let a=c[h];var o=l.get(i);return void 0===a?(a={id:t.id,object:t,geometry:e,material:i,program:o.program||u,groupOrder:n,renderOrder:t.renderOrder,z:r,group:s},c[h]=a):(a.id=t.id,a.object=t,a.geometry=e,a.material=i,a.program=o.program||u,a.groupOrder=n,a.renderOrder=t.renderOrder,a.z=r,a.group=s),h++,a}return{opaque:a,transparent:o,init:function(){h=0,a.length=0,o.length=0},push:function(t,e,i,n,r,s){s=p(t,e,i,n,r,s);(!0===i.transparent?o:a).push(s)},unshift:function(t,e,i,n,r,s){s=p(t,e,i,n,r,s);(!0===i.transparent?o:a).unshift(s)},finish:function(){for(let t=h,e=c.length;t<e;t++){const h=c[t];if(null===h.id)break;h.id=null,h.object=null,h.geometry=null,h.material=null,h.program=null,h.group=null}},sort:function(t,e){1<a.length&&a.sort(t||dr),1<o.length&&o.sort(e||fr)}}}function gr(r){let s=new WeakMap;return{get:function(t,e){const i=s.get(t);let n;return void 0===i?(n=new mr(r),s.set(t,new WeakMap),s.get(t).set(e,n)):(n=i.get(e),void 0===n&&(n=new mr(r),i.set(e,n))),n},dispose:function(){s=new WeakMap}}}function vr(){const i={};return{get:function(t){if(void 0!==i[t.id])return i[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new Nt,color:new _e};break;case"SpotLight":e={position:new Nt,direction:new Nt,color:new _e,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new Nt,color:new _e,distance:0,decay:0};break;case"HemisphereLight":e={direction:new Nt,skyColor:new _e,groundColor:new _e};break;case"RectAreaLight":e={color:new _e,position:new Nt,halfWidth:new Nt,halfHeight:new Nt}}return i[t.id]=e,e}}}let yr=0;function xr(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function _r(y,x){const _=new vr,b=function(){const i={};return{get:function(t){if(void 0!==i[t.id])return i[t.id];let e;switch(t.type){case"DirectionalLight":case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Et};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Et,shadowCameraNear:1,shadowCameraFar:1e3}}return i[t.id]=e,e}}}(),M={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)M.probe.push(new Nt);const h=new Nt,u=new Ot,p=new Ot;return{setup:function(i){let n=0,r=0,s=0;for(let t=0;t<9;t++)M.probe[t].set(0,0,0);let a=0,o=0,l=0,c=0,h=0,u=0,p=0,d=0;i.sort(xr);for(let t=0,e=i.length;t<e;t++){const x=i[t],f=x.color,m=x.intensity,g=x.distance,v=x.shadow&&x.shadow.map?x.shadow.map.texture:null;if(x.isAmbientLight)n+=f.r*m,r+=f.g*m,s+=f.b*m;else if(x.isLightProbe)for(let t=0;t<9;t++)M.probe[t].addScaledVector(x.sh.coefficients[t],m);else if(x.isDirectionalLight){const y=_.get(x);if(y.color.copy(x.color).multiplyScalar(x.intensity),x.castShadow){const y=x.shadow,_=b.get(x);_.shadowBias=y.bias,_.shadowNormalBias=y.normalBias,_.shadowRadius=y.radius,_.shadowMapSize=y.mapSize,M.directionalShadow[a]=_,M.directionalShadowMap[a]=v,M.directionalShadowMatrix[a]=x.shadow.matrix,u++}M.directional[a]=y,a++}else if(x.isSpotLight){const y=_.get(x);if(y.position.setFromMatrixPosition(x.matrixWorld),y.color.copy(f).multiplyScalar(m),y.distance=g,y.coneCos=Math.cos(x.angle),y.penumbraCos=Math.cos(x.angle*(1-x.penumbra)),y.decay=x.decay,x.castShadow){const y=x.shadow,_=b.get(x);_.shadowBias=y.bias,_.shadowNormalBias=y.normalBias,_.shadowRadius=y.radius,_.shadowMapSize=y.mapSize,M.spotShadow[l]=_,M.spotShadowMap[l]=v,M.spotShadowMatrix[l]=x.shadow.matrix,d++}M.spot[l]=y,l++}else if(x.isRectAreaLight){const y=_.get(x);y.color.copy(f).multiplyScalar(m),y.halfWidth.set(.5*x.width,0,0),y.halfHeight.set(0,.5*x.height,0),M.rectArea[c]=y,c++}else if(x.isPointLight){const y=_.get(x);if(y.color.copy(x.color).multiplyScalar(x.intensity),y.distance=x.distance,y.decay=x.decay,x.castShadow){const y=x.shadow,_=b.get(x);_.shadowBias=y.bias,_.shadowNormalBias=y.normalBias,_.shadowRadius=y.radius,_.shadowMapSize=y.mapSize,_.shadowCameraNear=y.camera.near,_.shadowCameraFar=y.camera.far,M.pointShadow[o]=_,M.pointShadowMap[o]=v,M.pointShadowMatrix[o]=x.shadow.matrix,p++}M.point[o]=y,o++}else if(x.isHemisphereLight){const y=_.get(x);y.skyColor.copy(x.color).multiplyScalar(m),y.groundColor.copy(x.groundColor).multiplyScalar(m),M.hemi[h]=y,h++}}0<c&&(x.isWebGL2||!0===y.has("OES_texture_float_linear")?(M.rectAreaLTC1=Di.LTC_FLOAT_1,M.rectAreaLTC2=Di.LTC_FLOAT_2):!0===y.has("OES_texture_half_float_linear")&&(M.rectAreaLTC1=Di.LTC_HALF_1,M.rectAreaLTC2=Di.LTC_HALF_2)),M.ambient[0]=n,M.ambient[1]=r,M.ambient[2]=s;const f=M.hash;f.directionalLength===a&&f.pointLength===o&&f.spotLength===l&&f.rectAreaLength===c&&f.hemiLength===h&&f.numDirectionalShadows===u&&f.numPointShadows===p&&f.numSpotShadows===d||(M.directional.length=a,M.spot.length=l,M.rectArea.length=c,M.point.length=o,M.hemi.length=h,M.directionalShadow.length=u,M.directionalShadowMap.length=u,M.pointShadow.length=p,M.pointShadowMap.length=p,M.spotShadow.length=d,M.spotShadowMap.length=d,M.directionalShadowMatrix.length=u,M.pointShadowMatrix.length=p,M.spotShadowMatrix.length=d,f.directionalLength=a,f.pointLength=o,f.spotLength=l,f.rectAreaLength=c,f.hemiLength=h,f.numDirectionalShadows=u,f.numPointShadows=p,f.numSpotShadows=d,M.version=yr++)},setupView:function(i,t){let n=0,r=0,s=0,a=0,o=0;var l=t.matrixWorldInverse;for(let t=0,e=i.length;t<e;t++){var c=i[t];if(c.isDirectionalLight){const i=M.directional[n];i.direction.setFromMatrixPosition(c.matrixWorld),h.setFromMatrixPosition(c.target.matrixWorld),i.direction.sub(h),i.direction.transformDirection(l),n++}else if(c.isSpotLight){const i=M.spot[s];i.position.setFromMatrixPosition(c.matrixWorld),i.position.applyMatrix4(l),i.direction.setFromMatrixPosition(c.matrixWorld),h.setFromMatrixPosition(c.target.matrixWorld),i.direction.sub(h),i.direction.transformDirection(l),s++}else if(c.isRectAreaLight){const i=M.rectArea[a];i.position.setFromMatrixPosition(c.matrixWorld),i.position.applyMatrix4(l),p.identity(),u.copy(c.matrixWorld),u.premultiply(l),p.extractRotation(u),i.halfWidth.set(.5*c.width,0,0),i.halfHeight.set(0,.5*c.height,0),i.halfWidth.applyMatrix4(p),i.halfHeight.applyMatrix4(p),a++}else if(c.isPointLight){const i=M.point[r];i.position.setFromMatrixPosition(c.matrixWorld),i.position.applyMatrix4(l),r++}else if(c.isHemisphereLight){const i=M.hemi[o];i.direction.setFromMatrixPosition(c.matrixWorld),i.direction.transformDirection(l),i.direction.normalize(),o++}}},state:M}}function br(t,e){const i=new _r(t,e),n=[],r=[];return{init:function(){n.length=0,r.length=0},state:{lightsArray:n,shadowsArray:r,lights:i},setupLights:function(){i.setup(n)},setupLightsView:function(t){i.setupView(n,t)},pushLight:function(t){n.push(t)},pushShadow:function(t){r.push(t)}}}function Mr(n,r){let s=new WeakMap;return{get:function(t,e=0){let i;return!1===s.has(t)?(i=new br(n,r),s.set(t,[]),s.get(t).push(i)):e>=s.get(t).length?(i=new br(n,r),s.get(t).push(i)):i=s.get(t)[e],i},dispose:function(){s=new WeakMap}}}function wr(t){we.call(this),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}function Sr(t){we.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new Nt,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}function Ar(p,d,f){let m=new Ei;const g=new Et,v=new Et,y=new Ct,r=[],s=[],h={},u={0:V,1:A,2:j},x=new _i({defines:{SAMPLE_RATE:.25,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Et},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),_=x.clone();_.defines.HORIZONTAL_PASS=1;const t=new Ze;t.setAttribute("position",new Le(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new di(t,x),e=this;function M(t,e,i){i=t<<0|e<<1|i<<2;let n=r[i];return void 0===n&&(n=new wr({depthPacking:3201,morphTargets:t,skinning:e}),r[i]=n),n}function w(t,e,i){i=t<<0|e<<1|i<<2;let n=s[i];return void 0===n&&(n=new Sr({morphTargets:t,skinning:e}),s[i]=n),n}function S(i,n,r,t,e,s,a){let o=null,l=M,c=i.customDepthMaterial;if(!0===t.isPointLight&&(l=w,c=i.customDistanceMaterial),void 0===c){let t=!1;!0===r.morphTargets&&(t=n.morphAttributes&&n.morphAttributes.position&&0<n.morphAttributes.position.length);let e=!1;!0===i.isSkinnedMesh&&!0===r.skinning&&(e=!0),o=l(t,e,!0===i.isInstancedMesh)}else o=c;if(p.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){const p=o.uuid,i=r.uuid;let t=h[p];void 0===t&&(t={},h[p]=t);let e=t[i];void 0===e&&(e=o.clone(),t[i]=e),o=e}return o.visible=r.visible,o.wireframe=r.wireframe,o.side=3===a?null!==r.shadowSide?r.shadowSide:r.side:null!==r.shadowSide?r.shadowSide:u[r.side],o.clipShadows=r.clipShadows,o.clippingPlanes=r.clippingPlanes,o.clipIntersection=r.clipIntersection,o.wireframeLinewidth=r.wireframeLinewidth,o.linewidth=r.linewidth,!0===t.isPointLight&&!0===o.isMeshDistanceMaterial&&(o.referencePosition.setFromMatrixPosition(t.matrixWorld),o.nearDistance=e,o.farDistance=s),o}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(i,n,r){if(!1!==e.enabled&&(!1!==e.autoUpdate||!1!==e.needsUpdate)&&0!==i.length){const t=p.getRenderTarget(),c=p.getActiveCubeFace(),h=p.getActiveMipmapLevel(),u=p.state;u.setBlending(0),u.buffers.color.setClear(1,1,1,1),u.buffers.depth.setTest(!0),u.setScissorTest(!1);for(let t=0,e=i.length;t<e;t++){const c=i[t],h=c.shadow;if(void 0!==h&&(!1!==h.autoUpdate||!1!==h.needsUpdate)){g.copy(h.mapSize);var s=h.getFrameExtents();if(g.multiply(s),v.copy(h.mapSize),(g.x>f||g.y>f)&&(g.x>f&&(v.x=Math.floor(f/s.x),g.x=v.x*s.x,h.mapSize.x=v.x),g.y>f&&(v.y=Math.floor(f/s.y),g.y=v.y*s.y,h.mapSize.y=v.y)),null===h.map&&!h.isPointLightShadow&&3===this.type){const p={minFilter:Y,magFilter:Y,format:Tt};h.map=new E(g.x,g.y,p),h.map.texture.name=c.name+".shadowMap",h.mapPass=new E(g.x,g.y,p),h.camera.updateProjectionMatrix()}if(null===h.map){const p={minFilter:W,magFilter:W,format:Tt};h.map=new E(g.x,g.y,p),h.map.texture.name=c.name+".shadowMap",h.camera.updateProjectionMatrix()}p.setRenderTarget(h.map),p.clear();var a=h.getViewportCount();for(let t=0;t<a;t++){const i=h.getViewport(t);y.set(v.x*i.x,v.y*i.y,v.x*i.z,v.y*i.w),u.viewport(y),h.updateMatrices(c,t),m=h.getFrustum(),function i(n,r,s,a,o){if(!1!==n.visible){if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===o)&&(!n.frustumCulled||m.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,n.matrixWorld);const m=d.update(n),r=n.material;if(Array.isArray(r)){const d=m.groups;for(let t=0,e=d.length;t<e;t++){var l=d[t],c=r[l.materialIndex];if(c&&c.visible){const d=S(n,m,c,a,s.near,s.far,o);p.renderBufferDirect(s,null,m,d,n,l)}}}else if(r.visible){const d=S(n,m,r,a,s.near,s.far,o);p.renderBufferDirect(s,null,m,d,n,null)}}var h=n.children;for(let t=0,e=h.length;t<e;t++)i(h[t],r,s,a,o)}}(n,r,h.camera,c,this.type)}h.isPointLightShadow||3!==this.type||(o=h,l=r,s=void 0,s=d.update(b),x.uniforms.shadow_pass.value=o.map.texture,x.uniforms.resolution.value=o.mapSize,x.uniforms.radius.value=o.radius,p.setRenderTarget(o.mapPass),p.clear(),p.renderBufferDirect(l,null,s,x,b,null),_.uniforms.shadow_pass.value=o.mapPass.texture,_.uniforms.resolution.value=o.mapSize,_.uniforms.radius.value=o.radius,p.setRenderTarget(o.map),p.clear(),p.renderBufferDirect(l,null,s,_,b,null)),h.needsUpdate=!1}}var o,l;e.needsUpdate=!1,p.setRenderTarget(t,c,h)}}}function Tr(h,t,e){e=e.isWebGL2;const n=new function(){let e=!1;const s=new Ct;let i=null;const a=new Ct(0,0,0,0);return{setMask:function(t){i===t||e||(h.colorMask(t,t,t,t),i=t)},setLocked:function(t){e=t},setClear:function(t,e,i,n,r){!0===r&&(t*=n,e*=n,i*=n),s.set(t,e,i,n),!1===a.equals(s)&&(h.clearColor(t,e,i,n),a.copy(s))},reset:function(){e=!1,i=null,a.set(-1,0,0,0)}}},r=new function(){let e=!1,i=null,n=null,r=null;return{setTest:function(t){(t?O:I)(2929)},setMask:function(t){i===t||e||(h.depthMask(t),i=t)},setFunc:function(t){if(n!==t){if(t)switch(t){case 0:h.depthFunc(512);break;case 1:h.depthFunc(519);break;case 2:h.depthFunc(513);break;case 3:h.depthFunc(515);break;case 4:h.depthFunc(514);break;case 5:h.depthFunc(518);break;case 6:h.depthFunc(516);break;case 7:h.depthFunc(517);break;default:h.depthFunc(515)}else h.depthFunc(515);n=t}},setLocked:function(t){e=t},setClear:function(t){r!==t&&(h.clearDepth(t),r=t)},reset:function(){e=!1,i=null,n=null,r=null}}},s=new function(){let e=!1,i=null,n=null,r=null,s=null,a=null,o=null,l=null,c=null;return{setTest:function(t){e||(t?O:I)(2960)},setMask:function(t){i===t||e||(h.stencilMask(t),i=t)},setFunc:function(t,e,i){n===t&&r===e&&s===i||(h.stencilFunc(t,e,i),n=t,r=e,s=i)},setOp:function(t,e,i){a===t&&o===e&&l===i||(h.stencilOp(t,e,i),a=t,o=e,l=i)},setLocked:function(t){e=t},setClear:function(t){c!==t&&(h.clearStencil(t),c=t)},reset:function(){e=!1,i=null,n=null,r=null,s=null,a=null,o=null,l=null,c=null}}};let i={},a=null,l=null,c=null,u=null,p=null,d=null,f=null,m=null,g=null,v=!1,o=null,y=null,x=null,_=null,b=null;const M=h.getParameter(35661);let w=!1,S=0;const A=h.getParameter(7938);-1!==A.indexOf("WebGL")?(S=parseFloat(/^WebGL (\d)/.exec(A)[1]),w=1<=S):-1!==A.indexOf("OpenGL ES")&&(S=parseFloat(/^OpenGL ES (\d)/.exec(A)[1]),w=2<=S);let T=null,L={};const P=new Ct,E=new Ct;function C(t,e,i){var n=new Uint8Array(4),r=h.createTexture();h.bindTexture(t,r),h.texParameteri(t,10241,9728),h.texParameteri(t,10240,9728);for(let t=0;t<i;t++)h.texImage2D(e+t,0,6408,1,1,0,6408,5121,n);return r}const N={};function O(t){!0!==i[t]&&(h.enable(t),i[t]=!0)}function I(t){!1!==i[t]&&(h.disable(t),i[t]=!1)}N[3553]=C(3553,3553,1),N[34067]=C(34067,34069,6),n.setClear(0,0,0,1),r.setClear(1),s.setClear(0),O(2929),r.setFunc(3),F(!1),U(1),O(2884),z(0);const D={[G]:32774,101:32778,102:32779};if(e)D[103]=32775,D[104]=32776;else{const h=t.get("EXT_blend_minmax");null!==h&&(D[103]=h.MIN_EXT,D[104]=h.MAX_EXT)}const R={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function z(t,e,i,n,r,s,a,o){if(0!==t){if(l||(O(3042),l=!0),5===t)r=r||e,s=s||i,a=a||n,e===u&&r===f||(h.blendEquationSeparate(D[e],D[r]),u=e,f=r),i===p&&n===d&&s===m&&a===g||(h.blendFuncSeparate(R[i],R[n],R[s],R[a]),p=i,d=n,m=s,g=a),c=t,v=null;else if(t!==c||o!==v){if(u===G&&f===G||(h.blendEquation(32774),u=G,f=G),o)switch(t){case 1:h.blendFuncSeparate(1,771,1,771);break;case 2:h.blendFunc(1,1);break;case 3:h.blendFuncSeparate(0,0,769,771);break;case 4:h.blendFuncSeparate(0,768,0,770)}else switch(t){case 1:h.blendFuncSeparate(770,771,1,771);break;case 2:h.blendFunc(770,1);break;case 3:h.blendFunc(0,769);break;case 4:h.blendFunc(0,768)}p=null,d=null,m=null,g=null,c=t,v=o}}else l&&(I(3042),l=!1)}function F(t){o!==t&&(t?h.frontFace(2304):h.frontFace(2305),o=t)}function U(t){0!==t?(O(2884),t!==y&&(1===t?h.cullFace(1029):2===t?h.cullFace(1028):h.cullFace(1032))):I(2884),y=t}function B(t,e,i){t?(O(32823),_===e&&b===i||(h.polygonOffset(e,i),_=e,b=i)):I(32823)}function k(t){void 0===t&&(t=33984+M-1),T!==t&&(h.activeTexture(t),T=t)}return{buffers:{color:n,depth:r,stencil:s},enable:O,disable:I,useProgram:function(t){return a!==t&&(h.useProgram(t),a=t,!0)},setBlending:z,setMaterial:function(t,e){(t.side===j?I:O)(2884);let i=t.side===V;e&&(i=!i),F(i),1===t.blending&&!1===t.transparent?z(0):z(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),r.setFunc(t.depthFunc),r.setTest(t.depthTest),r.setMask(t.depthWrite),n.setMask(t.colorWrite);e=t.stencilWrite;s.setTest(e),e&&(s.setMask(t.stencilWriteMask),s.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),s.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),B(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)},setFlipSided:F,setCullFace:U,setLineWidth:function(t){t!==x&&(w&&h.lineWidth(t),x=t)},setPolygonOffset:B,setScissorTest:function(t){(t?O:I)(3089)},activeTexture:k,bindTexture:function(t,e){null===T&&k();let i=L[T];void 0===i&&(i={type:void 0,texture:void 0},L[T]=i),i.type===t&&i.texture===e||(h.bindTexture(t,e||N[t]),i.type=t,i.texture=e)},unbindTexture:function(){const t=L[T];void 0!==t&&void 0!==t.type&&(h.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{h.compressedTexImage2D.apply(h,arguments)}catch(t){}},texImage2D:function(){try{h.texImage2D.apply(h,arguments)}catch(t){}},texImage3D:function(){try{h.texImage3D.apply(h,arguments)}catch(t){}},scissor:function(t){!1===P.equals(t)&&(h.scissor(t.x,t.y,t.z,t.w),P.copy(t))},viewport:function(t){!1===E.equals(t)&&(h.viewport(t.x,t.y,t.z,t.w),E.copy(t))},reset:function(){i={},T=null,L={},a=null,l=null,c=null,u=null,p=null,d=null,f=null,m=null,g=null,v=!1,o=null,y=null,x=null,_=null,b=null,n.reset(),r.reset(),s.reset()}}}function Lr(p,r,d,o,n,f,a){const m=n.isWebGL2,g=(n.maxTextures,n.maxCubemapSize),h=n.maxTextureSize,e=n.maxSamples,s=new WeakMap;let l,i=!1;try{i="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(p){}function c(t,e){return i?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function v(t,e,i,n){let r=1;if((t.width>n||t.height>n)&&(r=n/Math.max(t.width,t.height)),r<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const n=e?Pt.floorPowerOfTwo:Math.floor,s=n(r*t.width),a=n(r*t.height);void 0===l&&(l=c(s,a));const o=i?c(s,a):l;return o.width=s,o.height=a,o.getContext("2d").drawImage(t,0,0,s,a),o}return t}return t}function y(t){return Pt.isPowerOfTwo(t.width)&&Pt.isPowerOfTwo(t.height)}function x(t,e){return t.generateMipmaps&&e&&t.minFilter!==W&&t.minFilter!==Y}function _(t,e,i,n){p.generateMipmap(t),o.get(e).__maxMipLevel=Math.log(Math.max(i,n))*Math.LOG2E}function b(t,e,i){if(!1===m)return e;if(null!==t&&void 0!==p[t])return p[t];let n=e;return 6403===e&&(5126===i&&(n=33326),5131===i&&(n=33325),5121===i&&(n=33321)),6407===e&&(5126===i&&(n=34837),5131===i&&(n=34843),5121===i&&(n=32849)),6408===e&&(5126===i&&(n=34836),5131===i&&(n=34842),5121===i&&(n=32856)),33325!==n&&33326!==n&&34842!==n&&34836!==n||r.get("EXT_color_buffer_float"),n}function u(t){return t===W||t===H||t===X?9728:9729}function M(t){const e=t.target;var i;e.removeEventListener("dispose",M),i=e,void 0!==(t=o.get(i)).__webglInit&&(p.deleteTexture(t.__webglTexture),o.remove(i)),e.isVideoTexture&&s.delete(e),a.memory.textures--}function w(t){const e=t.target;e.removeEventListener("dispose",w),function(t){var e=o.get(t),i=o.get(t.texture);if(t){if(void 0!==i.__webglTexture&&p.deleteTexture(i.__webglTexture),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)p.deleteFramebuffer(e.__webglFramebuffer[t]),e.__webglDepthbuffer&&p.deleteRenderbuffer(e.__webglDepthbuffer[t]);else p.deleteFramebuffer(e.__webglFramebuffer),e.__webglDepthbuffer&&p.deleteRenderbuffer(e.__webglDepthbuffer),e.__webglMultisampledFramebuffer&&p.deleteFramebuffer(e.__webglMultisampledFramebuffer),e.__webglColorRenderbuffer&&p.deleteRenderbuffer(e.__webglColorRenderbuffer),e.__webglDepthRenderbuffer&&p.deleteRenderbuffer(e.__webglDepthRenderbuffer);o.remove(t.texture),o.remove(t)}}(e),a.memory.textures--}let S=0;function A(t,e){var i,n,r=o.get(t);if(t.isVideoTexture&&(i=t,n=a.render.frame,s.get(i)!==n&&(s.set(i,n),i.update())),0<t.version&&r.__version!==t.version){const d=t.image;if(void 0!==d&&!1!==d.complete)return void N(r,t,e)}d.activeTexture(33984+e),d.bindTexture(3553,r.__webglTexture)}function T(t,e){var i=o.get(t);0<t.version&&i.__version!==t.version?function(t,n,e){if(6===n.image.length){C(t,n),d.activeTexture(33984+e),d.bindTexture(34067,t.__webglTexture),p.pixelStorei(37440,n.flipY);const l=n&&(n.isCompressedTexture||n.image[0].isCompressedTexture),c=n.image[0]&&n.image[0].isDataTexture,h=[];for(let t=0;t<6;t++)h[t]=l||c?c?n.image[t].image:n.image[t]:v(n.image[t],!1,!0,g);var r=h[0],e=y(r)||m,s=f.convert(n.format),a=f.convert(n.type),o=b(n.internalFormat,s,a);let i;if(E(34067,n,e),l){for(let e=0;e<6;e++){i=h[e].mipmaps;for(let t=0;t<i.length;t++){const u=i[t];n.format!==Tt&&n.format!==Q?null!==s&&d.compressedTexImage2D(34069+e,t,o,u.width,u.height,0,u.data):d.texImage2D(34069+e,t,o,u.width,u.height,0,s,a,u.data)}}t.__maxMipLevel=i.length-1}else{i=n.mipmaps;for(let e=0;e<6;e++)if(c){d.texImage2D(34069+e,0,o,h[e].width,h[e].height,0,s,a,h[e].data);for(let t=0;t<i.length;t++){const n=i[t].image[e].image;d.texImage2D(34069+e,t+1,o,n.width,n.height,0,s,a,n.data)}}else{d.texImage2D(34069+e,0,o,s,a,h[e]);for(let t=0;t<i.length;t++){const n=i[t];d.texImage2D(34069+e,t+1,o,s,a,n.image[e])}}t.__maxMipLevel=i.length}x(n,e)&&_(34067,n,r.width,r.height),t.__version=n.version,n.onUpdate&&n.onUpdate(n)}}(i,t,e):(d.activeTexture(33984+e),d.bindTexture(34067,i.__webglTexture))}const L={[U]:10497,[B]:33071,[k]:33648},P={[W]:9728,[H]:9984,[X]:9986,[Y]:9729,1007:9985,[q]:9987};function E(t,e,i){i?(p.texParameteri(t,10242,L[e.wrapS]),p.texParameteri(t,10243,L[e.wrapT]),32879!==t&&35866!==t||p.texParameteri(t,32882,L[e.wrapR]),p.texParameteri(t,10240,P[e.magFilter]),p.texParameteri(t,10241,P[e.minFilter])):(p.texParameteri(t,10242,33071),p.texParameteri(t,10243,33071),32879!==t&&35866!==t||p.texParameteri(t,32882,33071),e.wrapS!==B||e.wrapT,p.texParameteri(t,10240,u(e.magFilter)),p.texParameteri(t,10241,u(e.minFilter)),e.minFilter!==W&&e.minFilter);i=r.get("EXT_texture_filter_anisotropic");i&&(e.type===St&&null===r.get("OES_texture_float_linear")||e.type===At&&null===(m||r.get("OES_texture_half_float_linear"))||(1<e.anisotropy||o.get(e).__currentAnisotropy)&&(p.texParameterf(t,i.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e.anisotropy,n.getMaxAnisotropy())),o.get(e).__currentAnisotropy=e.anisotropy))}function C(t,e){void 0===t.__webglInit&&(t.__webglInit=!0,e.addEventListener("dispose",M),t.__webglTexture=p.createTexture(),a.memory.textures++)}function N(t,i,e){let n=3553;i.isDataTexture2DArray&&(n=35866),i.isDataTexture3D&&(n=32879),C(t,i),d.activeTexture(33984+e),d.bindTexture(n,t.__webglTexture),p.pixelStorei(37440,i.flipY),p.pixelStorei(37441,i.premultiplyAlpha),p.pixelStorei(3317,i.unpackAlignment);var r,e=(r=i,!m&&(r.wrapS!==B||r.wrapT!==B||r.minFilter!==W&&r.minFilter!==Y)&&!1===y(i.image)),r=v(i.image,e,!1,h),e=y(r)||m,s=f.convert(i.format);let a,o=f.convert(i.type),l=b(i.internalFormat,s,o);E(n,i,e);var c=i.mipmaps;if(i.isDepthTexture)l=6402,m?l=i.type===St?36012:i.type===J?33190:i.type===K?35056:33189:i.type,i.format===$&&6402===l&&i.type!==Z&&i.type!==J&&(i.type=Z,o=f.convert(i.type)),i.format===tt&&6402===l&&(l=34041,i.type!==K&&(i.type=K,o=f.convert(i.type))),d.texImage2D(3553,0,l,r.width,r.height,0,s,o,null);else if(i.isDataTexture)if(0<c.length&&e){for(let t=0,e=c.length;t<e;t++)a=c[t],d.texImage2D(3553,t,l,a.width,a.height,0,s,o,a.data);i.generateMipmaps=!1,t.__maxMipLevel=c.length-1}else d.texImage2D(3553,0,l,r.width,r.height,0,s,o,r.data),t.__maxMipLevel=0;else if(i.isCompressedTexture){for(let t=0,e=c.length;t<e;t++)a=c[t],i.format!==Tt&&i.format!==Q?null!==s&&d.compressedTexImage2D(3553,t,l,a.width,a.height,0,a.data):d.texImage2D(3553,t,l,a.width,a.height,0,s,o,a.data);t.__maxMipLevel=c.length-1}else if(i.isDataTexture2DArray)d.texImage3D(35866,0,l,r.width,r.height,r.depth,0,s,o,r.data),t.__maxMipLevel=0;else if(i.isDataTexture3D)d.texImage3D(32879,0,l,r.width,r.height,r.depth,0,s,o,r.data),t.__maxMipLevel=0;else if(0<c.length&&e){for(let t=0,e=c.length;t<e;t++)a=c[t],d.texImage2D(3553,t,l,s,o,a);i.generateMipmaps=!1,t.__maxMipLevel=c.length-1}else d.texImage2D(3553,0,l,s,o,r),t.__maxMipLevel=0;x(i,e)&&_(n,i,r.width,r.height),t.__version=i.version,i.onUpdate&&i.onUpdate(i)}function O(t,e,i,n){var r=f.convert(e.texture.format),s=f.convert(e.texture.type),a=b(e.texture.internalFormat,r,s);d.texImage2D(n,0,a,e.width,e.height,0,r,s,null),p.bindFramebuffer(36160,t),p.framebufferTexture2D(36160,i,n,o.get(e.texture).__webglTexture,0),p.bindFramebuffer(36160,null)}function I(e,i,n){if(p.bindRenderbuffer(36161,e),i.depthBuffer&&!i.stencilBuffer){let t=33189;if(n){const e=i.depthTexture;e&&e.isDepthTexture&&(e.type===St?t=36012:e.type===J&&(t=33190));const n=R(i);p.renderbufferStorageMultisample(36161,n,t,i.width,i.height)}else p.renderbufferStorage(36161,t,i.width,i.height);p.framebufferRenderbuffer(36160,36096,36161,e)}else if(i.depthBuffer&&i.stencilBuffer){if(n){const e=R(i);p.renderbufferStorageMultisample(36161,e,35056,i.width,i.height)}else p.renderbufferStorage(36161,34041,i.width,i.height);p.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=f.convert(i.texture.format),t=f.convert(i.texture.type),r=b(i.texture.internalFormat,e,t);if(n){const e=R(i);p.renderbufferStorageMultisample(36161,e,r,i.width,i.height)}else p.renderbufferStorage(36161,r,i.width,i.height)}p.bindRenderbuffer(36161,null)}function D(e){const i=o.get(e),t=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(t)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,e){if(e&&e.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(p.bindFramebuffer(36160,t),!e.depthTexture||!e.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");o.get(e.depthTexture).__webglTexture&&e.depthTexture.image.width===e.width&&e.depthTexture.image.height===e.height||(e.depthTexture.image.width=e.width,e.depthTexture.image.height=e.height,e.depthTexture.needsUpdate=!0),A(e.depthTexture,0);t=o.get(e.depthTexture).__webglTexture;if(e.depthTexture.format===$)p.framebufferTexture2D(36160,36096,3553,t,0);else{if(e.depthTexture.format!==tt)throw new Error("Unknown depthTexture format");p.framebufferTexture2D(36160,33306,3553,t,0)}}(i.__webglFramebuffer,e)}else if(t){i.__webglDepthbuffer=[];for(let t=0;t<6;t++)p.bindFramebuffer(36160,i.__webglFramebuffer[t]),i.__webglDepthbuffer[t]=p.createRenderbuffer(),I(i.__webglDepthbuffer[t],e,!1)}else p.bindFramebuffer(36160,i.__webglFramebuffer),i.__webglDepthbuffer=p.createRenderbuffer(),I(i.__webglDepthbuffer,e,!1);p.bindFramebuffer(36160,null)}function R(t){return m&&t.isWebGLMultisampleRenderTarget?Math.min(e,t.samples):0}let z=!1,F=!1;this.allocateTextureUnit=function(){var t=S;return S+=1,t},this.resetTextureUnits=function(){S=0},this.setTexture2D=A,this.setTexture2DArray=function(t,e){var i=o.get(t);0<t.version&&i.__version!==t.version?N(i,t,e):(d.activeTexture(33984+e),d.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(t,e){var i=o.get(t);0<t.version&&i.__version!==t.version?N(i,t,e):(d.activeTexture(33984+e),d.bindTexture(32879,i.__webglTexture))},this.setTextureCube=T,this.setupRenderTarget=function(e){const i=o.get(e),t=o.get(e.texture);e.addEventListener("dispose",w),t.__webglTexture=p.createTexture(),a.memory.textures++;var n=!0===e.isWebGLCubeRenderTarget,r=!0===e.isWebGLMultisampleRenderTarget,s=y(e)||m;if(!m||e.texture.format!==Q||e.texture.type!==St&&e.texture.type!==At||(e.texture.format=Tt),n){i.__webglFramebuffer=[];for(let t=0;t<6;t++)i.__webglFramebuffer[t]=p.createFramebuffer()}else if(i.__webglFramebuffer=p.createFramebuffer(),r&&m){i.__webglMultisampledFramebuffer=p.createFramebuffer(),i.__webglColorRenderbuffer=p.createRenderbuffer(),p.bindRenderbuffer(36161,i.__webglColorRenderbuffer);const d=f.convert(e.texture.format),o=f.convert(e.texture.type),a=b(e.texture.internalFormat,d,o),m=R(e);p.renderbufferStorageMultisample(36161,m,a,e.width,e.height),p.bindFramebuffer(36160,i.__webglMultisampledFramebuffer),p.framebufferRenderbuffer(36160,36064,36161,i.__webglColorRenderbuffer),p.bindRenderbuffer(36161,null),e.depthBuffer&&(i.__webglDepthRenderbuffer=p.createRenderbuffer(),I(i.__webglDepthRenderbuffer,e,!0)),p.bindFramebuffer(36160,null)}if(n){d.bindTexture(34067,t.__webglTexture),E(34067,e.texture,s);for(let t=0;t<6;t++)O(i.__webglFramebuffer[t],e,36064,34069+t);x(e.texture,s)&&_(34067,e.texture,e.width,e.height),d.bindTexture(34067,null)}else d.bindTexture(3553,t.__webglTexture),E(3553,e.texture,s),O(i.__webglFramebuffer,e,36064,3553),x(e.texture,s)&&_(3553,e.texture,e.width,e.height),d.bindTexture(3553,null);e.depthBuffer&&D(e)},this.updateRenderTargetMipmap=function(t){var e,i,n=t.texture;x(n,y(t)||m)&&(e=t.isWebGLCubeRenderTarget?34067:3553,i=o.get(n).__webglTexture,d.bindTexture(e,i),_(e,n,t.width,t.height),d.bindTexture(e,null))},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget&&m){var i=o.get(e);p.bindFramebuffer(36008,i.__webglMultisampledFramebuffer),p.bindFramebuffer(36009,i.__webglFramebuffer);var n=e.width,r=e.height;let t=16384;e.depthBuffer&&(t|=256),e.stencilBuffer&&(t|=1024),p.blitFramebuffer(0,0,n,r,0,0,n,r,t,9728),p.bindFramebuffer(36160,i.__webglMultisampledFramebuffer)}},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===z&&(z=!0),t=t.texture),A(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===F&&(F=!0),t=t.texture),T(t,e)}}function Pr(t,i,e){const n=e.isWebGL2;return{convert:function(t){let e;if(t===wt)return 5121;if(1017===t)return 32819;if(1018===t)return 32820;if(1019===t)return 33635;if(1010===t)return 5120;if(1011===t)return 5122;if(t===Z)return 5123;if(1013===t)return 5124;if(t===J)return 5125;if(t===St)return 5126;if(t===At)return n?5131:(e=i.get("OES_texture_half_float"),null!==e?e.HALF_FLOAT_OES:null);if(1021===t)return 6406;if(t===Q)return 6407;if(t===Tt)return 6408;if(1024===t)return 6409;if(1025===t)return 6410;if(t===$)return 6402;if(t===tt)return 34041;if(1028===t)return 6403;if(1029===t)return 36244;if(1030===t)return 33319;if(1031===t)return 33320;if(1032===t)return 36248;if(1033===t)return 36249;if(33776===t||33777===t||33778===t||33779===t){if(e=i.get("WEBGL_compressed_texture_s3tc"),null===e)return null;if(33776===t)return e.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===t)return e.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===t)return e.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===t)return e.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===t||35841===t||35842===t||35843===t){if(e=i.get("WEBGL_compressed_texture_pvrtc"),null===e)return null;if(35840===t)return e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===t)return e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===t)return e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===t)return e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===t)return e=i.get("WEBGL_compressed_texture_etc1"),null!==e?e.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===t||37496===t)&&(e=i.get("WEBGL_compressed_texture_etc"),null!==e)){if(37492===t)return e.COMPRESSED_RGB8_ETC2;if(37496===t)return e.COMPRESSED_RGBA8_ETC2_EAC}return 37808===t||37809===t||37810===t||37811===t||37812===t||37813===t||37814===t||37815===t||37816===t||37817===t||37818===t||37819===t||37820===t||37821===t||37840===t||37841===t||37842===t||37843===t||37844===t||37845===t||37846===t||37847===t||37848===t||37849===t||37850===t||37851===t||37852===t||37853===t?(e=i.get("WEBGL_compressed_texture_astc"),null!==e?t:null):36492===t?(e=i.get("EXT_texture_compression_bptc"),null!==e?t:null):t===K?n?34042:(e=i.get("WEBGL_depth_texture"),null!==e?e.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}function Er(t=[]){Mi.call(this),this.cameras=t}function Cr(){Qt.call(this),this.type="Group"}function Nr(){this._targetRay=null,this._grip=null,this._hand=null}function Or(t,i){const e=this;let s=null,n=1,a=null,r="local-floor",o;const l=[],c=new Map,h=new Mi;h.layers.enable(1),h.viewport=new Ct;const u=new Mi;u.layers.enable(2),u.viewport=new Ct;const p=[h,u],d=new Er;d.layers.enable(1),d.layers.enable(2);let f=null,m=null;function g(t){const e=c.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function v(){c.forEach(function(t,e){t.disconnect(e)}),c.clear(),t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),S.stop(),e.isPresenting=!1,e.dispatchEvent({type:"sessionend"})}function y(t){a=t,S.setContext(s),S.start(),e.isPresenting=!0,e.dispatchEvent({type:"sessionstart"})}function x(e){var i=s.inputSources;for(let t=0;t<l.length;t++)c.set(i[t],l[t]);for(let t=0;t<e.removed.length;t++){const n=e.removed[t],s=c.get(n);s&&(s.dispatchEvent({type:"disconnected",data:n}),c.delete(n))}for(let t=0;t<e.added.length;t++){const r=e.added[t],s=c.get(r);s&&s.dispatchEvent({type:"connected",data:r})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=l[t];return void 0===e&&(e=new Nr,l[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=l[t];return void 0===e&&(e=new Nr,l[t]=e),e.getGripSpace()},this.getHand=function(t){let e=l[t];return void 0===e&&(e=new Nr,l[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){n=t,e.isPresenting},this.setReferenceSpaceType=function(t){r=t,e.isPresenting},this.getReferenceSpace=function(){return a},this.getSession=function(){return s},this.setSession=function(t){if(s=t,null!==s){s.addEventListener("select",g),s.addEventListener("selectstart",g),s.addEventListener("selectend",g),s.addEventListener("squeeze",g),s.addEventListener("squeezestart",g),s.addEventListener("squeezeend",g),s.addEventListener("end",v);const e=i.getContextAttributes();!0!==e.xrCompatible&&i.makeXRCompatible();t={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:n},t=new XRWebGLLayer(s,i,t);s.updateRenderState({baseLayer:t}),s.requestReferenceSpace(r).then(y),s.addEventListener("inputsourceschange",x)}};const _=new Nt,b=new Nt;function M(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.getCamera=function(t){d.near=u.near=h.near=t.near,d.far=u.far=h.far=t.far,f===d.near&&m===d.far||(s.updateRenderState({depthNear:d.near,depthFar:d.far}),f=d.near,m=d.far);var e=t.parent,i=d.cameras;M(d,e);for(let t=0;t<i.length;t++)M(i[t],e);t.matrixWorld.copy(d.matrixWorld);const n=t.children;for(let t=0,e=n.length;t<e;t++)n[t].updateMatrixWorld(!0);return 2===i.length?function(t,e,i){_.setFromMatrixPosition(e.matrixWorld),b.setFromMatrixPosition(i.matrixWorld);var n=_.distanceTo(b),r=e.projectionMatrix.elements,s=i.projectionMatrix.elements,a=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],h=(r[8]-1)/r[0],i=(s[8]+1)/s[0],r=a*h,s=a*i,i=n/(i-h),h=i*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(h),t.translateZ(i),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();a+=i,i=o+i;t.projectionMatrix.makePerspective(r-h,n-h+s,l*o/i*a,c*o/i*a,a,i)}(d,h,u):d.projectionMatrix.copy(h.projectionMatrix),d};let w=null;const S=new Ci;S.setAnimationLoop(function(i,n){if(o=n.getViewerPose(a),null!==o){const i=o.views,n=s.renderState.baseLayer;t.setFramebuffer(n.framebuffer);let e=!1;i.length!==d.cameras.length&&(d.cameras.length=0,e=!0);for(let t=0;t<i.length;t++){const s=i[t],a=n.getViewport(s),r=p[t];r.matrix.fromArray(s.transform.matrix),r.projectionMatrix.fromArray(s.projectionMatrix),r.viewport.set(a.x,a.y,a.width,a.height),0===t&&d.matrix.copy(r.matrix),!0===e&&d.cameras.push(r)}}var e=s.inputSources;for(let t=0;t<l.length;t++){const i=l[t],s=e[t];i.update(s,n,a)}w&&w(i,n)}),this.setAnimationLoop=function(t){w=t},this.dispose=function(){}}function Ir(s){function d(t,e){t.opacity.value=e.opacity,e.color&&t.diffuse.value.copy(e.color),e.emissive&&t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.specularMap&&(t.specularMap.value=e.specularMap);var i=s.get(e).envMap;if(i){t.envMap.value=i,t.flipEnvMap.value=i.isCubeTexture&&i._needsFlipEnvMap?-1:1,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio;const n=s.get(i).__maxMipLevel;void 0!==n&&(t.maxMipLevel.value=n)}let n,r;e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity),e.aoMap&&(t.aoMap.value=e.aoMap,t.aoMapIntensity.value=e.aoMapIntensity),e.map?n=e.map:e.specularMap?n=e.specularMap:e.displacementMap?n=e.displacementMap:e.normalMap?n=e.normalMap:e.bumpMap?n=e.bumpMap:e.roughnessMap?n=e.roughnessMap:e.metalnessMap?n=e.metalnessMap:e.alphaMap?n=e.alphaMap:e.emissiveMap?n=e.emissiveMap:e.clearcoatMap?n=e.clearcoatMap:e.clearcoatNormalMap?n=e.clearcoatNormalMap:e.clearcoatRoughnessMap&&(n=e.clearcoatRoughnessMap),void 0!==n&&(n.isWebGLRenderTarget&&(n=n.texture),!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix)),e.aoMap?r=e.aoMap:e.lightMap&&(r=e.lightMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uv2Transform.value.copy(r.matrix))}function f(t,e){t.roughness.value=e.roughness,t.metalness.value=e.metalness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===V&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===V&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),s.get(e).envMap&&(t.envMapIntensity.value=e.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,e,i,n){var r,s,a,o,l,c,h,u,p;e.isMeshBasicMaterial?d(t,e):e.isMeshLambertMaterial?(d(t,e),p=t,e.emissiveMap&&(p.emissiveMap.value=e.emissiveMap)):e.isMeshToonMaterial?(d(t,e),h=t,(u=e).gradientMap&&(h.gradientMap.value=u.gradientMap),u.emissiveMap&&(h.emissiveMap.value=u.emissiveMap),u.bumpMap&&(h.bumpMap.value=u.bumpMap,h.bumpScale.value=u.bumpScale,u.side===V&&(h.bumpScale.value*=-1)),u.normalMap&&(h.normalMap.value=u.normalMap,h.normalScale.value.copy(u.normalScale),u.side===V&&h.normalScale.value.negate()),u.displacementMap&&(h.displacementMap.value=u.displacementMap,h.displacementScale.value=u.displacementScale,h.displacementBias.value=u.displacementBias)):e.isMeshPhongMaterial?(d(t,e),h=e,(u=t).specular.value.copy(h.specular),u.shininess.value=Math.max(h.shininess,1e-4),h.emissiveMap&&(u.emissiveMap.value=h.emissiveMap),h.bumpMap&&(u.bumpMap.value=h.bumpMap,u.bumpScale.value=h.bumpScale,h.side===V&&(u.bumpScale.value*=-1)),h.normalMap&&(u.normalMap.value=h.normalMap,u.normalScale.value.copy(h.normalScale),h.side===V&&u.normalScale.value.negate()),h.displacementMap&&(u.displacementMap.value=h.displacementMap,u.displacementScale.value=h.displacementScale,u.displacementBias.value=h.displacementBias)):e.isMeshStandardMaterial?(d(t,e),e.isMeshPhysicalMaterial?(f(l=t,c=e),l.reflectivity.value=c.reflectivity,l.clearcoat.value=c.clearcoat,l.clearcoatRoughness.value=c.clearcoatRoughness,c.sheen&&l.sheen.value.copy(c.sheen),c.clearcoatMap&&(l.clearcoatMap.value=c.clearcoatMap),c.clearcoatRoughnessMap&&(l.clearcoatRoughnessMap.value=c.clearcoatRoughnessMap),c.clearcoatNormalMap&&(l.clearcoatNormalScale.value.copy(c.clearcoatNormalScale),l.clearcoatNormalMap.value=c.clearcoatNormalMap,c.side===V&&l.clearcoatNormalScale.value.negate()),l.transmission.value=c.transmission,c.transmissionMap&&(l.transmissionMap.value=c.transmissionMap)):f(t,e)):e.isMeshMatcapMaterial?(d(t,e),l=t,(c=e).matcap&&(l.matcap.value=c.matcap),c.bumpMap&&(l.bumpMap.value=c.bumpMap,l.bumpScale.value=c.bumpScale,c.side===V&&(l.bumpScale.value*=-1)),c.normalMap&&(l.normalMap.value=c.normalMap,l.normalScale.value.copy(c.normalScale),c.side===V&&l.normalScale.value.negate()),c.displacementMap&&(l.displacementMap.value=c.displacementMap,l.displacementScale.value=c.displacementScale,l.displacementBias.value=c.displacementBias)):e.isMeshDepthMaterial?(d(t,e),a=t,(o=e).displacementMap&&(a.displacementMap.value=o.displacementMap,a.displacementScale.value=o.displacementScale,a.displacementBias.value=o.displacementBias)):e.isMeshDistanceMaterial?(d(t,e),a=t,(o=e).displacementMap&&(a.displacementMap.value=o.displacementMap,a.displacementScale.value=o.displacementScale,a.displacementBias.value=o.displacementBias),a.referencePosition.value.copy(o.referencePosition),a.nearDistance.value=o.nearDistance,a.farDistance.value=o.farDistance):e.isMeshNormalMaterial?(d(t,e),r=t,(s=e).bumpMap&&(r.bumpMap.value=s.bumpMap,r.bumpScale.value=s.bumpScale,s.side===V&&(r.bumpScale.value*=-1)),s.normalMap&&(r.normalMap.value=s.normalMap,r.normalScale.value.copy(s.normalScale),s.side===V&&r.normalScale.value.negate()),s.displacementMap&&(r.displacementMap.value=s.displacementMap,r.displacementScale.value=s.displacementScale,r.displacementBias.value=s.displacementBias)):e.isLineBasicMaterial?(r=e,(s=t).diffuse.value.copy(r.color),s.opacity.value=r.opacity,e.isLineDashedMaterial&&(s=e,(r=t).dashSize.value=s.dashSize,r.totalSize.value=s.dashSize+s.gapSize,r.scale.value=s.scale)):e.isPointsMaterial?function(t,e,i,n){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*i,t.scale.value=.5*n,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap);let r;e.map?r=e.map:e.alphaMap&&(r=e.alphaMap),void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix))}(t,e,i,n):e.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap);let i;e.map?i=e.map:e.alphaMap&&(i=e.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}(t,e):e.isShadowMaterial?(t.color.value.copy(e.color),t.opacity.value=e.opacity):e.isShaderMaterial&&(e.uniformsNeedUpdate=!1)}}}function Dr(t){const r=void 0!==(t=t||{}).canvas?t.canvas:function(){const t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.style.display="block",t}(),e=void 0!==t.context?t.context:null,i=void 0!==t.alpha&&t.alpha,n=void 0===t.depth||t.depth,s=void 0===t.stencil||t.stencil,a=void 0!==t.antialias&&t.antialias,o=void 0===t.premultipliedAlpha||t.premultipliedAlpha,l=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,c=void 0!==t.powerPreference?t.powerPreference:"default",h=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let u=null,y=null;const p=[];this.domElement=r,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Lt,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const x=this;let d=!1,f=null,m=0,g=0,_=null,v=null,b=-1,M=null;const w=new Ct,S=new Ct;let A=null,T=r.width,L=r.height,P=1,E=null,C=null;const N=new Ct(0,0,T,L),O=new Ct(0,0,T,L);let I=!1;const D=new Ei;let R=!1,z=!1;const F=new Ot,U=new Nt,B={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function k(){return null===_?P:1}let V,j,G,W,H,X,Y,q,Z,J,K,Q,$,tt,et,it,nt,rt,st,at,ot,lt=e;function ct(e,i){for(let t=0;t<e.length;t++){var n=e[t],n=r.getContext(n,i);if(null!==n)return n}return null}try{const t={alpha:i,depth:n,stencil:s,antialias:a,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h};if(r.addEventListener("webglcontextlost",dt,!1),r.addEventListener("webglcontextrestored",ft,!1),null===lt){const r=["webgl2","webgl","experimental-webgl"];if(!0===x.isWebGL1Renderer&&r.shift(),lt=ct(r,t),null===lt)throw ct(r)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===lt.getShaderPrecisionFormat&&(lt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw t}function ht(){V=new ji(lt),j=new Bi(lt,V,t),!1===j.isWebGL2&&(V.get("WEBGL_depth_texture"),V.get("OES_texture_float"),V.get("OES_texture_half_float"),V.get("OES_texture_half_float_linear"),V.get("OES_standard_derivatives"),V.get("OES_element_index_uint"),V.get("OES_vertex_array_object"),V.get("ANGLE_instanced_arrays")),V.get("OES_texture_float_linear"),at=new Pr(lt,V,j),G=new Tr(lt,V,j),G.scissor(S.copy(O).multiplyScalar(P).floor()),G.viewport(w.copy(N).multiplyScalar(P).floor()),W=new Hi(lt),H=new pr,X=new Lr(lt,V,G,H,j,at,W),Y=new Vi(x),q=new Ni(lt,j),ot=new Fi(lt,V,q,j),Z=new Gi(lt,q,W,ot),J=new Zi(lt,Z,q,W),nt=new qi(lt),et=new ki(H),K=new ur(x,Y,V,j,ot,et),Q=new Ir(H),$=new gr(H),tt=new Mr(V,j),it=new zi(x,Y,G,J,o),rt=new Ui(lt,V,W,j),st=new Wi(lt,V,W,j),W.programs=K.programs,x.capabilities=j,x.extensions=V,x.properties=H,x.renderLists=$,x.state=G,x.info=W}ht();const ut=new Or(x,lt);this.xr=ut;const pt=new Ar(x,J,j.maxTextureSize);function dt(t){t.preventDefault(),d=!0}function ft(){d=!1,ht()}function mt(t){const e=t.target;e.removeEventListener("dispose",mt),gt(t=e),H.remove(t)}function gt(t){t=H.get(t).program;void 0!==t&&K.releaseProgram(t)}this.shadowMap=pt,this.getContext=function(){return lt},this.getContextAttributes=function(){return lt.getContextAttributes()},this.forceContextLoss=function(){const t=V.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=V.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return P},this.setPixelRatio=function(t){void 0!==t&&(P=t,this.setSize(T,L,!1))},this.getSize=function(t){return(t=void 0===t?new Et:t).set(T,L)},this.setSize=function(t,e,i){ut.isPresenting||(T=t,L=e,r.width=Math.floor(t*P),r.height=Math.floor(e*P),!1!==i&&(r.style.width=t+"px",r.style.height=e+"px"),this.setViewport(0,0,t,e))},this.getDrawingBufferSize=function(t){return(t=void 0===t?new Et:t).set(T*P,L*P).floor()},this.setDrawingBufferSize=function(t,e,i){T=t,L=e,P=i,r.width=Math.floor(t*i),r.height=Math.floor(e*i),this.setViewport(0,0,t,e)},this.getCurrentViewport=function(t){return(t=void 0===t?new Ct:t).copy(w)},this.getViewport=function(t){return t.copy(N)},this.setViewport=function(t,e,i,n){t.isVector4?N.set(t.x,t.y,t.z,t.w):N.set(t,e,i,n),G.viewport(w.copy(N).multiplyScalar(P).floor())},this.getScissor=function(t){return t.copy(O)},this.setScissor=function(t,e,i,n){t.isVector4?O.set(t.x,t.y,t.z,t.w):O.set(t,e,i,n),G.scissor(S.copy(O).multiplyScalar(P).floor())},this.getScissorTest=function(){return I},this.setScissorTest=function(t){G.setScissorTest(I=t)},this.setOpaqueSort=function(t){E=t},this.setTransparentSort=function(t){C=t},this.getClearColor=function(t){return(t=void 0===t?new _e:t).copy(it.getClearColor())},this.setClearColor=function(){it.setClearColor.apply(it,arguments)},this.getClearAlpha=function(){return it.getClearAlpha()},this.setClearAlpha=function(){it.setClearAlpha.apply(it,arguments)},this.clear=function(t,e,i){let n=0;void 0!==t&&!t||(n|=16384),void 0!==e&&!e||(n|=256),void 0!==i&&!i||(n|=1024),lt.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){r.removeEventListener("webglcontextlost",dt,!1),r.removeEventListener("webglcontextrestored",ft,!1),$.dispose(),tt.dispose(),H.dispose(),Y.dispose(),J.dispose(),ot.dispose(),ut.dispose(),yt.stop()},this.renderBufferImmediate=function(t,e){ot.initAttributes();const i=H.get(t);t.hasPositions&&!i.position&&(i.position=lt.createBuffer()),t.hasNormals&&!i.normal&&(i.normal=lt.createBuffer()),t.hasUvs&&!i.uv&&(i.uv=lt.createBuffer()),t.hasColors&&!i.color&&(i.color=lt.createBuffer());e=e.getAttributes();t.hasPositions&&(lt.bindBuffer(34962,i.position),lt.bufferData(34962,t.positionArray,35048),ot.enableAttribute(e.position),lt.vertexAttribPointer(e.position,3,5126,!1,0,0)),t.hasNormals&&(lt.bindBuffer(34962,i.normal),lt.bufferData(34962,t.normalArray,35048),ot.enableAttribute(e.normal),lt.vertexAttribPointer(e.normal,3,5126,!1,0,0)),t.hasUvs&&(lt.bindBuffer(34962,i.uv),lt.bufferData(34962,t.uvArray,35048),ot.enableAttribute(e.uv),lt.vertexAttribPointer(e.uv,2,5126,!1,0,0)),t.hasColors&&(lt.bindBuffer(34962,i.color),lt.bufferData(34962,t.colorArray,35048),ot.enableAttribute(e.color),lt.vertexAttribPointer(e.color,3,5126,!1,0,0)),ot.disableUnusedAttributes(),lt.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,i,n,r,s){null===e&&(e=B);var a=r.isMesh&&r.matrixWorld.determinant()<0,o=Mt(t,e,n,r);G.setMaterial(n,a);let l=i.index;var c=i.attributes.position;if(null===l){if(void 0===c||0===c.count)return}else if(0===l.count)return;let h,u=1;!0===n.wireframe&&(l=Z.getWireframeAttribute(i),u=2),(n.morphTargets||n.morphNormals)&&nt.update(r,i,n,o),ot.setup(r,n,o,i,l);let p=rt;null!==l&&(h=q.get(l),p=st,p.setIndex(h));t=(null!==l?l:c).count,e=i.drawRange.start*u,a=i.drawRange.count*u,o=null!==s?s.start*u:0,c=null!==s?s.count*u:1/0,s=Math.max(e,o),c=Math.min(t,e+a,o+c)-1,c=Math.max(0,c-s+1);if(0!==c){if(r.isMesh)!0===n.wireframe?(G.setLineWidth(n.wireframeLinewidth*k()),p.setMode(1)):p.setMode(4);else if(r.isLine){let t=n.linewidth;void 0===t&&(t=1),G.setLineWidth(t*k()),r.isLineSegments?p.setMode(1):r.isLineLoop?p.setMode(2):p.setMode(3)}else r.isPoints?p.setMode(0):r.isSprite&&p.setMode(4);if(r.isInstancedMesh)p.renderInstances(s,c,r.count);else if(i.isInstancedBufferGeometry){const d=Math.min(i.instanceCount,i._maxInstanceCount);p.renderInstances(s,c,d)}else p.render(s,c)}},this.compile=function(r,e){y=tt.get(r),y.init(),r.traverseVisible(function(t){t.isLight&&t.layers.test(e.layers)&&(y.pushLight(t),t.castShadow&&y.pushShadow(t))}),y.setupLights();const s=new WeakMap;r.traverse(function(e){var i=e.material;if(i)if(Array.isArray(i))for(let t=0;t<i.length;t++){var n=i[t];!1===s.has(n)&&(bt(n,r,e),s.set(n))}else!1===s.has(i)&&(bt(i,r,e),s.set(i))})};let vt=null;const yt=new Ci;function xt(i,n,r){const s=!0===n.isScene?n.overrideMaterial:null;for(let t=0,e=i.length;t<e;t++){const a=i[t],o=a.object,l=a.geometry,c=null===s?a.material:s,h=a.group;if(r.isArrayCamera){const i=r.cameras;for(let t=0,e=i.length;t<e;t++){const s=i[t];o.layers.test(s.layers)&&(G.viewport(w.copy(s.viewport)),y.setupLightsView(s),_t(o,n,s,l,c,h))}}else _t(o,n,r,l,c,h)}}function _t(t,e,i,n,r,s){if(t.onBeforeRender(x,e,i,n,r,s),t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const n=Mt(i,e,r,t);G.setMaterial(r),ot.reset(),a=n,t.render(function(t){x.renderBufferImmediate(t,a)})}else x.renderBufferDirect(i,e,n,r,t,s);var a;t.onAfterRender(x,e,i,n,r,s)}function bt(t,e,i){!0!==e.isScene&&(e=B);const n=H.get(t),r=y.state.lights,s=y.state.shadowsArray,a=r.state.version,o=K.getParameters(t,r.state,s,e,i),l=K.getProgramCacheKey(o);let c=n.program,h=!0;if(void 0===c)t.addEventListener("dispose",mt);else if(c.cacheKey!==l)gt(t);else if(n.lightsStateVersion!==a)h=!1;else{if(void 0!==o.shaderID){const i=t.isMeshStandardMaterial?e.environment:null;return n.envMap=Y.get(t.envMap||i),0}h=!1}h&&(o.uniforms=K.getUniforms(t),t.onBeforeCompile(o,x),c=K.acquireProgram(o,l),n.program=c,n.uniforms=o.uniforms,n.outputEncoding=o.outputEncoding);const u=n.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(n.numClippingPlanes=et.numPlanes,n.numIntersection=et.numIntersection,u.clippingPlanes=et.uniform),n.environment=t.isMeshStandardMaterial?e.environment:null,n.fog=e.fog,n.envMap=Y.get(t.envMap||n.environment),n.needsLights=t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights,n.lightsStateVersion=a,n.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotShadowMatrix.value=r.state.spotShadowMatrix,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix);t=n.program.getUniforms(),t=Xn.seqWithValue(t.seq,u);n.uniformsList=t}function Mt(t,e,i,n){!0!==e.isScene&&(e=B),X.resetTextureUnits();const r=e.fog,s=i.isMeshStandardMaterial?e.environment:null,a=null===_?x.outputEncoding:_.texture.encoding,o=Y.get(i.envMap||s),l=H.get(i),c=y.state.lights;if(!0===R&&(!0===z||t!==M)){const e=t===M&&i.id===b;et.setState(i,t,e)}i.version===l.__version?(i.fog&&l.fog!==r||l.environment!==s||l.needsLights&&l.lightsStateVersion!==c.state.version||void 0!==l.numClippingPlanes&&(l.numClippingPlanes!==et.numPlanes||l.numIntersection!==et.numIntersection)||l.outputEncoding!==a||l.envMap!==o)&&bt(i,e,n):(bt(i,e,n),l.__version=i.version);let h=!1,u=!1,p=!1;const d=l.program,f=d.getUniforms(),m=l.uniforms;if(G.useProgram(d.program)&&(h=!0,u=!0,p=!0),i.id!==b&&(b=i.id,u=!0),h||M!==t){if(f.setValue(lt,"projectionMatrix",t.projectionMatrix),j.logarithmicDepthBuffer&&f.setValue(lt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),M!==t&&(M=t,u=!0,p=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshStandardMaterial||i.envMap){const e=f.map.cameraPosition;void 0!==e&&e.setValue(lt,U.setFromMatrixPosition(t.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&f.setValue(lt,"isOrthographic",!0===t.isOrthographicCamera),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.isShadowMaterial||i.skinning)&&f.setValue(lt,"viewMatrix",t.matrixWorldInverse)}if(i.skinning){f.setOptional(lt,n,"bindMatrix"),f.setOptional(lt,n,"bindMatrixInverse");const v=n.skeleton;if(v){const e=v.bones;if(j.floatVertexTextures){if(null===v.boneTexture){var g=Math.sqrt(4*e.length),g=Pt.ceilPowerOfTwo(g);g=Math.max(g,4);const n=new Float32Array(g*g*4);n.set(v.boneMatrices);const r=new Ti(n,g,g,Tt,St);v.boneMatrices=n,v.boneTexture=r,v.boneTextureSize=g}f.setValue(lt,"boneTexture",v.boneTexture,X),f.setValue(lt,"boneTextureSize",v.boneTextureSize)}else f.setOptional(lt,v,"boneMatrices")}}return!u&&l.receiveShadow===n.receiveShadow||(l.receiveShadow=n.receiveShadow,f.setValue(lt,"receiveShadow",n.receiveShadow)),u&&(f.setValue(lt,"toneMappingExposure",x.toneMappingExposure),l.needsLights&&(t=p,(g=m).ambientLightColor.needsUpdate=t,g.lightProbe.needsUpdate=t,g.directionalLights.needsUpdate=t,g.directionalLightShadows.needsUpdate=t,g.pointLights.needsUpdate=t,g.pointLightShadows.needsUpdate=t,g.spotLights.needsUpdate=t,g.spotLightShadows.needsUpdate=t,g.rectAreaLights.needsUpdate=t,g.hemisphereLights.needsUpdate=t),r&&i.fog&&Q.refreshFogUniforms(m,r),Q.refreshMaterialUniforms(m,i,P,L),Xn.upload(lt,l.uniformsList,m,X)),i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(Xn.upload(lt,l.uniformsList,m,X),i.uniformsNeedUpdate=!1),i.isSpriteMaterial&&f.setValue(lt,"center",n.center),f.setValue(lt,"modelViewMatrix",n.modelViewMatrix),f.setValue(lt,"normalMatrix",n.normalMatrix),f.setValue(lt,"modelMatrix",n.matrixWorld),d}yt.setAnimationLoop(function(t){ut.isPresenting||vt&&vt(t)}),"undefined"!=typeof window&&yt.setContext(window),this.setAnimationLoop=function(t){vt=t,ut.setAnimationLoop(t),null===t?yt.stop():yt.start()},this.render=function(t,e){let i,n;var r,s;void 0!==arguments[2]&&(i=arguments[2]),void 0!==arguments[3]&&(n=arguments[3]),void 0!==e&&!0!==e.isCamera||!0!==d&&(ot.resetDefaultState(),b=-1,!(M=null)===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===ut.enabled&&!0===ut.isPresenting&&(e=ut.getCamera(e)),!0===t.isScene&&t.onBeforeRender(x,t,e,i||_),y=tt.get(t,p.length),y.init(),p.push(y),F.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),D.setFromProjectionMatrix(F),z=this.localClippingEnabled,R=et.init(this.clippingPlanes,z,e),u=$.get(t,e),u.init(),function i(n,r,s,a){if(!1!==n.visible){if(n.layers.test(r.layers))if(n.isGroup)s=n.renderOrder;else if(n.isLOD)!0===n.autoUpdate&&n.update(r);else if(n.isLight)y.pushLight(n),n.castShadow&&y.pushShadow(n);else if(n.isSprite){if(!n.frustumCulled||D.intersectsSprite(n)){a&&U.setFromMatrixPosition(n.matrixWorld).applyMatrix4(F);const r=J.update(n),c=n.material;c.visible&&u.push(n,r,c,s,U.z,null)}}else if(n.isImmediateRenderObject)a&&U.setFromMatrixPosition(n.matrixWorld).applyMatrix4(F),u.push(n,null,n.material,s,U.z,null);else if((n.isMesh||n.isLine||n.isPoints)&&(n.isSkinnedMesh&&n.skeleton.frame!==W.render.frame&&(n.skeleton.update(),n.skeleton.frame=W.render.frame),!n.frustumCulled||D.intersectsObject(n))){a&&U.setFromMatrixPosition(n.matrixWorld).applyMatrix4(F);const r=J.update(n),c=n.material;if(Array.isArray(c)){const a=r.groups;for(let t=0,e=a.length;t<e;t++){var o=a[t],l=c[o.materialIndex];l&&l.visible&&u.push(n,r,l,s,U.z,o)}}else c.visible&&u.push(n,r,c,s,U.z,null)}const c=n.children;for(let t=0,e=c.length;t<e;t++)i(c[t],r,s,a)}}(t,e,0,x.sortObjects),u.finish(),!0===x.sortObjects&&u.sort(E,C),!0===R&&et.beginShadows(),s=y.state.shadowsArray,pt.render(s,t,e),y.setupLights(),y.setupLightsView(e),!0===R&&et.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==i&&this.setRenderTarget(i),it.render(u,t,e,n),r=u.opaque,s=u.transparent,0<r.length&&xt(r,t,e),0<s.length&&xt(s,t,e),!0===t.isScene&&t.onAfterRender(x,t,e),null!==_&&(X.updateRenderTargetMipmap(_),X.updateMultisampleRenderTarget(_)),G.buffers.depth.setTest(!0),G.buffers.depth.setMask(!0),G.buffers.color.setMask(!0),G.setPolygonOffset(!1),p.pop(),y=0<p.length?p[p.length-1]:null,u=null)},this.setFramebuffer=function(t){f!==t&&null===_&&lt.bindFramebuffer(36160,t),f=t},this.getActiveCubeFace=function(){return m},this.getActiveMipmapLevel=function(){return g},this.getRenderList=function(){return u},this.setRenderList=function(t){u=t},this.getRenderTarget=function(){return _},this.setRenderTarget=function(t,e=0,i=0){_=t,m=e,g=i,t&&void 0===H.get(t).__webglFramebuffer&&X.setupRenderTarget(t);let n=f,r=!1;if(t){const i=H.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(n=i[e],r=!0):n=t.isWebGLMultisampleRenderTarget?H.get(t).__webglMultisampledFramebuffer:i,w.copy(t.viewport),S.copy(t.scissor),A=t.scissorTest}else w.copy(N).multiplyScalar(P).floor(),S.copy(O).multiplyScalar(P).floor(),A=I;if(v!==n&&(lt.bindFramebuffer(36160,n),v=n),G.viewport(w),G.scissor(S),G.setScissorTest(A),r){const n=H.get(t.texture);lt.framebufferTexture2D(36160,36064,34069+e,n.__webglTexture,i)}},this.readRenderTargetPixels=function(i,n,r,s,a,o,t){if(i&&i.isWebGLRenderTarget){let e=H.get(i).__webglFramebuffer;if(i.isWebGLCubeRenderTarget&&void 0!==t&&(e=e[t]),e){let t=!1;e!==v&&(lt.bindFramebuffer(36160,e),t=!0);try{const t=i.texture,l=t.format,c=t.type;if(l!==Tt&&at.convert(l)!==lt.getParameter(35739))return;if(!(c===wt||at.convert(c)===lt.getParameter(35738)||c===St&&(j.isWebGL2||V.get("OES_texture_float")||V.get("WEBGL_color_buffer_float"))||c===At&&(j.isWebGL2?V.get("EXT_color_buffer_float"):V.get("EXT_color_buffer_half_float"))))return;36053===lt.checkFramebufferStatus(36160)&&0<=n&&n<=i.width-s&&0<=r&&r<=i.height-a&&lt.readPixels(n,r,s,a,at.convert(l),at.convert(c),o)}finally{t&&lt.bindFramebuffer(36160,v)}}}},this.copyFramebufferToTexture=function(t,e,i=0){var n=Math.pow(2,-i),r=Math.floor(e.image.width*n),s=Math.floor(e.image.height*n),n=at.convert(e.format);X.setTexture2D(e,0),lt.copyTexImage2D(3553,i,n,t.x,t.y,r,s,0),G.unbindTexture()},this.copyTextureToTexture=function(t,e,i,n=0){var r=e.image.width,s=e.image.height,a=at.convert(i.format),o=at.convert(i.type);X.setTexture2D(i,0),lt.pixelStorei(37440,i.flipY),lt.pixelStorei(37441,i.premultiplyAlpha),lt.pixelStorei(3317,i.unpackAlignment),e.isDataTexture?lt.texSubImage2D(3553,n,t.x,t.y,r,s,a,o,e.image.data):e.isCompressedTexture?lt.compressedTexSubImage2D(3553,n,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,a,e.mipmaps[0].data):lt.texSubImage2D(3553,n,t.x,t.y,a,o,e.image),0===n&&i.generateMipmaps&&lt.generateMipmap(3553),G.unbindTexture()},this.initTexture=function(t){X.setTexture2D(t,0),G.unbindTexture()},this.resetState=function(){G.reset(),ot.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function Rr(t){Dr.call(this,t)}((wr.prototype=Object.create(we.prototype)).constructor=wr).prototype.isMeshDepthMaterial=!0,wr.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},((Sr.prototype=Object.create(we.prototype)).constructor=Sr).prototype.isMeshDistanceMaterial=!0,Sr.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this},Er.prototype=Object.assign(Object.create(Mi.prototype),{constructor:Er,isArrayCamera:!0}),Cr.prototype=Object.assign(Object.create(Qt.prototype),{constructor:Cr,isGroup:!0}),Object.assign(Nr.prototype,{constructor:Nr,getHandSpace:function(){if(null===this._hand&&(this._hand=new Cr,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let t=0;t<=window.XRHand.LITTLE_PHALANX_TIP;t++){const e=new Cr;e.matrixAutoUpdate=!1,e.visible=!1,this._hand.joints.push(e),this._hand.add(e)}return this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new Cr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new Cr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(e,i,n){let t=null,r=null,s=null;const a=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==i.session.visibilityState)if(l&&e.hand){s=!0;for(let t=0;t<=window.XRHand.LITTLE_PHALANX_TIP;t++)if(e.hand[t]){const r=i.getJointPose(e.hand[t],n),s=l.joints[t];null!==r&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.jointRadius=r.radius),s.visible=null!==r;const a=l.joints[window.XRHand.INDEX_PHALANX_TIP],o=l.joints[window.XRHand.THUMB_PHALANX_TIP],c=a.position.distanceTo(o.position);l.inputState.pinching&&.025<c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&c<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}}else null!==a&&(t=i.getPose(e.targetRaySpace,n),null!==t&&(a.matrix.fromArray(t.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale))),null!==o&&e.gripSpace&&(r=i.getPose(e.gripSpace,n),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale)));return null!==a&&(a.visible=null!==t),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==s),this}}),Object.assign(Or.prototype,c.prototype),Rr.prototype=Object.assign(Object.create(Dr.prototype),{constructor:Rr,isWebGL1Renderer:!0});class zr extends Qt{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}function Fr(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=a,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Pt.generateUUID()}Object.defineProperty(Fr.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Fr.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(i,n,r){i*=this.stride,r*=n.stride;for(let t=0,e=this.stride;t<e;t++)this.array[i+t]=n.array[r+t];return this},set:function(t,e=0){return this.array.set(t,e),this},clone:function(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Pt.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new Fr(new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),this.stride);return e.setUsage(this.usage),e},onUpload:function(t){return this.onUploadCallback=t,this},toJSON:function(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Pt.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const Ur=new Nt;function Br(t,e,i,n){this.name="",this.data=t,this.itemSize=e,this.offset=i,this.normalized=!0===n}function kr(t){we.call(this),this.type="SpriteMaterial",this.color=new _e(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}let Vr;Object.defineProperties(Br.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(t){this.data.needsUpdate=t}}}),Object.assign(Br.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(i){for(let t=0,e=this.data.count;t<e;t++)Ur.x=this.getX(t),Ur.y=this.getY(t),Ur.z=this.getZ(t),Ur.applyMatrix4(i),this.setXYZ(t,Ur.x,Ur.y,Ur.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this},setXYZ:function(t,e,i,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this},setXYZW:function(t,e,i,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this.data.array[t+3]=r,this},clone:function(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Br(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{const e=[];for(let t=0;t<this.count;t++){var i=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[i+t])}return new Le(new this.array.constructor(e),this.itemSize,this.normalized)}},toJSON:function(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{const e=[];for(let t=0;t<this.count;t++){var i=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[i+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}}}),((kr.prototype=Object.create(we.prototype)).constructor=kr).prototype.isSpriteMaterial=!0,kr.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this};const jr=new Nt,Gr=new Nt,Wr=new Nt,Hr=new Et,Xr=new Et,Yr=new Ot,qr=new Nt,Zr=new Nt,Jr=new Nt,Kr=new Et,Qr=new Et,$r=new Et;function ts(t){if(Qt.call(this),this.type="Sprite",void 0===Vr){Vr=new Ze;const t=new Fr(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);Vr.setIndex([0,1,2,0,2,3]),Vr.setAttribute("position",new Br(t,3,0,!1)),Vr.setAttribute("uv",new Br(t,2,3,!1))}this.geometry=Vr,this.material=void 0!==t?t:new kr,this.center=new Et(.5,.5)}function es(t,e,i,n,r,s){Hr.subVectors(t,i).addScalar(.5).multiply(n),void 0!==r?(Xr.x=s*Hr.x-r*Hr.y,Xr.y=r*Hr.x+s*Hr.y):Xr.copy(Hr),t.copy(e),t.x+=Xr.x,t.y+=Xr.y,t.applyMatrix4(Yr)}ts.prototype=Object.assign(Object.create(Qt.prototype),{constructor:ts,isSprite:!0,raycast:function(t,e){t.camera,Gr.setFromMatrixScale(this.matrixWorld),Yr.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Wr.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Gr.multiplyScalar(-Wr.z);var i=this.material.rotation;let n,r;0!==i&&(r=Math.cos(i),n=Math.sin(i));i=this.center;es(qr.set(-.5,-.5,0),Wr,i,Gr,n,r),es(Zr.set(.5,-.5,0),Wr,i,Gr,n,r),es(Jr.set(.5,.5,0),Wr,i,Gr,n,r),Kr.set(0,0),Qr.set(1,0),$r.set(1,1),null===t.ray.intersectTriangle(qr,Zr,Jr,!1,jr)&&(es(Zr.set(-.5,.5,0),Wr,i,Gr,n,r),Qr.set(0,1),null===t.ray.intersectTriangle(qr,Jr,Zr,!1,jr))||((i=t.ray.origin.distanceTo(jr))<t.near||i>t.far||e.push({distance:i,point:jr.clone(),uv:de.getUV(jr,qr,Zr,Jr,Kr,Qr,$r,new Et),face:null,object:this}))},copy:function(t){return Qt.prototype.copy.call(this,t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}});const is=new Nt,ns=new Nt;function rs(){Qt.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}rs.prototype=Object.assign(Object.create(Qt.prototype),{constructor:rs,isLOD:!0,copy:function(t){Qt.prototype.copy.call(this,t,!1);var i=t.levels;for(let t=0,e=i.length;t<e;t++){const n=i[t];this.addLevel(n.object.clone(),n.distance)}return this.autoUpdate=t.autoUpdate,this},addLevel:function(t,e=0){e=Math.abs(e);const i=this.levels;let n;for(n=0;n<i.length&&!(e<i[n].distance);n++);return i.splice(n,0,{distance:e,object:t}),this.add(t),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(i){var n=this.levels;if(0<n.length){let t,e;for(t=1,e=n.length;t<e&&!(i<n[t].distance);t++);return n[t-1].object}return null},raycast:function(t,e){var i;0<this.levels.length&&(is.setFromMatrixPosition(this.matrixWorld),i=t.ray.origin.distanceTo(is),this.getObjectForDistance(i).raycast(t,e))},update:function(i){const n=this.levels;if(1<n.length){is.setFromMatrixPosition(i.matrixWorld),ns.setFromMatrixPosition(this.matrixWorld);var r=is.distanceTo(ns)/i.zoom;let t,e;for(n[0].object.visible=!0,t=1,e=n.length;t<e&&r>=n[t].distance;t++)n[t-1].object.visible=!1,n[t].object.visible=!0;for(this._currentLevel=t-1;t<e;t++)n[t].object.visible=!1}},toJSON:function(t){const i=Qt.prototype.toJSON.call(this,t);!1===this.autoUpdate&&(i.object.autoUpdate=!1),i.object.levels=[];var n=this.levels;for(let t=0,e=n.length;t<e;t++){var r=n[t];i.object.levels.push({object:r.object.uuid,distance:r.distance})}return i}});const ss=new Nt,as=new Ct,os=new Ct,ls=new Nt,cs=new Ot;function hs(t,e){t&&t.isGeometry,di.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Ot,this.bindMatrixInverse=new Ot}function us(){Qt.call(this),this.type="Bone"}hs.prototype=Object.assign(Object.create(di.prototype),{constructor:hs,isSkinnedMesh:!0,copy:function(t){return di.prototype.copy.call(this,t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const i=new Ct,n=this.geometry.attributes.skinWeight;for(let t=0,e=n.count;t<e;t++){i.x=n.getX(t),i.y=n.getY(t),i.z=n.getZ(t),i.w=n.getW(t);var r=1/i.manhattanLength();r!=1/0?i.multiplyScalar(r):i.set(1,0,0,0),n.setXYZW(t,i.x,i.y,i.z,i.w)}},updateMatrixWorld:function(t){di.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode&&this.bindMatrixInverse.copy(this.bindMatrix).invert()},boneTransform:function(t,e){const i=this.skeleton,n=this.geometry;as.fromBufferAttribute(n.attributes.skinIndex,t),os.fromBufferAttribute(n.attributes.skinWeight,t),ss.fromBufferAttribute(n.attributes.position,t).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const n=os.getComponent(t);var r;0!==n&&(r=as.getComponent(t),cs.multiplyMatrices(i.bones[r].matrixWorld,i.boneInverses[r]),e.addScaledVector(ls.copy(ss).applyMatrix4(cs),n))}return e.applyMatrix4(this.bindMatrixInverse)}}),us.prototype=Object.assign(Object.create(Qt.prototype),{constructor:us,isBone:!0});const ps=new Ot,ds=new Ot;function fs(t=[],e=[]){this.uuid=Pt.generateUUID(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}Object.assign(fs.prototype,{init:function(){var t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new Ot)}},calculateInverses:function(){for(let t=this.boneInverses.length=0,e=this.bones.length;t<e;t++){const i=new Ot;this.bones[t]&&i.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(i)}},pose:function(){for(let t=0,e=this.bones.length;t<e;t++){const i=this.bones[t];i&&i.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}},update:function(){const i=this.bones,n=this.boneInverses,r=this.boneMatrices,t=this.boneTexture;for(let t=0,e=i.length;t<e;t++){var s=i[t]?i[t].matrixWorld:ds;ps.multiplyMatrices(s,n[t]),ps.toArray(r,16*t)}null!==t&&(t.needsUpdate=!0)},clone:function(){return new fs(this.bones,this.boneInverses)},getBoneByName:function(i){for(let t=0,e=this.bones.length;t<e;t++){var n=this.bones[t];if(n.name===i)return n}},dispose:function(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)},fromJSON:function(i,n){this.uuid=i.uuid;for(let e=0,t=i.bones.length;e<t;e++){let t=n[i.bones[e]];void 0===t&&(t=new us),this.bones.push(t),this.boneInverses.push((new Ot).fromArray(i.boneInverses[e]))}return this.init(),this},toJSON:function(){const i={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};i.uuid=this.uuid;var n=this.bones,r=this.boneInverses;for(let t=0,e=n.length;t<e;t++){var s=n[t];i.bones.push(s.uuid);const a=r[t];i.boneInverses.push(a.toArray())}return i}});const ms=new Ot,gs=new Ot,vs=[],ys=new di;function xs(t,e,i){di.call(this,t,e),this.instanceMatrix=new Le(new Float32Array(16*i),16),this.instanceColor=null,this.count=i,this.frustumCulled=!1}function _s(t){we.call(this),this.type="LineBasicMaterial",this.color=new _e(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}xs.prototype=Object.assign(Object.create(di.prototype),{constructor:xs,isInstancedMesh:!0,copy:function(t){return di.prototype.copy.call(this,t),this.instanceMatrix.copy(t.instanceMatrix),this.count=t.count,this},getColorAt:function(t,e){e.fromArray(this.instanceColor.array,3*t)},getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,16*t)},raycast:function(t,n){const r=this.matrixWorld,e=this.count;if(ys.geometry=this.geometry,ys.material=this.material,void 0!==ys.material)for(let i=0;i<e;i++){this.getMatrixAt(i,ms),gs.multiplyMatrices(r,ms),ys.matrixWorld=gs,ys.raycast(t,vs);for(let t=0,e=vs.length;t<e;t++){const r=vs[t];r.instanceId=i,r.object=this,n.push(r)}vs.length=0}},setColorAt:function(t,e){null===this.instanceColor&&(this.instanceColor=new Le(new Float32Array(3*this.count),3)),e.toArray(this.instanceColor.array,3*t)},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,16*t)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}}),((_s.prototype=Object.create(we.prototype)).constructor=_s).prototype.isLineBasicMaterial=!0,_s.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this};const bs=new Nt,Ms=new Nt,ws=new Ot,Ss=new vt,As=new ct;function Ts(t=new Ze,e=new _s){Qt.call(this),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}Ts.prototype=Object.assign(Object.create(Qt.prototype),{constructor:Ts,isLine:!0,copy:function(t){return Qt.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry){if(null===t.index){const i=t.attributes.position,n=[0];for(let t=1,e=i.count;t<e;t++)bs.fromBufferAttribute(i,t-1),Ms.fromBufferAttribute(i,t),n[t]=n[t-1],n[t]+=bs.distanceTo(Ms);t.setAttribute("lineDistance",new ze(n,1))}}else if(t.isGeometry){const r=t.vertices,s=t.lineDistances;s[0]=0;for(let t=1,e=r.length;t<e;t++)s[t]=s[t-1],s[t]+=r[t-1].distanceTo(r[t])}return this},raycast:function(i,n){const r=this.geometry,s=this.matrixWorld,a=i.params.Line.threshold;if(null===r.boundingSphere&&r.computeBoundingSphere(),As.copy(r.boundingSphere),As.applyMatrix4(s),As.radius+=a,!1!==i.ray.intersectsSphere(As)){ws.copy(s).invert(),Ss.copy(i.ray).applyMatrix4(ws);const l=a/((this.scale.x+this.scale.y+this.scale.z)/3),c=l*l,h=new Nt,u=new Nt,p=new Nt,d=new Nt,f=this.isLineSegments?2:1;if(r.isBufferGeometry){const s=r.index,a=r.attributes.position;if(null!==s){const r=s.array;for(let t=0,e=r.length-1;t<e;t+=f){const l=r[t],f=r[t+1];var o;h.fromBufferAttribute(a,l),u.fromBufferAttribute(a,f),Ss.distanceSqToSegment(h,u,d,p)>c||(d.applyMatrix4(this.matrixWorld),(o=i.ray.origin.distanceTo(d))<i.near||o>i.far||n.push({distance:o,point:p.clone().applyMatrix4(this.matrixWorld),index:t,face:null,faceIndex:null,object:this}))}}else for(let t=0,e=a.count-1;t<e;t+=f)if(h.fromBufferAttribute(a,t),u.fromBufferAttribute(a,t+1),!(Ss.distanceSqToSegment(h,u,d,p)>c)){d.applyMatrix4(this.matrixWorld);const s=i.ray.origin.distanceTo(d);s<i.near||s>i.far||n.push({distance:s,point:p.clone().applyMatrix4(this.matrixWorld),index:t,face:null,faceIndex:null,object:this})}}else if(r.isGeometry){const s=r.vertices,a=s.length;for(let t=0;t<a-1;t+=f)if(!(Ss.distanceSqToSegment(s[t],s[t+1],d,p)>c)){d.applyMatrix4(this.matrixWorld);const a=i.ray.origin.distanceTo(d);a<i.near||a>i.far||n.push({distance:a,point:p.clone().applyMatrix4(this.matrixWorld),index:t,face:null,faceIndex:null,object:this})}}}},updateMorphTargets:function(){const i=this.geometry;if(i.isBufferGeometry){var t=i.morphAttributes,e=Object.keys(t);if(0<e.length){const i=t[e[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=i.length;t<e;t++){var n=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{e=i.morphTargets;void 0!==e&&e.length}}});const Ls=new Nt,Ps=new Nt;function Es(t,e){Ts.call(this,t,e),this.type="LineSegments"}function Cs(t,e){Ts.call(this,t,e),this.type="LineLoop"}function Ns(t){we.call(this),this.type="PointsMaterial",this.color=new _e(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}Es.prototype=Object.assign(Object.create(Ts.prototype),{constructor:Es,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry){if(null===t.index){const i=t.attributes.position,n=[];for(let t=0,e=i.count;t<e;t+=2)Ls.fromBufferAttribute(i,t),Ps.fromBufferAttribute(i,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+Ls.distanceTo(Ps);t.setAttribute("lineDistance",new ze(n,1))}}else if(t.isGeometry){const r=t.vertices,s=t.lineDistances;for(let t=0,e=r.length;t<e;t+=2)Ls.copy(r[t]),Ps.copy(r[t+1]),s[t]=0===t?0:s[t-1],s[t+1]=s[t]+Ls.distanceTo(Ps)}return this}}),Cs.prototype=Object.assign(Object.create(Ts.prototype),{constructor:Cs,isLineLoop:!0}),((Ns.prototype=Object.create(we.prototype)).constructor=Ns).prototype.isPointsMaterial=!0,Ns.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this};const Os=new Ot,Is=new vt,Ds=new ct,Rs=new Nt;function zs(t=new Ze,e=new Ns){Qt.call(this),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}function Fs(t,e,i,n,r,s,a){var o=Is.distanceSqToPoint(t);if(o<i){const i=new Nt;Is.closestPointToPoint(t,i),i.applyMatrix4(n);n=r.ray.origin.distanceTo(i);n<r.near||n>r.far||s.push({distance:n,distanceToRay:Math.sqrt(o),point:i,index:e,face:null,object:a})}}function Us(e,t,i,n,r,s,a,o,l){g.call(this,e,t,i,n,r,s,a,o,l),this.format=void 0!==a?a:Q,this.minFilter=void 0!==s?s:Y,this.magFilter=void 0!==r?r:Y,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(function t(){c.needsUpdate=!0,e.requestVideoFrameCallback(t)})}function Bs(t,e,i,n,r,s,a,o,l,c,h,u){g.call(this,null,s,a,o,l,c,n,r,h,u),this.image={width:e,height:i},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}function ks(t,e,i,n,r,s,a,o,l){g.call(this,t,e,i,n,r,s,a,o,l),this.needsUpdate=!0}function Vs(t,e,i,n,r,s,a,o,l,c){if((c=void 0!==c?c:$)!==$&&c!==tt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===(i=void 0===i&&c===$?Z:i)&&c===tt&&(i=K),g.call(this,null,n,r,s,a,o,c,i,l),this.image={width:t,height:e},this.magFilter=void 0!==a?a:W,this.minFilter=void 0!==o?o:W,this.flipY=!1,this.generateMipmaps=!1}zs.prototype=Object.assign(Object.create(Qt.prototype),{constructor:zs,isPoints:!0,copy:function(t){return Qt.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},raycast:function(i,n){const r=this.geometry,s=this.matrixWorld,a=i.params.Points.threshold;if(null===r.boundingSphere&&r.computeBoundingSphere(),Ds.copy(r.boundingSphere),Ds.applyMatrix4(s),Ds.radius+=a,!1!==i.ray.intersectsSphere(Ds)){Os.copy(s).invert(),Is.copy(i.ray).applyMatrix4(Os);const l=a/((this.scale.x+this.scale.y+this.scale.z)/3),c=l*l;if(r.isBufferGeometry){const a=r.index,l=r.attributes.position;if(null!==a){const r=a.array;for(let t=0,e=r.length;t<e;t++){var o=r[t];Rs.fromBufferAttribute(l,o),Fs(Rs,o,c,s,i,n,this)}}else for(let t=0,e=l.count;t<e;t++)Rs.fromBufferAttribute(l,t),Fs(Rs,t,c,s,i,n,this)}else{const a=r.vertices;for(let t=0,e=a.length;t<e;t++)Fs(a[t],t,c,s,i,n,this)}}},updateMorphTargets:function(){const i=this.geometry;if(i.isBufferGeometry){var t=i.morphAttributes,e=Object.keys(t);if(0<e.length){const i=t[e[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=i.length;t<e;t++){var n=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{e=i.morphTargets;void 0!==e&&e.length}}}),Us.prototype=Object.assign(Object.create(g.prototype),{constructor:Us,clone:function(){return new this.constructor(this.image).copy(this)},isVideoTexture:!0,update:function(){var t=this.image;!1=="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),((Bs.prototype=Object.create(g.prototype)).constructor=Bs).prototype.isCompressedTexture=!0,((ks.prototype=Object.create(g.prototype)).constructor=ks).prototype.isCanvasTexture=!0,((Vs.prototype=Object.create(g.prototype)).constructor=Vs).prototype.isDepthTexture=!0;let js=0;const Gs=new Ot,Ws=new Qt,Hs=new Nt;function Xs(){Object.defineProperty(this,"id",{value:js+=2}),this.uuid=Pt.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Xs.prototype=Object.assign(Object.create(c.prototype),{constructor:Xs,isGeometry:!0,applyMatrix4:function(i){var n=(new v).getNormalMatrix(i);for(let t=0,e=this.vertices.length;t<e;t++)this.vertices[t].applyMatrix4(i);for(let t=0,e=this.faces.length;t<e;t++){const r=this.faces[t];r.normal.applyMatrix3(n).normalize();for(let t=0,e=r.vertexNormals.length;t<e;t++)r.vertexNormals[t].applyMatrix3(n).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(t){return Gs.makeRotationX(t),this.applyMatrix4(Gs),this},rotateY:function(t){return Gs.makeRotationY(t),this.applyMatrix4(Gs),this},rotateZ:function(t){return Gs.makeRotationZ(t),this.applyMatrix4(Gs),this},translate:function(t,e,i){return Gs.makeTranslation(t,e,i),this.applyMatrix4(Gs),this},scale:function(t,e,i){return Gs.makeScale(t,e,i),this.applyMatrix4(Gs),this},lookAt:function(t){return Ws.lookAt(t),Ws.updateMatrix(),this.applyMatrix4(Ws.matrix),this},fromBufferGeometry:function(t){const a=this,i=null!==t.index?t.index:void 0,n=t.attributes;if(void 0===n.position)return this;const e=n.position,o=n.normal,l=n.color,c=n.uv,h=n.uv2;void 0!==h&&(this.faceVertexUvs[1]=[]);for(let t=0;t<e.count;t++)a.vertices.push((new Nt).fromBufferAttribute(e,t)),void 0!==l&&a.colors.push((new _e).fromBufferAttribute(l,t));function r(t,e,i,n){var r=void 0===l?[]:[a.colors[t].clone(),a.colors[e].clone(),a.colors[i].clone()],s=void 0===o?[]:[(new Nt).fromBufferAttribute(o,t),(new Nt).fromBufferAttribute(o,e),(new Nt).fromBufferAttribute(o,i)],n=new be(t,e,i,s,r,n);a.faces.push(n),void 0!==c&&a.faceVertexUvs[0].push([(new Et).fromBufferAttribute(c,t),(new Et).fromBufferAttribute(c,e),(new Et).fromBufferAttribute(c,i)]),void 0!==h&&a.faceVertexUvs[1].push([(new Et).fromBufferAttribute(h,t),(new Et).fromBufferAttribute(h,e),(new Et).fromBufferAttribute(h,i)])}var s=t.groups;if(0<s.length)for(let t=0;t<s.length;t++){const a=s[t],n=a.start;for(let t=n,e=n+a.count;t<e;t+=3)void 0!==i?r(i.getX(t),i.getX(t+1),i.getX(t+2),a.materialIndex):r(t,t+1,t+2,a.materialIndex)}else if(void 0!==i)for(let t=0;t<i.count;t+=3)r(i.getX(t),i.getX(t+1),i.getX(t+2));else for(let t=0;t<e.count;t+=3)r(t,t+1,t+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Hs).negate(),this.translate(Hs.x,Hs.y,Hs.z),this},normalize:function(){this.computeBoundingSphere();const t=this.boundingSphere.center,e=this.boundingSphere.radius,i=0===e?1:1/e,n=new Ot;return n.set(i,0,0,-i*t.x,0,i,0,-i*t.y,0,0,i,-i*t.z,0,0,0,1),this.applyMatrix4(n),this},computeFaceNormals:function(){const i=new Nt,n=new Nt;for(let t=0,e=this.faces.length;t<e;t++){const r=this.faces[t],s=this.vertices[r.a],a=this.vertices[r.b],o=this.vertices[r.c];i.subVectors(o,a),n.subVectors(s,a),i.cross(n),i.normalize(),r.normal.copy(i)}},computeVertexNormals:function(i=!0){const n=new Array(this.vertices.length);for(let t=0,e=this.vertices.length;t<e;t++)n[t]=new Nt;if(i){const i=new Nt,c=new Nt;for(let t=0,e=this.faces.length;t<e;t++){var r=this.faces[t],s=this.vertices[r.a],a=this.vertices[r.b],o=this.vertices[r.c];i.subVectors(o,a),c.subVectors(s,a),i.cross(c),n[r.a].add(i),n[r.b].add(i),n[r.c].add(i)}}else{this.computeFaceNormals();for(let t=0,e=this.faces.length;t<e;t++){var l=this.faces[t];n[l.a].add(l.normal),n[l.b].add(l.normal),n[l.c].add(l.normal)}}for(let t=0,e=this.vertices.length;t<e;t++)n[t].normalize();for(let t=0,e=this.faces.length;t<e;t++){const h=this.faces[t],u=h.vertexNormals;3===u.length?(u[0].copy(n[h.a]),u[1].copy(n[h.b]),u[2].copy(n[h.c])):(u[0]=n[h.a].clone(),u[1]=n[h.b].clone(),u[2]=n[h.c].clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let t=0,e=this.faces.length;t<e;t++){const i=this.faces[t],n=i.vertexNormals;3===n.length?(n[0].copy(i.normal),n[1].copy(i.normal),n[2].copy(i.normal)):(n[0]=i.normal.clone(),n[1]=i.normal.clone(),n[2]=i.normal.clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let t=0,e=this.faces.length;t<e;t++){const a=this.faces[t];a.__originalFaceNormal?a.__originalFaceNormal.copy(a.normal):a.__originalFaceNormal=a.normal.clone(),a.__originalVertexNormals||(a.__originalVertexNormals=[]);for(let t=0,e=a.vertexNormals.length;t<e;t++)a.__originalVertexNormals[t]?a.__originalVertexNormals[t].copy(a.vertexNormals[t]):a.__originalVertexNormals[t]=a.vertexNormals[t].clone()}const i=new Xs;i.faces=this.faces;for(let t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];const i=this.morphNormals[t].faceNormals,o=this.morphNormals[t].vertexNormals;for(let t=0,e=this.faces.length;t<e;t++){var n=new Nt,r={a:new Nt,b:new Nt,c:new Nt};i.push(n),o.push(r)}}var s=this.morphNormals[t];i.vertices=this.morphTargets[t].vertices,i.computeFaceNormals(),i.computeVertexNormals();for(let t=0,e=this.faces.length;t<e;t++){const l=this.faces[t],c=s.faceNormals[t],h=s.vertexNormals[t];c.copy(l.normal),h.a.copy(l.vertexNormals[0]),h.b.copy(l.vertexNormals[1]),h.c.copy(l.vertexNormals[2])}}for(let t=0,e=this.faces.length;t<e;t++){const u=this.faces[t];u.normal=u.__originalFaceNormal,u.vertexNormals=u.__originalVertexNormals}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new C),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new ct),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,s,a=0){if(e&&e.isGeometry){let r;const o=this.vertices.length,i=this.vertices,n=e.vertices,l=this.faces,c=e.faces,h=this.colors,u=e.colors;void 0!==s&&(r=(new v).getNormalMatrix(s));for(let t=0,e=n.length;t<e;t++){const a=n[t].clone();void 0!==s&&a.applyMatrix4(s),i.push(a)}for(let t=0,e=u.length;t<e;t++)h.push(u[t].clone());for(let t=0,e=c.length;t<e;t++){const s=c[t];let i,n;const h=s.vertexNormals,u=s.vertexColors,p=new be(s.a+o,s.b+o,s.c+o);p.normal.copy(s.normal),void 0!==r&&p.normal.applyMatrix3(r).normalize();for(let t=0,e=h.length;t<e;t++)i=h[t].clone(),void 0!==r&&i.applyMatrix3(r).normalize(),p.vertexNormals.push(i);p.color.copy(s.color);for(let t=0,e=u.length;t<e;t++)n=u[t],p.vertexColors.push(n.clone());p.materialIndex=s.materialIndex+a,l.push(p)}for(let n=0,t=e.faceVertexUvs.length;n<t;n++){const a=e.faceVertexUvs[n];void 0===this.faceVertexUvs[n]&&(this.faceVertexUvs[n]=[]);for(let t=0,e=a.length;t<e;t++){const i=a[t],o=[];for(let t=0,e=i.length;t<e;t++)o.push(i[t].clone());this.faceVertexUvs[n].push(o)}}}},mergeMesh:function(t){t&&t.isMesh&&(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix))},mergeVertices:function(t=4){const i={},n=[],r=[],s=Math.pow(10,t);for(let t=0,e=this.vertices.length;t<e;t++){const a=this.vertices[t],o=Math.round(a.x*s)+"_"+Math.round(a.y*s)+"_"+Math.round(a.z*s);void 0===i[o]?(i[o]=t,n.push(this.vertices[t]),r[t]=n.length-1):r[t]=r[i[o]]}const a=[];for(let e=0,t=this.faces.length;e<t;e++){const i=this.faces[e];i.a=r[i.a],i.b=r[i.b],i.c=r[i.c];const n=[i.a,i.b,i.c];for(let t=0;t<3;t++)if(n[t]===n[(t+1)%3]){a.push(e);break}}for(let t=a.length-1;0<=t;t--){const i=a[t];this.faces.splice(i,1);for(let t=0,e=this.faceVertexUvs.length;t<e;t++)this.faceVertexUvs[t].splice(i,1)}const o=this.vertices.length-n.length;return this.vertices=n,o},setFromPoints:function(i){this.vertices=[];for(let t=0,e=i.length;t<e;t++){var n=i[t];this.vertices.push(new Nt(n.x,n.y,n.z||0))}return this},sortFacesByMaterialIndex:function(){const e=this.faces,i=e.length;for(let t=0;t<i;t++)e[t]._id=t;e.sort(function(t,e){return t.materialIndex-e.materialIndex});var n=this.faceVertexUvs[0],r=this.faceVertexUvs[1];let s,a;n&&n.length===i&&(s=[]),r&&r.length===i&&(a=[]);for(let t=0;t<i;t++){const i=e[t]._id;s&&s.push(n[i]),a&&a.push(r[i])}s&&(this.faceVertexUvs[0]=s),a&&(this.faceVertexUvs[1]=a)},toJSON:function(){const e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),void 0!==this.parameters){const i=this.parameters;for(const n in i)void 0!==i[n]&&(e[n]=i[n]);return e}const i=[];for(let t=0;t<this.vertices.length;t++){const n=this.vertices[t];i.push(n.x,n.y,n.z)}const n=[],r=[],s={},a=[],o={},l=[],c={};for(let t=0;t<this.faces.length;t++){const i=this.faces[t],r=!0,s=!1,a=void 0!==this.faceVertexUvs[0][t],o=0<i.normal.length(),l=0<i.vertexNormals.length,c=1!==i.color.r||1!==i.color.g||1!==i.color.b,m=0<i.vertexColors.length;var h;if(0,2,h=u(2,3,a),h=u(h,4,o),h=u(h,5,l),h=u(h,6,c),h=u(h,7,m),n.push(h),n.push(i.a,i.b,i.c),n.push(i.materialIndex),a){const i=this.faceVertexUvs[0][t];n.push(f(i[0]),f(i[1]),f(i[2]))}if(o&&n.push(p(i.normal)),l){const e=i.vertexNormals;n.push(p(e[0]),p(e[1]),p(e[2]))}if(c&&n.push(d(i.color)),m){const e=i.vertexColors;n.push(d(e[0]),d(e[1]),d(e[2]))}}function u(t,e,i){return i?t|1<<e:t&~(1<<e)}function p(t){var e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==s[e]||(s[e]=r.length/3,r.push(t.x,t.y,t.z)),s[e]}function d(t){var e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==o[e]||(o[e]=a.length,a.push(t.getHex())),o[e]}function f(t){var e=t.x.toString()+t.y.toString();return void 0!==c[e]||(c[e]=l.length/2,l.push(t.x,t.y)),c[e]}return e.data={},e.data.vertices=i,e.data.normals=r,0<a.length&&(e.data.colors=a),0<l.length&&(e.data.uvs=[l]),e.data.faces=n,e},clone:function(){return(new Xs).copy(this)},copy:function(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;const n=e.vertices;for(let t=0,e=n.length;t<e;t++)this.vertices.push(n[t].clone());const r=e.colors;for(let t=0,e=r.length;t<e;t++)this.colors.push(r[t].clone());const s=e.faces;for(let t=0,e=s.length;t<e;t++)this.faces.push(s[t].clone());for(let i=0,t=e.faceVertexUvs.length;i<t;i++){const r=e.faceVertexUvs[i];void 0===this.faceVertexUvs[i]&&(this.faceVertexUvs[i]=[]);for(let t=0,e=r.length;t<e;t++){const s=r[t],a=[];for(let t=0,e=s.length;t<e;t++){const n=s[t];a.push(n.clone())}this.faceVertexUvs[i].push(a)}}const a=e.morphTargets;for(let i=0,t=a.length;i<t;i++){const n={};if(n.name=a[i].name,void 0!==a[i].vertices){n.vertices=[];for(let t=0,e=a[i].vertices.length;t<e;t++)n.vertices.push(a[i].vertices[t].clone())}if(void 0!==a[i].normals){n.normals=[];for(let t=0,e=a[i].normals.length;t<e;t++)n.normals.push(a[i].normals[t].clone())}this.morphTargets.push(n)}const o=e.morphNormals;for(let i=0,t=o.length;i<t;i++){const n={};if(void 0!==o[i].vertexNormals){n.vertexNormals=[];for(let t=0,e=o[i].vertexNormals.length;t<e;t++){const s=o[i].vertexNormals[t],a={};a.a=s.a.clone(),a.b=s.b.clone(),a.c=s.c.clone(),n.vertexNormals.push(a)}}if(void 0!==o[i].faceNormals){n.faceNormals=[];for(let t=0,e=o[i].faceNormals.length;t<e;t++)n.faceNormals.push(o[i].faceNormals[t].clone())}this.morphNormals.push(n)}const i=e.skinWeights;for(let t=0,e=i.length;t<e;t++)this.skinWeights.push(i[t].clone());const l=e.skinIndices;for(let t=0,e=l.length;t<e;t++)this.skinIndices.push(l[t].clone());var c=e.lineDistances;for(let t=0,e=c.length;t<e;t++)this.lineDistances.push(c[t]);const t=e.boundingBox;null!==t&&(this.boundingBox=t.clone());const h=e.boundingSphere;return null!==h&&(this.boundingSphere=h.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class Ys extends Ze{constructor(c=1,h=1,s=1,u=8,a=1,t=!1,p=0,d=2*Math.PI){super(),this.type="CylinderBufferGeometry",this.parameters={radiusTop:c,radiusBottom:h,height:s,radialSegments:u,heightSegments:a,openEnded:t,thetaStart:p,thetaLength:d};const f=this;u=Math.floor(u),a=Math.floor(a);const m=[],g=[],v=[],y=[];let x=0;const o=[],_=s/2;let b=0;function e(e){const i=x,n=new Et,r=new Nt;let s=0;var a=!0===e?c:h,o=!0===e?1:-1;for(let t=1;t<=u;t++)g.push(0,_*o,0),v.push(0,o,0),y.push(.5,.5),x++;var l=x;for(let t=0;t<=u;t++){const h=t/u*d+p,e=Math.cos(h),i=Math.sin(h);r.x=a*i,r.y=_*o,r.z=a*e,g.push(r.x,r.y,r.z),v.push(0,o,0),n.x=.5*e+.5,n.y=.5*i*o+.5,y.push(n.x,n.y),x++}for(let t=0;t<u;t++){const h=i+t,u=l+t;!0===e?m.push(u,u+1,h):m.push(u+1,u,h),s+=3}f.addGroup(b,s,!0===e?1:2),b+=s}!function(){const i=new Nt,e=new Nt;let n=0;var r=(h-c)/s;for(let t=0;t<=a;t++){const m=[],b=t/a,n=b*(h-c)+c;for(let t=0;t<=u;t++){const h=t/u,a=h*d+p,f=Math.sin(a),o=Math.cos(a);e.x=n*f,e.y=-b*s+_,e.z=n*o,g.push(e.x,e.y,e.z),i.set(f,r,o).normalize(),v.push(i.x,i.y,i.z),y.push(h,1-b),m.push(x++)}o.push(m)}for(let e=0;e<u;e++)for(let t=0;t<a;t++){const s=o[t][e],u=o[t+1][e],a=o[t+1][e+1],i=o[t][e+1];m.push(s,u,i),m.push(u,a,i),n+=6}f.addGroup(b,n,0),b+=n}(),!1===t&&(0<c&&e(!0),0<h&&e(!1)),this.setIndex(m),this.setAttribute("position",new ze(g,3)),this.setAttribute("normal",new ze(v,3)),this.setAttribute("uv",new ze(y,2))}}class qs extends Ys{constructor(t=1,e=1,i=8,n=1,r=!1,s=0,a=2*Math.PI){super(0,t,e,i,n,r,s,a),this.type="ConeBufferGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:s,thetaLength:a}}}class Zs extends Ze{constructor(i,s,t=1,e=0){super(),this.type="PolyhedronBufferGeometry",this.parameters={vertices:i,indices:s,radius:t,detail:e};const h=[],u=[];function l(t){h.push(t.x,t.y,t.z)}function a(t,e){t*=3;e.x=i[0+t],e.y=i[1+t],e.z=i[2+t]}function p(t,e,i,n){n<0&&1===t.x&&(u[e]=t.x-1),0===i.x&&0===i.z&&(u[e]=n/2/Math.PI+.5)}function d(t){return Math.atan2(t.z,-t.x)}!function(e){var i=new Nt,n=new Nt,r=new Nt;for(let t=0;t<s.length;t+=3)a(s[t+0],i),a(s[t+1],n),a(s[t+2],r),function(t,i,n,e){const r=e+1,s=[];for(let e=0;e<=r;e++){s[e]=[];const a=t.clone().lerp(n,e/r),l=i.clone().lerp(n,e/r),o=r-e;for(let t=0;t<=o;t++)s[e][t]=0===t&&e===r?a:a.clone().lerp(l,t/o)}for(let e=0;e<r;e++)for(let t=0;t<2*(r-e)-1;t++){const n=Math.floor(t/2);t%2==0?(l(s[e][n+1]),l(s[e+1][n]),l(s[e][n])):(l(s[e][n+1]),l(s[e+1][n+1]),l(s[e+1][n]))}}(i,n,r,e)}(e),function(e){const i=new Nt;for(let t=0;t<h.length;t+=3)i.x=h[t+0],i.y=h[t+1],i.z=h[t+2],i.normalize().multiplyScalar(e),h[t+0]=i.x,h[t+1]=i.y,h[t+2]=i.z}(t),function(){const e=new Nt;for(let t=0;t<h.length;t+=3){e.x=h[t+0],e.y=h[t+1],e.z=h[t+2];var i=d(e)/2/Math.PI+.5,n=(n=e,Math.atan2(-n.y,Math.sqrt(n.x*n.x+n.z*n.z))/Math.PI+.5);u.push(i,1-n)}var n;(function(){const i=new Nt,n=new Nt,r=new Nt,s=new Nt,a=new Et,o=new Et,l=new Et;for(let t=0,e=0;t<h.length;t+=9,e+=6){i.set(h[t+0],h[t+1],h[t+2]),n.set(h[t+3],h[t+4],h[t+5]),r.set(h[t+6],h[t+7],h[t+8]),a.set(u[e+0],u[e+1]),o.set(u[e+2],u[e+3]),l.set(u[e+4],u[e+5]),s.copy(i).add(n).add(r).divideScalar(3);var c=d(s);p(a,e+0,i,c),p(o,e+2,n,c),p(l,e+4,r,c)}})(),function(){for(let t=0;t<u.length;t+=6){var e=u[t+0],i=u[t+2],n=u[t+4],r=Math.max(e,i,n),s=Math.min(e,i,n);.9<r&&s<.1&&(e<.2&&(u[t+0]+=1),i<.2&&(u[t+2]+=1),n<.2&&(u[t+4]+=1))}}()}(),this.setAttribute("position",new ze(h,3)),this.setAttribute("normal",new ze(h.slice(),3)),this.setAttribute("uv",new ze(u,2)),0===e?this.computeVertexNormals():this.normalizeNormals()}}new Nt,new Nt,new Nt,new de;function Js(e,t,i){i=i||2;var n=t&&t.length,r=n?t[0]*i:e.length;let s=Ks(e,0,r,i,!0);var a=[];if(!s||s.next===s.prev)return a;let o,l,c,h,u,p,d;if(n&&(s=function(t,e,i,n){const r=[];let s,a,o,l,c;for(s=0,a=e.length;s<a;s++)o=e[s]*n,l=s<a-1?e[s+1]*n:t.length,c=Ks(t,o,l,n,!1),c===c.next&&(c.steiner=!0),r.push(function(t){let e=t,i=t;for(;(e.x<i.x||e.x===i.x&&e.y<i.y)&&(i=e),e=e.next,e!==t;);return i}(c));for(r.sort(ta),s=0;s<r.length;s++)h=r[s],(u=function(t,e){let i=e;var n=t.x,r=t.y;let s,a=-1/0;do{if(r<=i.y&&r>=i.next.y&&i.next.y!==i.y){const t=i.x+(r-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(t<=n&&t>a){if((a=t)===n){if(r===i.y)return i;if(r===i.next.y)return i.next}s=i.x<i.next.x?i:i.next}}}while(i=i.next,i!==e);if(!s)return null;if(n===a)return s;var o,l,c=s,h=s.x,u=s.y;let p,d=1/0;for(i=s;n>=i.x&&i.x>=h&&n!==i.x&&ia(r<u?n:a,r,h,u,r<u?a:n,r,i.x,i.y)&&(p=Math.abs(r-i.y)/(n-i.x),la(i,t)&&(p<d||p===d&&(i.x>s.x||i.x===s.x&&(o=s,l=i,na(o.prev,o,l.prev)<0&&na(l.next,o,o.next)<0)))&&(s=i,d=p)),i=i.next,i!==c;);return s}(h,u=i))&&(h=ca(u,h),Qs(u,u.next),Qs(h,h.next)),i=Qs(i,i.next);var h,u;return i}(e,t,s,i)),e.length>80*i){o=c=e[0],l=h=e[1];for(let t=i;t<r;t+=i)u=e[t],p=e[t+1],u<o&&(o=u),p<l&&(l=p),u>c&&(c=u),p>h&&(h=p);d=Math.max(c-o,h-l),d=0!==d?1/d:0}return $s(s,a,i,o,l,d),a}function Ks(t,a,e,i,n){let r,s;if(n===0<function(i,n,r){let s=0;for(let t=a,e=n-r;t<n;t+=r)s+=(i[e]-i[t])*(i[t+1]+i[e+1]),e=t;return s}(t,e,i))for(r=a;r<e;r+=i)s=ha(r,t[r],t[r+1],s);else for(r=e-i;r>=a;r-=i)s=ha(r,t[r],t[r+1],s);return s&&ra(s,s.next)&&(ua(s),s=s.next),s}function Qs(t,e){if(!t)return t;e=e||t;let i,n=t;do{if(i=!1,n.steiner||!ra(n,n.next)&&0!==na(n.prev,n,n.next))n=n.next;else{if(ua(n),n=e=n.prev,n===n.next)break;i=!0}}while(i||n!==e);return e}function $s(n,r,s,a,o,l,c){if(n){!c&&l&&function(t,e,i,n){let r=t;for(;null===r.z&&(r.z=ea(r.x,r.y,e,i,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next,r!==t;);r.prevZ.nextZ=null,r.prevZ=null,function(t){let e,i,n,r,s,a,o,l,c=1;do{for(i=t,t=null,s=null,a=0;i;){for(a++,n=i,o=0,e=0;e<c&&(o++,n=n.nextZ,n);e++);for(l=c;0<o||0<l&&n;)0!==o&&(0===l||!n||i.z<=n.z)?(r=i,i=i.nextZ,o--):(r=n,n=n.nextZ,l--),s?s.nextZ=r:t=r,r.prevZ=s,s=r;i=n}}while(s.nextZ=null,c*=2,1<a)}(r)}(n,a,o,l);let t,e,i=n;for(;n.prev!==n.next;)if(t=n.prev,e=n.next,l?function(t,e,i,n){var r=t.prev,s=t,a=t.next;if(0<=na(r,s,a))return!1;var o=(r.x<s.x?r.x<a.x?r:a:s.x<a.x?s:a).x,l=(r.y<s.y?r.y<a.y?r:a:s.y<a.y?s:a).y,c=(r.x>s.x?r.x>a.x?r:a:s.x>a.x?s:a).x,h=(r.y>s.y?r.y>a.y?r:a:s.y>a.y?s:a).y,u=ea(o,l,e,i,n),p=ea(c,h,e,i,n);let d=t.prevZ,f=t.nextZ;for(;d&&d.z>=u&&f&&f.z<=p;){if(d!==t.prev&&d!==t.next&&ia(r.x,r.y,s.x,s.y,a.x,a.y,d.x,d.y)&&0<=na(d.prev,d,d.next))return!1;if(d=d.prevZ,f!==t.prev&&f!==t.next&&ia(r.x,r.y,s.x,s.y,a.x,a.y,f.x,f.y)&&0<=na(f.prev,f,f.next))return!1;f=f.nextZ}for(;d&&d.z>=u;){if(d!==t.prev&&d!==t.next&&ia(r.x,r.y,s.x,s.y,a.x,a.y,d.x,d.y)&&0<=na(d.prev,d,d.next))return!1;d=d.prevZ}for(;f&&f.z<=p;){if(f!==t.prev&&f!==t.next&&ia(r.x,r.y,s.x,s.y,a.x,a.y,f.x,f.y)&&0<=na(f.prev,f,f.next))return!1;f=f.nextZ}return!0}(n,a,o,l):function(t){var e=t.prev,i=t,n=t.next;if(0<=na(e,i,n))return!1;let r=t.next.next;for(;r!==t.prev;){if(ia(e.x,e.y,i.x,i.y,n.x,n.y,r.x,r.y)&&0<=na(r.prev,r,r.next))return!1;r=r.next}return!0}(n))r.push(t.i/s),r.push(n.i/s),r.push(e.i/s),ua(n),n=e.next,i=e.next;else if((n=e)===i){c?1===c?$s(n=function(t,e,i){let n=t;do{var r=n.prev,s=n.next.next;!ra(r,s)&&sa(r,n,n.next,s)&&la(r,s)&&la(s,r)&&(e.push(r.i/i),e.push(n.i/i),e.push(s.i/i),ua(n),ua(n.next),n=t=s),n=n.next}while(n!==t);return Qs(n)}(Qs(n),r,s),r,s,a,o,l,2):2===c&&function(t,e,i,n,r,s){let a=t;do{let t=a.next.next;for(;t!==a.prev;){if(a.i!==t.i&&function(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let i=t;do{if(i.i!==t.i&&i.next.i!==t.i&&i.i!==e.i&&i.next.i!==e.i&&sa(i,i.next,t,e))return 1}while(i=i.next,i!==t)}(t,e)&&(la(t,e)&&la(e,t)&&function(t,e){let i=t,n=!1;for(var r=(t.x+e.x)/2,s=(t.y+e.y)/2;i.y>s!=i.next.y>s&&i.next.y!==i.y&&r<(i.next.x-i.x)*(s-i.y)/(i.next.y-i.y)+i.x&&(n=!n),i=i.next,i!==t;);return n}(t,e)&&(na(t.prev,t,e.prev)||na(t,e.prev,e))||ra(t,e)&&0<na(t.prev,t,t.next)&&0<na(e.prev,e,e.next))}(a,t)){var o=ca(a,t);return a=Qs(a,a.next),o=Qs(o,o.next),$s(a,e,i,n,r,s),$s(o,e,i,n,r,s)}t=t.next}}while(a=a.next,a!==t)}(n,r,s,a,o,l):$s(Qs(n),r,s,a,o,l,1);break}}}function ta(t,e){return t.x-e.x}function ea(t,e,i,n,r){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*r)|t<<8))|t<<4))|t<<2))|t<<1))|(1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*r)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function ia(t,e,i,n,r,s,a,o){return 0<=(r-a)*(e-o)-(t-a)*(s-o)&&0<=(t-a)*(n-o)-(i-a)*(e-o)&&0<=(i-a)*(s-o)-(r-a)*(n-o)}function na(t,e,i){return(e.y-t.y)*(i.x-e.x)-(e.x-t.x)*(i.y-e.y)}function ra(t,e){return t.x===e.x&&t.y===e.y}function sa(t,e,i,n){var r=oa(na(t,e,i)),s=oa(na(t,e,n)),a=oa(na(i,n,t)),o=oa(na(i,n,e));return r!==s&&a!==o||0===r&&aa(t,i,e)||0===s&&aa(t,n,e)||0===a&&aa(i,t,n)||0===o&&aa(i,e,n)}function aa(t,e,i){return e.x<=Math.max(t.x,i.x)&&e.x>=Math.min(t.x,i.x)&&e.y<=Math.max(t.y,i.y)&&e.y>=Math.min(t.y,i.y)}function oa(t){return 0<t?1:t<0?-1:0}function la(t,e){return na(t.prev,t,t.next)<0?0<=na(t,e,t.next)&&0<=na(t,t.prev,e):na(t,e,t.prev)<0||na(t,t.next,e)<0}function ca(t,e){const i=new pa(t.i,t.x,t.y),n=new pa(e.i,e.x,e.y),r=t.next,s=e.prev;return(t.next=e).prev=t,i.next=r,r.prev=i,n.next=i,i.prev=n,s.next=n,n.prev=s,n}function ha(t,e,i,n){const r=new pa(t,e,i);return n?(r.next=n.next,(r.prev=n).next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function ua(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function pa(t,e,i){this.i=t,this.x=e,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}const da={area:function(i){var n=i.length;let r=0;for(let t=n-1,e=0;e<n;t=e++)r+=i[t].x*i[e].y-i[e].x*i[t].y;return.5*r},isClockWise:function(t){return da.area(t)<0},triangulateShape:function(t,e){const i=[],n=[],r=[];fa(t),ma(i,t);let s=t.length;e.forEach(fa);for(let t=0;t<e.length;t++)n.push(s),s+=e[t].length,ma(i,e[t]);const a=Js(i,n);for(let t=0;t<a.length;t+=3)r.push(a.slice(t,t+3));return r}};function fa(t){var e=t.length;2<e&&t[e-1].equals(t[0])&&t.pop()}function ma(e,i){for(let t=0;t<i.length;t++)e.push(i[t].x),e.push(i[t].y)}class ga extends Ze{constructor(i,z){super(),this.type="ExtrudeBufferGeometry",this.parameters={shapes:i,options:z},i=Array.isArray(i)?i:[i];const F=this,U=[],B=[];for(let t=0,e=i.length;t<e;t++)!function(t){const n=[],e=void 0!==z.curveSegments?z.curveSegments:12,o=void 0!==z.steps?z.steps:1;let i=void 0!==z.depth?z.depth:100,r=void 0===z.bevelEnabled||z.bevelEnabled,s=void 0!==z.bevelThickness?z.bevelThickness:6,a=void 0!==z.bevelSize?z.bevelSize:s-2,l=void 0!==z.bevelOffset?z.bevelOffset:0,c=void 0!==z.bevelSegments?z.bevelSegments:3;const h=z.extrudePath,u=void 0!==z.UVGenerator?z.UVGenerator:va;void 0!==z.amount&&(i=z.amount);let p,d,f,m,g,v=!1;h&&(p=h.getSpacedPoints(o),v=!0,r=!1,d=h.computeFrenetFrames(o,!1),f=new Nt,m=new Nt,g=new Nt),r||(c=0,s=0,a=0,l=0);t=t.extractPoints(e);let y=t.shape;const x=t.holes;if(!da.isClockWise(y)){y=y.reverse();for(let t=0,e=x.length;t<e;t++){const z=x[t];da.isClockWise(z)&&(x[t]=z.reverse())}}const _=da.triangulateShape(y,x),b=y;for(let t=0,e=x.length;t<e;t++){const z=x[t];y=y.concat(z)}function M(t,e,i){return e.clone().multiplyScalar(i).add(t)}const w=y.length,S=_.length;function A(t,e,i){let n,r,s;const a=t.x-e.x,o=t.y-e.y,l=i.x-t.x,c=i.y-t.y,h=a*a+o*o,u=a*c-o*l;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),p=Math.sqrt(l*l+c*c),d=e.x-o/u,f=e.y+a/u,m=((i.x-c/p-d)*c-(i.y+l/p-f)*l)/(a*c-o*l);n=d+a*m-t.x,r=f+o*m-t.y;t=n*n+r*r;if(t<=2)return new Et(n,r);s=Math.sqrt(t/2)}else{let t=!1;a>Number.EPSILON?l>Number.EPSILON&&(t=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(c)&&(t=!0),s=t?(n=-o,r=a,Math.sqrt(h)):(n=a,r=o,Math.sqrt(h/2))}return new Et(n/s,r/s)}const T=[];for(let t=0,e=b.length,i=e-1,n=t+1;t<e;t++,i++,n++)i===e&&(i=0),n===e&&(n=0),T[t]=A(b[t],b[i],b[n]);const L=[];let P,E=T.concat();for(let t=0,e=x.length;t<e;t++){const z=x[t];P=[];for(let t=0,e=z.length,i=e-1,n=t+1;t<e;t++,i++,n++)i===e&&(i=0),n===e&&(n=0),P[t]=A(z[t],z[i],z[n]);L.push(P),E=E.concat(P)}for(let t=0;t<c;t++){const z=t/c,F=s*Math.cos(z*Math.PI/2),U=a*Math.sin(z*Math.PI/2)+l;for(let t=0,e=b.length;t<e;t++){const z=M(b[t],T[t],U);O(z.x,z.y,-F)}for(let t=0,e=x.length;t<e;t++){const z=x[t];P=L[t];for(let t=0,e=z.length;t<e;t++){const B=M(z[t],P[t],U);O(B.x,B.y,-F)}}}var C=a+l;for(let t=0;t<w;t++){const z=r?M(y[t],E[t],C):y[t];v?(m.copy(d.normals[0]).multiplyScalar(z.x),f.copy(d.binormals[0]).multiplyScalar(z.y),g.copy(p[0]).add(m).add(f),O(g.x,g.y,g.z)):O(z.x,z.y,0)}for(let e=1;e<=o;e++)for(let t=0;t<w;t++){const F=r?M(y[t],E[t],C):y[t];v?(m.copy(d.normals[e]).multiplyScalar(F.x),f.copy(d.binormals[e]).multiplyScalar(F.y),g.copy(p[e]).add(m).add(f),O(g.x,g.y,g.z)):O(F.x,F.y,i/o*e)}for(let t=c-1;0<=t;t--){const z=t/c,F=s*Math.cos(z*Math.PI/2),U=a*Math.sin(z*Math.PI/2)+l;for(let t=0,e=b.length;t<e;t++){const z=M(b[t],T[t],U);O(z.x,z.y,i+F)}for(let t=0,e=x.length;t<e;t++){const z=x[t];P=L[t];for(let t=0,e=z.length;t<e;t++){const B=M(z[t],P[t],U);v?O(B.x,B.y+p[o-1].y,p[o-1].x+F):O(B.x,B.y,i+F)}}}function N(t,n){let r=t.length;for(;0<=--r;){var s=r;let i=r-1;i<0&&(i=t.length-1);for(let t=0,e=o+2*c;t<e;t++){const r=w*t,a=w*(t+1);!function(t,e,i,n){D(t),D(e),D(n),D(e),D(i),D(n);n=U.length/3,n=u.generateSideWallUV(F,U,n-6,n-3,n-2,n-1);R(n[0]),R(n[1]),R(n[3]),R(n[1]),R(n[2]),R(n[3])}(n+s+r,n+i+r,n+i+a,n+s+a)}}}function O(t,e,i){n.push(t),n.push(e),n.push(i)}function I(t,e,i){D(t),D(e),D(i);i=U.length/3,i=u.generateTopUV(F,U,i-3,i-2,i-1);R(i[0]),R(i[1]),R(i[2])}function D(t){U.push(n[3*t+0]),U.push(n[3*t+1]),U.push(n[3*t+2])}function R(t){B.push(t.x),B.push(t.y)}!function(){var t=U.length/3;if(r){let t,e=0*w;for(let t=0;t<S;t++){const F=_[t];I(F[2]+e,F[1]+e,F[0]+e)}t=o+2*c,e=w*t;for(let t=0;t<S;t++){const F=_[t];I(F[0]+e,F[1]+e,F[2]+e)}}else{for(let t=0;t<S;t++){var e=_[t];I(e[2],e[1],e[0])}for(let t=0;t<S;t++){var i=_[t];I(i[0]+w*o,i[1]+w*o,i[2]+w*o)}}F.addGroup(t,U.length/3-t,0)}(),function(){var t=U.length/3;let i=0;N(b,i),i+=b.length;for(let t=0,e=x.length;t<e;t++){const F=x[t];N(F,i),i+=F.length}F.addGroup(t,U.length/3-t,1)}()}(i[t]);this.setAttribute("position",new ze(U,3)),this.setAttribute("uv",new ze(B,2)),this.computeVertexNormals()}toJSON(){var t=Ze.prototype.toJSON.call(this);return function(i,t,n){if(n.shapes=[],Array.isArray(i))for(let t=0,e=i.length;t<e;t++){var r=i[t];n.shapes.push(r.uuid)}else n.shapes.push(i.uuid);return void 0!==t.extrudePath&&(n.options.extrudePath=t.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,t)}}const va={generateTopUV:function(t,e,i,n,r){var s=e[3*i],a=e[3*i+1],o=e[3*n],i=e[3*n+1],n=e[3*r],r=e[3*r+1];return[new Et(s,a),new Et(o,i),new Et(n,r)]},generateSideWallUV:function(t,e,i,n,r,s){var a=e[3*i],o=e[3*i+1],l=e[3*i+2],c=e[3*n],h=e[3*n+1],u=e[3*n+2],p=e[3*r],d=e[3*r+1],i=e[3*r+2],n=e[3*s],r=e[3*s+1],s=e[3*s+2];return Math.abs(o-h)<.01?[new Et(a,1-l),new Et(c,1-u),new Et(p,1-i),new Et(n,1-s)]:[new Et(o,1-l),new Et(h,1-u),new Et(d,1-i),new Et(r,1-s)]}};class ya extends Xs{constructor(t,e){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new ga(t,e)),this.mergeVertices()}toJSON(){var t=super.toJSON();return function(i,t,n){if(n.shapes=[],Array.isArray(i))for(let t=0,e=i.length;t<e;t++){var r=i[t];n.shapes.push(r.uuid)}else n.shapes.push(i.uuid);return void 0!==t.extrudePath&&(n.options.extrudePath=t.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,t)}}class xa extends Zs{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronBufferGeometry",this.parameters={radius:t,detail:e}}}function _a(e,i,n){Ze.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:i,stacks:n};const r=[],s=[],a=[],o=[],l=new Nt,c=new Nt,h=new Nt,u=new Nt,p=new Nt;e.length;const d=i+1;for(let t=0;t<=n;t++){const d=t/n;for(let t=0;t<=i;t++){const r=t/i;e(r,d,c),s.push(c.x,c.y,c.z),0<=r-1e-5?(e(r-1e-5,d,h),u.subVectors(c,h)):(e(1e-5+r,d,h),u.subVectors(h,c)),0<=d-1e-5?(e(r,d-1e-5,h),p.subVectors(c,h)):(e(r,1e-5+d,h),p.subVectors(h,c)),l.crossVectors(u,p).normalize(),a.push(l.x,l.y,l.z),o.push(r,d)}}for(let e=0;e<n;e++)for(let t=0;t<i;t++){const i=e*d+t,s=e*d+t+1,a=(e+1)*d+t+1,o=(e+1)*d+t;r.push(i,s,o),r.push(s,a,o)}this.setIndex(r),this.setAttribute("position",new ze(s,3)),this.setAttribute("normal",new ze(a,3)),this.setAttribute("uv",new ze(o,2))}function ba(t,e,i){Xs.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:i},this.fromBufferGeometry(new _a(t,e,i)),this.mergeVertices()}(_a.prototype=Object.create(Ze.prototype)).constructor=_a,(ba.prototype=Object.create(Xs.prototype)).constructor=ba;class Ma extends Ze{constructor(e,a=12){super(),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:a};const o=[],l=[],c=[],h=[];let i=0,u=0;if(!1===Array.isArray(e))n(e);else for(let t=0;t<e.length;t++)n(e[t]),this.addGroup(i,u,t),i+=u,u=0;function n(t){var i=l.length/3,t=t.extractPoints(a);let n=t.shape;const r=t.holes;!1===da.isClockWise(n)&&(n=n.reverse());for(let t=0,e=r.length;t<e;t++){const a=r[t];!0===da.isClockWise(a)&&(r[t]=a.reverse())}var s=da.triangulateShape(n,r);for(let t=0,e=r.length;t<e;t++){const a=r[t];n=n.concat(a)}for(let t=0,e=n.length;t<e;t++){const a=n[t];l.push(a.x,a.y,0),c.push(0,0,1),h.push(a.x,a.y)}for(let t=0,e=s.length;t<e;t++){const a=s[t],l=a[0]+i,c=a[1]+i,h=a[2]+i;o.push(l,c,h),u+=3}}this.setIndex(o),this.setAttribute("position",new ze(l,3)),this.setAttribute("normal",new ze(c,3)),this.setAttribute("uv",new ze(h,2))}toJSON(){var t=Ze.prototype.toJSON.call(this);return function(i,n){if(n.shapes=[],Array.isArray(i))for(let t=0,e=i.length;t<e;t++){var r=i[t];n.shapes.push(r.uuid)}else n.shapes.push(i.uuid);return n}(this.parameters.shapes,t)}}class wa extends Xs{constructor(t,e){super(),this.type="ShapeGeometry","object"==typeof e&&(e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new Ma(t,e)),this.mergeVertices()}toJSON(){var t=Xs.prototype.toJSON.call(this);return function(i,n){if(n.shapes=[],Array.isArray(i))for(let t=0,e=i.length;t<e;t++){var r=i[t];n.shapes.push(r.uuid)}else n.shapes.push(i.uuid);return n}(this.parameters.shapes,t)}}class Sa extends Ze{constructor(i=1,n=8,r=6,s=0,a=2*Math.PI,o=0,l=Math.PI){super(),this.type="SphereBufferGeometry",this.parameters={radius:i,widthSegments:n,heightSegments:r,phiStart:s,phiLength:a,thetaStart:o,thetaLength:l},n=Math.max(3,Math.floor(n)),r=Math.max(2,Math.floor(r));const c=Math.min(o+l,Math.PI);let h=0;const u=[],p=new Nt,d=new Nt,f=[],m=[],g=[],v=[];for(let t=0;t<=r;t++){const y=[],x=t/r;let e=0;0==t&&0==o?e=.5/n:t==r&&c==Math.PI&&(e=-.5/n);for(let t=0;t<=n;t++){const c=t/n;p.x=-i*Math.cos(s+c*a)*Math.sin(o+x*l),p.y=i*Math.cos(o+x*l),p.z=i*Math.sin(s+c*a)*Math.sin(o+x*l),m.push(p.x,p.y,p.z),d.copy(p).normalize(),g.push(d.x,d.y,d.z),v.push(c+e,1-x),y.push(h++)}u.push(y)}for(let e=0;e<r;e++)for(let t=0;t<n;t++){const n=u[e][t+1],a=u[e][t],l=u[e+1][t],h=u[e+1][t+1];(0!==e||0<o)&&f.push(n,a,h),(e!==r-1||c<Math.PI)&&f.push(a,l,h)}this.setIndex(f),this.setAttribute("position",new ze(m,3)),this.setAttribute("normal",new ze(g,3)),this.setAttribute("uv",new ze(v,2))}}class Aa extends ga{constructor(t,e={}){const i=e.font;if(!i||!i.isFont)return new Ze;t=i.generateShapes(t,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),super(t,e),this.type="TextBufferGeometry"}}class Ta extends Xs{constructor(t,e){super(),this.type="TextGeometry",this.parameters={text:t,parameters:e},this.fromBufferGeometry(new Aa(t,e)),this.mergeVertices()}}class La extends Ze{constructor(i=1,n=.4,r=8,s=6,a=2*Math.PI){super(),this.type="TorusBufferGeometry",this.parameters={radius:i,tube:n,radialSegments:r,tubularSegments:s,arc:a},r=Math.floor(r),s=Math.floor(s);const o=[],l=[],c=[],h=[],u=new Nt,p=new Nt,d=new Nt;for(let e=0;e<=r;e++)for(let t=0;t<=s;t++){var f=t/s*a,m=e/r*Math.PI*2;p.x=(i+n*Math.cos(m))*Math.cos(f),p.y=(i+n*Math.cos(m))*Math.sin(f),p.z=n*Math.sin(m),l.push(p.x,p.y,p.z),u.x=i*Math.cos(f),u.y=i*Math.sin(f),d.subVectors(p,u).normalize(),c.push(d.x,d.y,d.z),h.push(t/s),h.push(e/r)}for(let e=1;e<=r;e++)for(let t=1;t<=s;t++){const r=(s+1)*e+t-1,a=(s+1)*(e-1)+t-1,l=(s+1)*(e-1)+t,c=(s+1)*e+t;o.push(r,a,c),o.push(a,l,c)}this.setIndex(o),this.setAttribute("position",new ze(l,3)),this.setAttribute("normal",new ze(c,3)),this.setAttribute("uv",new ze(h,2))}}class Pa extends Xs{constructor(t,e,i,n,r){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:r},this.fromBufferGeometry(new La(t,e,i,n,r)),this.mergeVertices()}}function Ea(t){we.call(this),this.type="ShadowMaterial",this.color=new _e(0),this.transparent=!0,this.setValues(t)}function Ca(t){_i.call(this,t),this.type="RawShaderMaterial"}function Na(t){we.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new _e(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Et(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(t)}function Oa(t){Na.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Et(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=Pt.clamp(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}function Ia(t){we.call(this),this.type="MeshPhongMaterial",this.color=new _e(16777215),this.specular=new _e(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Et(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Da(t){we.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new _e(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Et(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Ra(t){we.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Et(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function za(t){we.call(this),this.type="MeshLambertMaterial",this.color=new _e(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Fa(t){we.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new _e(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Et(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Ua(t){_s.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}((Ea.prototype=Object.create(we.prototype)).constructor=Ea).prototype.isShadowMaterial=!0,Ea.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.color.copy(t.color),this},((Ca.prototype=Object.create(_i.prototype)).constructor=Ca).prototype.isRawShaderMaterial=!0,((Na.prototype=Object.create(we.prototype)).constructor=Na).prototype.isMeshStandardMaterial=!0,Na.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.vertexTangents=t.vertexTangents,this},((Oa.prototype=Object.create(Na.prototype)).constructor=Oa).prototype.isMeshPhysicalMaterial=!0,Oa.prototype.copy=function(t){return Na.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new _e).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this},((Ia.prototype=Object.create(we.prototype)).constructor=Ia).prototype.isMeshPhongMaterial=!0,Ia.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},((Da.prototype=Object.create(we.prototype)).constructor=Da).prototype.isMeshToonMaterial=!0,Da.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},((Ra.prototype=Object.create(we.prototype)).constructor=Ra).prototype.isMeshNormalMaterial=!0,Ra.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},((za.prototype=Object.create(we.prototype)).constructor=za).prototype.isMeshLambertMaterial=!0,za.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},((Fa.prototype=Object.create(we.prototype)).constructor=Fa).prototype.isMeshMatcapMaterial=!0,Fa.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},((Ua.prototype=Object.create(_s.prototype)).constructor=Ua).prototype.isLineDashedMaterial=!0,Ua.prototype.copy=function(t){return _s.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var Ba=Object.freeze({__proto__:null,ShadowMaterial:Ea,SpriteMaterial:kr,RawShaderMaterial:Ca,ShaderMaterial:_i,PointsMaterial:Ns,MeshPhysicalMaterial:Oa,MeshStandardMaterial:Na,MeshPhongMaterial:Ia,MeshToonMaterial:Da,MeshNormalMaterial:Ra,MeshLambertMaterial:za,MeshDepthMaterial:wr,MeshDistanceMaterial:Sr,MeshBasicMaterial:Se,MeshMatcapMaterial:Fa,LineDashedMaterial:Ua,LineBasicMaterial:_s,Material:we});const ka={arraySlice:function(t,e,i){return ka.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==i?i:t.length)):t.slice(e,i)},convertArray:function(t,e,i){return!t||!i&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(i){const e=i.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort(function(t,e){return i[t]-i[e]}),n},sortedArray:function(i,n,r){const s=i.length,a=new i.constructor(s);for(let t=0,e=0;e!==s;++t){const s=r[t]*n;for(let t=0;t!==n;++t)a[e++]=i[s+t]}return a},flattenJSON:function(e,i,n,r){let s=1,a=e[0];for(;void 0!==a&&void 0===a[r];)a=e[s++];if(void 0!==a){let t=a[r];if(void 0!==t)if(Array.isArray(t))for(;t=a[r],void 0!==t&&(i.push(a.time),n.push.apply(n,t)),a=e[s++],void 0!==a;);else if(void 0!==t.toArray)for(;t=a[r],void 0!==t&&(i.push(a.time),t.toArray(n,n.length)),a=e[s++],void 0!==a;);else for(;t=a[r],void 0!==t&&(i.push(a.time),n.push(t)),a=e[s++],void 0!==a;);}},subclip:function(t,i,n,r,s=30){const a=t.clone();a.name=i;const e=[];for(let t=0;t<a.tracks.length;++t){const i=a.tracks[t],o=i.getValueSize(),l=[],c=[];for(let e=0;e<i.times.length;++e){const a=i.times[e]*s;if(!(a<n||a>=r)){l.push(i.times[e]);for(let t=0;t<o;++t)c.push(i.values[e*o+t])}}0!==l.length&&(i.times=ka.convertArray(l,i.times.constructor),i.values=ka.convertArray(c,i.values.constructor),e.push(i))}a.tracks=e;let o=1/0;for(let t=0;t<a.tracks.length;++t)o>a.tracks[t].times[0]&&(o=a.tracks[t].times[0]);for(let t=0;t<a.tracks.length;++t)a.tracks[t].shift(-1*o);return a.resetDuration(),a},makeClipAdditive:function(n,r=0,s=n,a=30){const o=s.tracks.length,l=r/(a=a<=0?30:a);for(let t=0;t<o;++t){const a=s.tracks[t],o=a.ValueTypeName;if("bool"!==o&&"string"!==o){const d=n.tracks.find(function(t){return t.name===a.name&&t.ValueTypeName===o});if(void 0!==d){let t=0;var c=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(t=c/3);let e=0;var h=d.getValueSize();d.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(e=h/3);var u=a.times.length-1;let i;if(l<=a.times[0]){const n=t,r=c-t;i=ka.arraySlice(a.values,n,r)}else if(l>=a.times[u]){const n=u*c+t,r=n+c-t;i=ka.arraySlice(a.values,n,r)}else{const n=a.createInterpolant(),r=t,s=c-t;n.evaluate(l),i=ka.arraySlice(n.resultBuffer,r,s)}"quaternion"===o&&(new _).fromArray(i).normalize().conjugate().toArray(i);var p=d.times.length;for(let t=0;t<p;++t){const r=t*h+e;if("quaternion"===o)_.multiplyQuaternionsFlat(d.values,r,i,0,d.values,r);else{const n=h-2*e;for(let t=0;t<n;++t)d.values[r+t]-=i[t]}}}}}return n.blendMode=2501,n}};function Va(t,e,i,n){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new e.constructor(i),this.sampleValues=e,this.valueSize=i}function ja(t,e,i,n){Va.call(this,t,e,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function Ga(t,e,i,n){Va.call(this,t,e,i,n)}function Wa(t,e,i,n){Va.call(this,t,e,i,n)}function Ha(t,e,i,n){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=ka.convertArray(e,this.TimeBufferType),this.values=ka.convertArray(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}function Xa(t,e,i){Ha.call(this,t,e,i)}function Ya(t,e,i,n){Ha.call(this,t,e,i,n)}function qa(t,e,i,n){Ha.call(this,t,e,i,n)}function Za(t,e,i,n){Va.call(this,t,e,i,n)}function Ja(t,e,i,n){Ha.call(this,t,e,i,n)}function Ka(t,e,i,n){Ha.call(this,t,e,i,n)}function Qa(t,e,i,n){Ha.call(this,t,e,i,n)}function $a(t,e=-1,i,n=2500){this.name=t,this.tracks=i,this.duration=e,this.blendMode=n,this.uuid=Pt.generateUUID(),this.duration<0&&this.resetDuration()}Object.assign(Va.prototype,{evaluate:function(e){var i=this.parameterPositions;let n=this._cachedIndex,r=i[n],s=i[n-1];t:{e:{let t;i:{n:if(!(e<r)){for(var a=n+2;;){if(void 0===r){if(e<s)break n;return n=i.length,this._cachedIndex=n,this.afterEnd_(n-1,e,s)}if(n===a)break;if(s=r,r=i[++n],e<r)break e}t=i.length;break i}if(e>=s)break t;var o=i[1];e<o&&(n=2,s=o);for(var l=n-2;;){if(void 0===s)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(n===l)break;if(r=s,s=i[--n-1],e>=s)break e}t=n,n=0}for(;n<t;){const r=n+t>>>1;e<i[r]?t=r:n=1+r}if(r=i[n],s=i[n-1],void 0===s)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(void 0===r)return n=i.length,this._cachedIndex=n,this.afterEnd_(n-1,s,e)}this._cachedIndex=n,this.intervalChanged_(n,s,r)}return this.interpolate_(n,s,e,r)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){const e=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=t*n;for(let t=0;t!==n;++t)e[t]=i[r+t];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Va.prototype,{beforeStart_:Va.prototype.copySampleValue_,afterEnd_:Va.prototype.copySampleValue_}),ja.prototype=Object.assign(Object.create(Va.prototype),{constructor:ja,DefaultSettings_:{endingStart:l,endingEnd:l},intervalChanged_:function(t,e,i){var n=this.parameterPositions;let r=t-2,s=t+1,a=n[r],o=n[s];if(void 0===a)switch(this.getSettings_().endingStart){case h:r=t,a=2*e-i;break;case 2402:r=n.length-2,a=e+n[r]-n[r+1];break;default:r=t,a=i}if(void 0===o)switch(this.getSettings_().endingEnd){case h:s=t,o=2*i-e;break;case 2402:s=1,o=i+n[1]-n[0];break;default:s=t-1,o=e}var l=.5*(i-e),c=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-i),this._offsetPrev=r*c,this._offsetNext=s*c},interpolate_:function(t,e,i,n){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,p=this._weightNext,d=(i-e)/(n-e),f=d*d,m=f*d,g=-u*m+2*u*f-u*d,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*d+1,y=(-1-p)*m+(1.5+p)*f+.5*d,x=p*m-p*f;for(let t=0;t!==a;++t)r[t]=g*s[c+t]+v*s[l+t]+y*s[o+t]+x*s[h+t];return r}}),Ga.prototype=Object.assign(Object.create(Va.prototype),{constructor:Ga,interpolate_:function(t,e,i,n){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=(i-e)/(n-e),h=1-c;for(let t=0;t!==a;++t)r[t]=s[l+t]*h+s[o+t]*c;return r}}),Wa.prototype=Object.assign(Object.create(Va.prototype),{constructor:Wa,interpolate_:function(t){return this.copySampleValue_(t-1)}}),Object.assign(Ha,{toJSON:function(t){const e=t.constructor;let i;if(void 0!==e.toJSON)i=e.toJSON(t);else{i={name:t.name,times:ka.convertArray(t.times,Array),values:ka.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(i.interpolation=e)}return i.type=t.ValueTypeName,i}}),Object.assign(Ha.prototype,{constructor:Ha,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(t){return new Wa(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new Ga(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new ja(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){let e;switch(t){case 2300:e=this.InterpolantFactoryMethodDiscrete;break;case 2301:e=this.InterpolantFactoryMethodLinear;break;case 2302:e=this.InterpolantFactoryMethodSmooth}if(void 0!==e)return this.createInterpolant=e,this;{const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return this}},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length/this.times.length},shift:function(i){if(0!==i){const n=this.times;for(let t=0,e=n.length;t!==e;++t)n[t]+=i}return this},scale:function(i){if(1!==i){const n=this.times;for(let t=0,e=n.length;t!==e;++t)n[t]*=i}return this},trim:function(t,e){var i=this.times,n=i.length;let r=0,s=n-1;for(;r!==n&&i[r]<t;)++r;for(;-1!==s&&i[s]>e;)--s;if(++s,0!==r||s!==n){r>=s&&(s=Math.max(s,1),r=s-1);const t=this.getValueSize();this.times=ka.arraySlice(i,r,s),this.values=ka.arraySlice(this.values,r*t,s*t)}return this},validate:function(){let i=!0;var t=this.getValueSize();t-Math.floor(t)!=0&&(i=!1);const n=this.times,r=this.values,e=n.length;0===e&&(i=!1);let s=null;for(let t=0;t!==e;t++){const r=n[t];if("number"==typeof r&&isNaN(r)){i=!1;break}if(null!==s&&s>r){i=!1;break}s=r}if(void 0!==r&&ka.isTypedArray(r))for(let t=0,e=r.length;t!==e;++t){const n=r[t];if(isNaN(n)){i=!1;break}}return i},optimize:function(){const i=ka.arraySlice(this.times),n=ka.arraySlice(this.values),r=this.getValueSize(),s=2302===this.getInterpolation(),a=i.length-1;let o=1;for(let t=1;t<a;++t){let e=!1;var l=i[t];if(l!==i[t+1]&&(1!==t||l!==l[0]))if(s)e=!0;else{const i=t*r,s=i-r,o=i+r;for(let t=0;t!==r;++t){const r=n[i+t];if(r!==n[s+t]||r!==n[o+t]){e=!0;break}}}if(e){if(t!==o){i[o]=i[t];const s=t*r,a=o*r;for(let t=0;t!==r;++t)n[a+t]=n[s+t]}++o}}if(0<a){i[o]=i[a];for(let t=a*r,e=o*r,i=0;i!==r;++i)n[e+i]=n[t+i];++o}return o!==i.length?(this.times=ka.arraySlice(i,0,o),this.values=ka.arraySlice(n,0,o*r)):(this.times=i,this.values=n),this},clone:function(){const t=ka.arraySlice(this.times,0),e=ka.arraySlice(this.values,0),i=new this.constructor(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}),Xa.prototype=Object.assign(Object.create(Ha.prototype),{constructor:Xa,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Ya.prototype=Object.assign(Object.create(Ha.prototype),{constructor:Ya,ValueTypeName:"color"}),qa.prototype=Object.assign(Object.create(Ha.prototype),{constructor:qa,ValueTypeName:"number"}),Za.prototype=Object.assign(Object.create(Va.prototype),{constructor:Za,interpolate_:function(t,e,i,n){var r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(i-e)/(n-e);let l=t*a;for(var c=l+a;l!==c;l+=4)_.slerpFlat(r,0,s,l-a,s,l,o);return r}}),Ja.prototype=Object.assign(Object.create(Ha.prototype),{constructor:Ja,ValueTypeName:"quaternion",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(t){return new Za(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),Ka.prototype=Object.assign(Object.create(Ha.prototype),{constructor:Ka,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Qa.prototype=Object.assign(Object.create(Ha.prototype),{constructor:Qa,ValueTypeName:"vector"}),Object.assign($a,{parse:function(t){const i=[],n=t.tracks,r=1/(t.fps||1);for(let t=0,e=n.length;t!==e;++t)i.push(function(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return qa;case"vector":case"vector2":case"vector3":case"vector4":return Qa;case"color":return Ya;case"quaternion":return Ja;case"bool":case"boolean":return Xa;case"string":return Ka}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],i=[];ka.flattenJSON(t.keys,e,i,"value"),t.times=e,t.values=i}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}(n[t]).scale(r));const e=new $a(t.name,t.duration,i,t.blendMode);return e.uuid=t.uuid,e},toJSON:function(t){const i=[],n=t.tracks,e={name:t.name,duration:t.duration,tracks:i,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,e=n.length;t!==e;++t)i.push(Ha.toJSON(n[t]));return e},CreateFromMorphTargetSequence:function(t,n,r,s){const a=n.length,o=[];for(let i=0;i<a;i++){let t=[],e=[];t.push((i+a-1)%a,i,(i+1)%a),e.push(0,1,0);var l=ka.getKeyframeOrder(t);t=ka.sortedArray(t,1,l),e=ka.sortedArray(e,1,l),s||0!==t[0]||(t.push(a),e.push(e[0])),o.push(new qa(".morphTargetInfluences["+n[i].name+"]",t,e).scale(1/r))}return new $a(t,-1,o)},findByName:function(t,e){let i=t;if(!Array.isArray(t)){const e=t;i=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<i.length;t++)if(i[t].name===e)return i[t];return null},CreateClipsFromMorphTargetSequences:function(i,t,n){const r={},s=/^([\w-]*?)([\d]+)$/;for(let t=0,e=i.length;t<e;t++){const n=i[t],a=n.name.match(s);if(a&&1<a.length){const i=a[1];let t=r[i];t||(r[i]=t=[]),t.push(n)}}const a=[];for(const i in r)a.push($a.CreateFromMorphTargetSequence(i,r[i],t,n));return a},parseAnimation:function(i,e){if(!i)return null;const n=function(t,e,i,n,r){var s,a;0!==i.length&&(s=[],a=[],ka.flattenJSON(i,s,a,n),0!==s.length&&r.push(new t(e,s,a)))},r=[],s=i.name||"default",a=i.fps||30,t=i.blendMode;let o=i.length||-1;var l=i.hierarchy||[];for(let t=0;t<l.length;t++){const s=l[t].keys;if(s&&0!==s.length)if(s[0].morphTargets){const i={};let e;for(e=0;e<s.length;e++)if(s[e].morphTargets)for(let t=0;t<s[e].morphTargets.length;t++)i[s[e].morphTargets[t]]=-1;for(const n in i){const i=[],a=[];for(let t=0;t!==s[e].morphTargets.length;++t){const r=s[e];i.push(r.time),a.push(r.morphTarget===n?1:0)}r.push(new qa(".morphTargetInfluence["+n+"]",i,a))}o=i.length*(a||1)}else{const a=".bones["+e[t].name+"]";n(Qa,a+".position",s,"pos",r),n(Ja,a+".quaternion",s,"rot",r),n(Qa,a+".scale",s,"scl",r)}}return 0===r.length?null:new $a(s,o,r,t)}}),Object.assign($a.prototype,{resetDuration:function(){let i=0;for(let t=0,e=this.tracks.length;t!==e;++t){var n=this.tracks[t];i=Math.max(i,n.times[n.times.length-1])}return this.duration=i,this},trim:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},validate:function(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this},clone:function(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new $a(this.name,this.duration,e,this.blendMode)},toJSON:function(){return $a.toJSON(this)}});const to={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};const eo=new function(t,e,i){const n=this;let r,s=!1,a=0,o=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(t){o++,!1===s&&void 0!==n.onStart&&n.onStart(t,a,o),s=!0},this.itemEnd=function(t){a++,void 0!==n.onProgress&&n.onProgress(t,a,o),a===o&&(s=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(t){void 0!==n.onError&&n.onError(t)},this.resolveURL=function(t){return r?r(t):t},this.setURLModifier=function(t){return r=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){t=l.indexOf(t);return-1!==t&&l.splice(t,2),this},this.getHandler=function(i){for(let t=0,e=l.length;t<e;t+=2){const n=l[t],r=l[t+1];if(n.global&&(n.lastIndex=0),n.test(i))return r}return null}};function io(t){this.manager=void 0!==t?t:eo,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(io.prototype,{load:function(){},loadAsync:function(i,n){const r=this;return new Promise(function(t,e){r.load(i,t,n,e)})},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});const no={};function ro(t){io.call(this,t)}function so(t){io.call(this,t)}function ao(t){io.call(this,t)}function oo(t){io.call(this,t)}function lo(t){io.call(this,t)}function co(t){io.call(this,t)}function ho(t){io.call(this,t)}function uo(){this.type="Curve",this.arcLengthDivisions=200}function po(t,e,i,n,r,s,a,o){uo.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=i||1,this.yRadius=n||1,this.aStartAngle=r||0,this.aEndAngle=s||2*Math.PI,this.aClockwise=a||!1,this.aRotation=o||0}function fo(t,e,i,n,r,s){po.call(this,t,e,i,i,n,r,s),this.type="ArcCurve"}function mo(){let r=0,s=0,a=0,o=0;function l(t,e,i,n){r=t,s=i,a=-3*t+3*e-2*i-n,o=2*t-2*e+i+n}return{initCatmullRom:function(t,e,i,n,r){l(e,i,r*(i-t),r*(n-e))},initNonuniformCatmullRom:function(t,e,i,n,r,s,a){r=(e-t)/r-(i-t)/(r+s)+(i-e)/s,a=(i-e)/s-(n-e)/(s+a)+(n-i)/a;l(e,i,r*=s,a*=s)},calc:function(t){var e=t*t;return r+s*t+a*e+o*(e*t)}}}ro.prototype=Object.assign(Object.create(io.prototype),{constructor:ro,load:function(s,i,n,r){void 0===s&&(s=""),void 0!==this.path&&(s=this.path+s),s=this.manager.resolveURL(s);const a=this,o=to.get(s);if(void 0!==o)return a.manager.itemStart(s),setTimeout(function(){i&&i(o),a.manager.itemEnd(s)},0),o;if(void 0===no[s]){var l=s.match(/^data:(.*?)(;base64)?,(.*)$/);let t;if(l){const n=l[1],o=!!l[2];let e=l[3];e=decodeURIComponent(e),o&&(e=atob(e));try{let t;const o=(this.responseType||"").toLowerCase();switch(o){case"arraybuffer":case"blob":const s=new Uint8Array(e.length);for(let t=0;t<e.length;t++)s[t]=e.charCodeAt(t);t="blob"===o?new Blob([s.buffer],{type:n}):s.buffer;break;case"document":const i=new DOMParser;t=i.parseFromString(e,n);break;case"json":t=JSON.parse(e);break;default:t=e}setTimeout(function(){i&&i(t),a.manager.itemEnd(s)},0)}catch(i){setTimeout(function(){r&&r(i),a.manager.itemError(s),a.manager.itemEnd(s)},0)}}else{no[s]=[],no[s].push({onLoad:i,onProgress:n,onError:r}),t=new XMLHttpRequest,t.open("GET",s,!0),t.addEventListener("load",function(i){const n=this.response,r=no[s];if(delete no[s],200===this.status||0===this.status){this.status,to.add(s,n);for(let t=0,e=r.length;t<e;t++){const i=r[t];i.onLoad&&i.onLoad(n)}a.manager.itemEnd(s)}else{for(let t=0,e=r.length;t<e;t++){const n=r[t];n.onError&&n.onError(i)}a.manager.itemError(s),a.manager.itemEnd(s)}},!1),t.addEventListener("progress",function(i){var n=no[s];for(let t=0,e=n.length;t<e;t++){const r=n[t];r.onProgress&&r.onProgress(i)}},!1),t.addEventListener("error",function(i){var n=no[s];delete no[s];for(let t=0,e=n.length;t<e;t++){const r=n[t];r.onError&&r.onError(i)}a.manager.itemError(s),a.manager.itemEnd(s)},!1),t.addEventListener("abort",function(i){var n=no[s];delete no[s];for(let t=0,e=n.length;t<e;t++){const r=n[t];r.onError&&r.onError(i)}a.manager.itemError(s),a.manager.itemEnd(s)},!1),void 0!==this.responseType&&(t.responseType=this.responseType),void 0!==this.withCredentials&&(t.withCredentials=this.withCredentials),t.overrideMimeType&&t.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const s in this.requestHeader)t.setRequestHeader(s,this.requestHeader[s]);t.send(null)}return a.manager.itemStart(s),t}no[s].push({onLoad:i,onProgress:n,onError:r})},setResponseType:function(t){return this.responseType=t,this},setMimeType:function(t){return this.mimeType=t,this}}),so.prototype=Object.assign(Object.create(io.prototype),{constructor:so,load:function(e,i,t,n){const r=this,s=new ro(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(t){try{i(r.parse(JSON.parse(t)))}catch(t){n&&n(t),r.manager.itemError(e)}},t,n)},parse:function(e){const i=[];for(let t=0;t<e.length;t++){var n=$a.parse(e[t]);i.push(n)}return i}}),ao.prototype=Object.assign(Object.create(io.prototype),{constructor:ao,load:function(i,n,r,s){const a=this,o=[],l=new Bs,c=new ro(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(a.withCredentials);let h=0;if(Array.isArray(i))for(let t=0,e=i.length;t<e;++t)!function(e){c.load(i[e],function(t){t=a.parse(t,!0);o[e]={width:t.width,height:t.height,format:t.format,mipmaps:t.mipmaps},h+=1,6===h&&(1===t.mipmapCount&&(l.minFilter=Y),l.image=o,l.format=t.format,l.needsUpdate=!0,n&&n(l))},r,s)}(t);else c.load(i,function(t){var i=a.parse(t,!0);if(i.isCubemap){const t=i.mipmaps.length/i.mipmapCount;for(let e=0;e<t;e++){o[e]={mipmaps:[]};for(let t=0;t<i.mipmapCount;t++)o[e].mipmaps.push(i.mipmaps[e*i.mipmapCount+t]),o[e].format=i.format,o[e].width=i.width,o[e].height=i.height}l.image=o}else l.image.width=i.width,l.image.height=i.height,l.mipmaps=i.mipmaps;1===i.mipmapCount&&(l.minFilter=Y),l.format=i.format,l.needsUpdate=!0,n&&n(l)},r,s);return l}}),oo.prototype=Object.assign(Object.create(io.prototype),{constructor:oo,load:function(e,t,i,n){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=to.get(e);if(void 0!==s)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;const a=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1),to.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(t){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1),n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(e),a.src=e,a}}),lo.prototype=Object.assign(Object.create(io.prototype),{constructor:lo,load:function(i,n,t,r){const s=new Si,a=new oo(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;for(let t=0;t<i.length;++t)!function(e){a.load(i[e],function(t){s.images[e]=t,o++,6===o&&(s.needsUpdate=!0,n&&n(s))},void 0,r)}(t);return s}}),co.prototype=Object.assign(Object.create(io.prototype),{constructor:co,load:function(t,e,i,n){const r=this,s=new Ti,a=new ro(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(t,function(t){t=r.parse(t);t&&(void 0!==t.image?s.image=t.image:void 0!==t.data&&(s.image.width=t.width,s.image.height=t.height,s.image.data=t.data),s.wrapS=void 0!==t.wrapS?t.wrapS:B,s.wrapT=void 0!==t.wrapT?t.wrapT:B,s.magFilter=void 0!==t.magFilter?t.magFilter:Y,s.minFilter=void 0!==t.minFilter?t.minFilter:Y,s.anisotropy=void 0!==t.anisotropy?t.anisotropy:1,void 0!==t.format&&(s.format=t.format),void 0!==t.type&&(s.type=t.type),void 0!==t.mipmaps&&(s.mipmaps=t.mipmaps,s.minFilter=q),1===t.mipmapCount&&(s.minFilter=Y),s.needsUpdate=!0,e&&e(s,t))},i,n),s}}),ho.prototype=Object.assign(Object.create(io.prototype),{constructor:ho,load:function(e,i,t,n){const r=new g,s=new oo(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,function(t){r.image=t;t=0<e.search(/\.jpe?g($|\?)/i)||0===e.search(/^data\:image\/jpeg/);r.format=t?Q:Tt,r.needsUpdate=!0,void 0!==i&&i(r)},t,n),r}}),Object.assign(uo.prototype,{getPoint:function(){return null},getPointAt:function(t,e){t=this.getUtoTmapping(t);return this.getPoint(t,e)},getPoints:function(e=5){const i=[];for(let t=0;t<=e;t++)i.push(this.getPoint(t/e));return i},getSpacedPoints:function(e=5){const i=[];for(let t=0;t<=e;t++)i.push(this.getPointAt(t/e));return i},getLength:function(){var t=this.getLengths();return t[t.length-1]},getLengths:function(e){if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const i=[];let n,r=this.getPoint(0),s=0;i.push(0);for(let t=1;t<=e;t++)n=this.getPoint(t/e),s+=n.distanceTo(r),i.push(s),r=n;return this.cacheArcLengths=i,i},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){var i=this.getLengths();let n=0;var r=i.length,s=e||t*i[r-1];let a,o=0,l=r-1;for(;o<=l;)if(n=Math.floor(o+(l-o)/2),(a=i[n]-s)<0)o=n+1;else{if(!(0<a)){l=n;break}l=n-1}if(n=l,i[n]===s)return n/(r-1);t=i[n];return(n+(s-t)/(i[n+1]-t))/(r-1)},getTangent:function(t,e){let i=t-1e-4,n=t+1e-4;i<0&&(i=0),1<n&&(n=1);const r=this.getPoint(i),s=this.getPoint(n),a=e||new(r.isVector2?Et:Nt);return a.copy(s).sub(r).normalize(),a},getTangentAt:function(t,e){t=this.getUtoTmapping(t);return this.getTangent(t,e)},computeFrenetFrames:function(i,t){const e=new Nt,n=[],r=[],s=[],a=new Nt,o=new Ot;for(let t=0;t<=i;t++){const e=t/i;n[t]=this.getTangentAt(e,new Nt),n[t].normalize()}r[0]=new Nt,s[0]=new Nt;let l=Number.MAX_VALUE;var c=Math.abs(n[0].x),h=Math.abs(n[0].y),u=Math.abs(n[0].z);c<=l&&(l=c,e.set(1,0,0)),h<=l&&(l=h,e.set(0,1,0)),u<=l&&e.set(0,0,1),a.crossVectors(n[0],e).normalize(),r[0].crossVectors(n[0],a),s[0].crossVectors(n[0],r[0]);for(let t=1;t<=i;t++){if(r[t]=r[t-1].clone(),s[t]=s[t-1].clone(),a.crossVectors(n[t-1],n[t]),a.length()>Number.EPSILON){a.normalize();const i=Math.acos(Pt.clamp(n[t-1].dot(n[t]),-1,1));r[t].applyMatrix4(o.makeRotationAxis(a,i))}s[t].crossVectors(n[t],r[t])}if(!0===t){let e=Math.acos(Pt.clamp(r[0].dot(r[i]),-1,1));e/=i,0<n[0].dot(a.crossVectors(r[0],r[i]))&&(e=-e);for(let t=1;t<=i;t++)r[t].applyMatrix4(o.makeRotationAxis(n[t],e*t)),s[t].crossVectors(n[t],r[t])}return{tangents:n,normals:r,binormals:s}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}),((po.prototype=Object.create(uo.prototype)).constructor=po).prototype.isEllipseCurve=!0,po.prototype.getPoint=function(t,e){const i=e||new Et,n=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;for(e=Math.abs(r)<Number.EPSILON;r<0;)r+=n;for(;r>n;)r-=n;r<Number.EPSILON&&(r=e?0:n),!0!==this.aClockwise||e||(r===n?r=-n:r-=n);t=this.aStartAngle+t*r;let s=this.aX+this.xRadius*Math.cos(t),a=this.aY+this.yRadius*Math.sin(t);if(0!==this.aRotation){const o=Math.cos(this.aRotation),l=Math.sin(this.aRotation),i=s-this.aX,n=a-this.aY;s=i*o-n*l+this.aX,a=i*l+n*o+this.aY}return i.set(s,a)},po.prototype.copy=function(t){return uo.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},po.prototype.toJSON=function(){const t=uo.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t},po.prototype.fromJSON=function(t){return uo.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},((fo.prototype=Object.create(po.prototype)).constructor=fo).prototype.isArcCurve=!0;const go=new Nt,vo=new mo,yo=new mo,xo=new mo;function _o(t=[],e=!1,i="centripetal",n=.5){uo.call(this),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=i,this.tension=n}function bo(t,e,i,n,r){var s=.5*(n-e),e=.5*(r-i),r=t*t;return t*r*(2*i-2*n+s+e)+(-3*i+3*n-2*s-e)*r+s*t+i}function Mo(t,e,i,n){return(r=1-t)*r*e+2*(1-t)*t*i+t*t*n;var r}function wo(t,e,i,n,r){return(s=1-t)*s*s*e+3*(e=1-t)*e*t*i+3*(1-t)*t*t*n+t*t*t*r;var s}function So(t=new Et,e=new Et,i=new Et,n=new Et){uo.call(this),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=i,this.v3=n}function Ao(t=new Nt,e=new Nt,i=new Nt,n=new Nt){uo.call(this),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=i,this.v3=n}function To(t=new Et,e=new Et){uo.call(this),this.type="LineCurve",this.v1=t,this.v2=e}function Lo(t=new Nt,e=new Nt){uo.call(this),this.type="LineCurve3",this.v1=t,this.v2=e}function Po(t=new Et,e=new Et,i=new Et){uo.call(this),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=i}function Eo(t=new Nt,e=new Nt,i=new Nt){uo.call(this),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=i}function Co(t=[]){uo.call(this),this.type="SplineCurve",this.points=t}((_o.prototype=Object.create(uo.prototype)).constructor=_o).prototype.isCatmullRomCurve3=!0,_o.prototype.getPoint=function(n,t=new Nt){const e=t,i=this.points,r=i.length,s=(r-(this.closed?0:1))*n;let a,o,l=Math.floor(s),c=s-l;this.closed?l+=0<l?0:(Math.floor(Math.abs(l)/r)+1)*r:0===c&&l===r-1&&(l=r-2,c=1),a=this.closed||0<l?i[(l-1)%r]:(go.subVectors(i[0],i[1]).add(i[0]),go);const h=i[l%r],u=i[(l+1)%r];if(o=this.closed||l+2<r?i[(l+2)%r]:(go.subVectors(i[r-1],i[r-2]).add(i[r-1]),go),"centripetal"===this.curveType||"chordal"===this.curveType){const n="chordal"===this.curveType?.5:.25;let t=Math.pow(a.distanceToSquared(h),n),e=Math.pow(h.distanceToSquared(u),n),i=Math.pow(u.distanceToSquared(o),n);e<1e-4&&(e=1),t<1e-4&&(t=e),i<1e-4&&(i=e),vo.initNonuniformCatmullRom(a.x,h.x,u.x,o.x,t,e,i),yo.initNonuniformCatmullRom(a.y,h.y,u.y,o.y,t,e,i),xo.initNonuniformCatmullRom(a.z,h.z,u.z,o.z,t,e,i)}else"catmullrom"===this.curveType&&(vo.initCatmullRom(a.x,h.x,u.x,o.x,this.tension),yo.initCatmullRom(a.y,h.y,u.y,o.y,this.tension),xo.initCatmullRom(a.z,h.z,u.z,o.z,this.tension));return e.set(vo.calc(c),yo.calc(c),xo.calc(c)),e},_o.prototype.copy=function(i){uo.prototype.copy.call(this,i),this.points=[];for(let t=0,e=i.points.length;t<e;t++){const n=i.points[t];this.points.push(n.clone())}return this.closed=i.closed,this.curveType=i.curveType,this.tension=i.tension,this},_o.prototype.toJSON=function(){const i=uo.prototype.toJSON.call(this);i.points=[];for(let t=0,e=this.points.length;t<e;t++){const n=this.points[t];i.points.push(n.toArray())}return i.closed=this.closed,i.curveType=this.curveType,i.tension=this.tension,i},_o.prototype.fromJSON=function(i){uo.prototype.fromJSON.call(this,i),this.points=[];for(let t=0,e=i.points.length;t<e;t++){var n=i.points[t];this.points.push((new Nt).fromArray(n))}return this.closed=i.closed,this.curveType=i.curveType,this.tension=i.tension,this},((So.prototype=Object.create(uo.prototype)).constructor=So).prototype.isCubicBezierCurve=!0,So.prototype.getPoint=function(t,e=new Et){const i=e,n=this.v0,r=this.v1,s=this.v2,a=this.v3;return i.set(wo(t,n.x,r.x,s.x,a.x),wo(t,n.y,r.y,s.y,a.y)),i},So.prototype.copy=function(t){return uo.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},So.prototype.toJSON=function(){const t=uo.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},So.prototype.fromJSON=function(t){return uo.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},((Ao.prototype=Object.create(uo.prototype)).constructor=Ao).prototype.isCubicBezierCurve3=!0,Ao.prototype.getPoint=function(t,e=new Nt){const i=e,n=this.v0,r=this.v1,s=this.v2,a=this.v3;return i.set(wo(t,n.x,r.x,s.x,a.x),wo(t,n.y,r.y,s.y,a.y),wo(t,n.z,r.z,s.z,a.z)),i},Ao.prototype.copy=function(t){return uo.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},Ao.prototype.toJSON=function(){const t=uo.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},Ao.prototype.fromJSON=function(t){return uo.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},((To.prototype=Object.create(uo.prototype)).constructor=To).prototype.isLineCurve=!0,To.prototype.getPoint=function(t,e=new Et){const i=e;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i},To.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},To.prototype.getTangent=function(t,e){const i=e||new Et;return i.copy(this.v2).sub(this.v1).normalize(),i},To.prototype.copy=function(t){return uo.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},To.prototype.toJSON=function(){const t=uo.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},To.prototype.fromJSON=function(t){return uo.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},((Lo.prototype=Object.create(uo.prototype)).constructor=Lo).prototype.isLineCurve3=!0,Lo.prototype.getPoint=function(t,e=new Nt){const i=e;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i},Lo.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},Lo.prototype.copy=function(t){return uo.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Lo.prototype.toJSON=function(){const t=uo.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Lo.prototype.fromJSON=function(t){return uo.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},((Po.prototype=Object.create(uo.prototype)).constructor=Po).prototype.isQuadraticBezierCurve=!0,Po.prototype.getPoint=function(t,e=new Et){const i=e,n=this.v0,r=this.v1,s=this.v2;return i.set(Mo(t,n.x,r.x,s.x),Mo(t,n.y,r.y,s.y)),i},Po.prototype.copy=function(t){return uo.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Po.prototype.toJSON=function(){const t=uo.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Po.prototype.fromJSON=function(t){return uo.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},((Eo.prototype=Object.create(uo.prototype)).constructor=Eo).prototype.isQuadraticBezierCurve3=!0,Eo.prototype.getPoint=function(t,e=new Nt){const i=e,n=this.v0,r=this.v1,s=this.v2;return i.set(Mo(t,n.x,r.x,s.x),Mo(t,n.y,r.y,s.y),Mo(t,n.z,r.z,s.z)),i},Eo.prototype.copy=function(t){return uo.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Eo.prototype.toJSON=function(){const t=uo.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Eo.prototype.fromJSON=function(t){return uo.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},((Co.prototype=Object.create(uo.prototype)).constructor=Co).prototype.isSplineCurve=!0,Co.prototype.getPoint=function(t,e=new Et){const i=e,n=this.points,r=(n.length-1)*t,s=Math.floor(r),a=r-s,o=n[0===s?s:s-1],l=n[s],c=n[s>n.length-2?n.length-1:s+1],h=n[s>n.length-3?n.length-1:s+2];return i.set(bo(a,o.x,l.x,c.x,h.x),bo(a,o.y,l.y,c.y,h.y)),i},Co.prototype.copy=function(i){uo.prototype.copy.call(this,i),this.points=[];for(let t=0,e=i.points.length;t<e;t++){const n=i.points[t];this.points.push(n.clone())}return this},Co.prototype.toJSON=function(){const i=uo.prototype.toJSON.call(this);i.points=[];for(let t=0,e=this.points.length;t<e;t++){const n=this.points[t];i.points.push(n.toArray())}return i},Co.prototype.fromJSON=function(i){uo.prototype.fromJSON.call(this,i),this.points=[];for(let t=0,e=i.points.length;t<e;t++){var n=i.points[t];this.points.push((new Et).fromArray(n))}return this};var No=Object.freeze({__proto__:null,ArcCurve:fo,CatmullRomCurve3:_o,CubicBezierCurve:So,CubicBezierCurve3:Ao,EllipseCurve:po,LineCurve:To,LineCurve3:Lo,QuadraticBezierCurve:Po,QuadraticBezierCurve3:Eo,SplineCurve:Co});function Oo(){uo.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function Io(t){Oo.call(this),this.type="Path",this.currentPoint=new Et,t&&this.setFromPoints(t)}function Do(t){Io.call(this,t),this.uuid=Pt.generateUUID(),this.type="Shape",this.holes=[]}function Ro(t,e=1){Qt.call(this),this.type="Light",this.color=new _e(t),this.intensity=e}function zo(t,e,i){Ro.call(this,t,i),this.type="HemisphereLight",this.position.copy(Qt.DefaultUp),this.updateMatrix(),this.groundColor=new _e(e)}function Fo(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Et(512,512),this.map=null,this.mapPass=null,this.matrix=new Ot,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ei,this._frameExtents=new Et(1,1),this._viewportCount=1,this._viewports=[new Ct(0,0,1,1)]}function Uo(){Fo.call(this,new Mi(50,1,.5,500)),this.focus=1}function Bo(t,e,i,n,r,s){Ro.call(this,t,e),this.type="SpotLight",this.position.copy(Qt.DefaultUp),this.updateMatrix(),this.target=new Qt,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),this.distance=void 0!==i?i:0,this.angle=void 0!==n?n:Math.PI/3,this.penumbra=void 0!==r?r:0,this.decay=void 0!==s?s:1,this.shadow=new Uo}function ko(){Fo.call(this,new Mi(90,1,.5,500)),this._frameExtents=new Et(4,2),this._viewportCount=6,this._viewports=[new Ct(2,1,1,1),new Ct(0,1,1,1),new Ct(3,1,1,1),new Ct(1,1,1,1),new Ct(3,0,1,1),new Ct(1,0,1,1)],this._cubeDirections=[new Nt(1,0,0),new Nt(-1,0,0),new Nt(0,0,1),new Nt(0,0,-1),new Nt(0,1,0),new Nt(0,-1,0)],this._cubeUps=[new Nt(0,1,0),new Nt(0,1,0),new Nt(0,1,0),new Nt(0,1,0),new Nt(0,0,1),new Nt(0,0,-1)]}function Vo(t,e,i,n){Ro.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(t){this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==i?i:0,this.decay=void 0!==n?n:1,this.shadow=new ko}function jo(t=-1,e=1,i=1,n=-1,r=.1,s=2e3){bi.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=n,this.near=r,this.far=s,this.updateProjectionMatrix()}function Go(){Fo.call(this,new jo(-5,5,5,-5,.5,500))}function Wo(t,e){Ro.call(this,t,e),this.type="DirectionalLight",this.position.copy(Qt.DefaultUp),this.updateMatrix(),this.target=new Qt,this.shadow=new Go}function Ho(t,e){Ro.call(this,t,e),this.type="AmbientLight"}function Xo(t,e,i,n){Ro.call(this,t,e),this.type="RectAreaLight",this.width=void 0!==i?i:10,this.height=void 0!==n?n:10}Oo.prototype=Object.assign(Object.create(uo.prototype),{constructor:Oo,add:function(t){this.curves.push(t)},closePath:function(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new To(e,t))},getPoint:function(t){var e=t*this.getLength(),i=this.getCurveLengths();let n=0;for(;n<i.length;){if(i[n]>=e){const t=i[n]-e,r=this.curves[n],s=r.getLength(),a=0===s?0:1-t/s;return r.getPointAt(a)}n++}return null},getLength:function(){var t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const i=[];let n=0;for(let t=0,e=this.curves.length;t<e;t++)n+=this.curves[t].getLength(),i.push(n);return this.cacheLengths=i,i},getSpacedPoints:function(e=40){const i=[];for(let t=0;t<=e;t++)i.push(this.getPoint(t/e));return this.autoClose&&i.push(i[0]),i},getPoints:function(i=12){const n=[];let r;for(let t=0,e=this.curves;t<e.length;t++){const a=e[t],o=a&&a.isEllipseCurve?2*i:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?i*a.points.length:i,l=a.getPoints(o);for(let t=0;t<l.length;t++){var s=l[t];r&&r.equals(s)||(n.push(s),r=s)}}return this.autoClose&&1<n.length&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n},copy:function(i){uo.prototype.copy.call(this,i),this.curves=[];for(let t=0,e=i.curves.length;t<e;t++){const n=i.curves[t];this.curves.push(n.clone())}return this.autoClose=i.autoClose,this},toJSON:function(){const i=uo.prototype.toJSON.call(this);i.autoClose=this.autoClose,i.curves=[];for(let t=0,e=this.curves.length;t<e;t++){const n=this.curves[t];i.curves.push(n.toJSON())}return i},fromJSON:function(i){uo.prototype.fromJSON.call(this,i),this.autoClose=i.autoClose,this.curves=[];for(let t=0,e=i.curves.length;t<e;t++){var n=i.curves[t];this.curves.push((new No[n.type]).fromJSON(n))}return this}}),Io.prototype=Object.assign(Object.create(Oo.prototype),{constructor:Io,setFromPoints:function(i){this.moveTo(i[0].x,i[0].y);for(let t=1,e=i.length;t<e;t++)this.lineTo(i[t].x,i[t].y);return this},moveTo:function(t,e){return this.currentPoint.set(t,e),this},lineTo:function(t,e){var i=new To(this.currentPoint.clone(),new Et(t,e));return this.curves.push(i),this.currentPoint.set(t,e),this},quadraticCurveTo:function(t,e,i,n){e=new Po(this.currentPoint.clone(),new Et(t,e),new Et(i,n));return this.curves.push(e),this.currentPoint.set(i,n),this},bezierCurveTo:function(t,e,i,n,r,s){n=new So(this.currentPoint.clone(),new Et(t,e),new Et(i,n),new Et(r,s));return this.curves.push(n),this.currentPoint.set(r,s),this},splineThru:function(t){var e=new Co([this.currentPoint.clone()].concat(t));return this.curves.push(e),this.currentPoint.copy(t[t.length-1]),this},arc:function(t,e,i,n,r,s){var a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+a,e+o,i,n,r,s),this},absarc:function(t,e,i,n,r,s){return this.absellipse(t,e,i,i,n,r,s),this},ellipse:function(t,e,i,n,r,s,a,o){var l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,i,n,r,s,a,o),this},absellipse:function(t,e,i,n,r,s,a,o){const l=new po(t,e,i,n,r,s,a,o);if(0<this.curves.length){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);o=l.getPoint(1);return this.currentPoint.copy(o),this},copy:function(t){return Oo.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){const t=Oo.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return Oo.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}}),Do.prototype=Object.assign(Object.create(Io.prototype),{constructor:Do,getPointsHoles:function(i){const n=[];for(let t=0,e=this.holes.length;t<e;t++)n[t]=this.holes[t].getPoints(i);return n},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(i){Io.prototype.copy.call(this,i),this.holes=[];for(let t=0,e=i.holes.length;t<e;t++){const n=i.holes[t];this.holes.push(n.clone())}return this},toJSON:function(){const i=Io.prototype.toJSON.call(this);i.uuid=this.uuid,i.holes=[];for(let t=0,e=this.holes.length;t<e;t++){const n=this.holes[t];i.holes.push(n.toJSON())}return i},fromJSON:function(i){Io.prototype.fromJSON.call(this,i),this.uuid=i.uuid,this.holes=[];for(let t=0,e=i.holes.length;t<e;t++){var n=i.holes[t];this.holes.push((new Io).fromJSON(n))}return this}}),Ro.prototype=Object.assign(Object.create(Qt.prototype),{constructor:Ro,isLight:!0,copy:function(t){return Qt.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){const e=Qt.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),zo.prototype=Object.assign(Object.create(Ro.prototype),{constructor:zo,isHemisphereLight:!0,copy:function(t){return Ro.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}),Object.assign(Fo.prototype,{_projScreenMatrix:new Ot,_lightPositionWorld:new Nt,_lookTarget:new Nt,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(t){const e=this.camera,i=this.matrix,n=this._projScreenMatrix,r=this._lookTarget,s=this._lightPositionWorld;s.setFromMatrixPosition(t.matrixWorld),e.position.copy(s),r.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(r),e.updateMatrixWorld(),n.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(n),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(e.projectionMatrix),i.multiply(e.matrixWorldInverse)},getViewport:function(t){return this._viewports[t]},getFrameExtents:function(){return this._frameExtents},copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}),Uo.prototype=Object.assign(Object.create(Fo.prototype),{constructor:Uo,isSpotLightShadow:!0,updateMatrices:function(t){const e=this.camera,i=2*Pt.RAD2DEG*t.angle*this.focus,n=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;i===e.fov&&n===e.aspect&&r===e.far||(e.fov=i,e.aspect=n,e.far=r,e.updateProjectionMatrix()),Fo.prototype.updateMatrices.call(this,t)}}),Bo.prototype=Object.assign(Object.create(Ro.prototype),{constructor:Bo,isSpotLight:!0,copy:function(t){return Ro.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),ko.prototype=Object.assign(Object.create(Fo.prototype),{constructor:ko,isPointLightShadow:!0,updateMatrices:function(t,e=0){const i=this.camera,n=this.matrix,r=this._lightPositionWorld,s=this._lookTarget,a=this._projScreenMatrix;r.setFromMatrixPosition(t.matrixWorld),i.position.copy(r),s.copy(i.position),s.add(this._cubeDirections[e]),i.up.copy(this._cubeUps[e]),i.lookAt(s),i.updateMatrixWorld(),n.makeTranslation(-r.x,-r.y,-r.z),a.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(a)}}),Vo.prototype=Object.assign(Object.create(Ro.prototype),{constructor:Vo,isPointLight:!0,copy:function(t){return Ro.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}),jo.prototype=Object.assign(Object.create(bi.prototype),{constructor:jo,isOrthographicCamera:!0,copy:function(t,e){return bi.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,i,n,r,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let r=i-t,s=i+t,a=n+e,o=n-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,s=r+t*this.view.width,a-=e*this.view.offsetY,o=a-e*this.view.height}this.projectionMatrix.makeOrthographic(r,s,a,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=Qt.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}),Go.prototype=Object.assign(Object.create(Fo.prototype),{constructor:Go,isDirectionalLightShadow:!0,updateMatrices:function(t){Fo.prototype.updateMatrices.call(this,t)}}),Wo.prototype=Object.assign(Object.create(Ro.prototype),{constructor:Wo,isDirectionalLight:!0,copy:function(t){return Ro.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Ho.prototype=Object.assign(Object.create(Ro.prototype),{constructor:Ho,isAmbientLight:!0}),Xo.prototype=Object.assign(Object.create(Ro.prototype),{constructor:Xo,isRectAreaLight:!0,copy:function(t){return Ro.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){const e=Ro.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}});class Yo{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new Nt)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){var i=t.x,n=t.y,r=t.z,t=this.coefficients;return e.copy(t[0]).multiplyScalar(.282095),e.addScaledVector(t[1],.488603*n),e.addScaledVector(t[2],.488603*r),e.addScaledVector(t[3],.488603*i),e.addScaledVector(t[4],i*n*1.092548),e.addScaledVector(t[5],n*r*1.092548),e.addScaledVector(t[6],.315392*(3*r*r-1)),e.addScaledVector(t[7],i*r*1.092548),e.addScaledVector(t[8],.546274*(i*i-n*n)),e}getIrradianceAt(t,e){var i=t.x,n=t.y,r=t.z,t=this.coefficients;return e.copy(t[0]).multiplyScalar(.886227),e.addScaledVector(t[1],1.023328*n),e.addScaledVector(t[2],1.023328*r),e.addScaledVector(t[3],1.023328*i),e.addScaledVector(t[4],.858086*i*n),e.addScaledVector(t[5],.858086*n*r),e.addScaledVector(t[6],.743125*r*r-.247708),e.addScaledVector(t[7],.858086*i*r),e.addScaledVector(t[8],.429043*(i*i-n*n)),e}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,i){for(let t=0;t<9;t++)this.coefficients[t].addScaledVector(e.coefficients[t],i);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,i){for(let t=0;t<9;t++)this.coefficients[t].lerp(e.coefficients[t],i);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(e,i=0){const n=this.coefficients;for(let t=0;t<9;t++)n[t].fromArray(e,i+3*t);return this}toArray(e=[],i=0){const n=this.coefficients;for(let t=0;t<9;t++)n[t].toArray(e,i+3*t);return e}static getBasisAt(t,e){var i=t.x,n=t.y,t=t.z;e[0]=.282095,e[1]=.488603*n,e[2]=.488603*t,e[3]=.488603*i,e[4]=1.092548*i*n,e[5]=1.092548*n*t,e[6]=.315392*(3*t*t-1),e[7]=1.092548*i*t,e[8]=.546274*(i*i-n*n)}}function qo(t,e){Ro.call(this,void 0,e),this.type="LightProbe",this.sh=void 0!==t?t:new Yo}function Zo(t){io.call(this,t),this.textures={}}qo.prototype=Object.assign(Object.create(Ro.prototype),{constructor:qo,isLightProbe:!0,copy:function(t){return Ro.prototype.copy.call(this,t),this.sh.copy(t.sh),this},fromJSON:function(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this},toJSON:function(t){const e=Ro.prototype.toJSON.call(this,t);return e.object.sh=this.sh.toArray(),e}}),Zo.prototype=Object.assign(Object.create(io.prototype),{constructor:Zo,load:function(e,i,t,n){const r=this,s=new ro(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(t){try{i(r.parse(JSON.parse(t)))}catch(t){n&&n(t),r.manager.itemError(e)}},t,n)},parse:function(e){const i=this.textures;function t(t){return i[t],i[t]}const n=new Ba[e.type];if(void 0!==e.uuid&&(n.uuid=e.uuid),void 0!==e.name&&(n.name=e.name),void 0!==e.color&&void 0!==n.color&&n.color.setHex(e.color),void 0!==e.roughness&&(n.roughness=e.roughness),void 0!==e.metalness&&(n.metalness=e.metalness),void 0!==e.sheen&&(n.sheen=(new _e).setHex(e.sheen)),void 0!==e.emissive&&void 0!==n.emissive&&n.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==n.specular&&n.specular.setHex(e.specular),void 0!==e.shininess&&(n.shininess=e.shininess),void 0!==e.clearcoat&&(n.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(n.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.fog&&(n.fog=e.fog),void 0!==e.flatShading&&(n.flatShading=e.flatShading),void 0!==e.blending&&(n.blending=e.blending),void 0!==e.combine&&(n.combine=e.combine),void 0!==e.side&&(n.side=e.side),void 0!==e.opacity&&(n.opacity=e.opacity),void 0!==e.transparent&&(n.transparent=e.transparent),void 0!==e.alphaTest&&(n.alphaTest=e.alphaTest),void 0!==e.depthTest&&(n.depthTest=e.depthTest),void 0!==e.depthWrite&&(n.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(n.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(n.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(n.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(n.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(n.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(n.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(n.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(n.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(n.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(n.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(n.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(n.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(n.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(n.rotation=e.rotation),1!==e.linewidth&&(n.linewidth=e.linewidth),void 0!==e.dashSize&&(n.dashSize=e.dashSize),void 0!==e.gapSize&&(n.gapSize=e.gapSize),void 0!==e.scale&&(n.scale=e.scale),void 0!==e.polygonOffset&&(n.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(n.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(n.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(n.skinning=e.skinning),void 0!==e.morphTargets&&(n.morphTargets=e.morphTargets),void 0!==e.morphNormals&&(n.morphNormals=e.morphNormals),void 0!==e.dithering&&(n.dithering=e.dithering),void 0!==e.vertexTangents&&(n.vertexTangents=e.vertexTangents),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.toneMapped&&(n.toneMapped=e.toneMapped),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?n.vertexColors=0<e.vertexColors:n.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const i in e.uniforms){var r=e.uniforms[i];switch(n.uniforms[i]={},r.type){case"t":n.uniforms[i].value=t(r.value);break;case"c":n.uniforms[i].value=(new _e).setHex(r.value);break;case"v2":n.uniforms[i].value=(new Et).fromArray(r.value);break;case"v3":n.uniforms[i].value=(new Nt).fromArray(r.value);break;case"v4":n.uniforms[i].value=(new Ct).fromArray(r.value);break;case"m3":n.uniforms[i].value=(new v).fromArray(r.value);break;case"m4":n.uniforms[i].value=(new Ot).fromArray(r.value);break;default:n.uniforms[i].value=r.value}}if(void 0!==e.defines&&(n.defines=e.defines),void 0!==e.vertexShader&&(n.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(n.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(const i in e.extensions)n.extensions[i]=e.extensions[i];if(void 0!==e.shading&&(n.flatShading=1===e.shading),void 0!==e.size&&(n.size=e.size),void 0!==e.sizeAttenuation&&(n.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(n.map=t(e.map)),void 0!==e.matcap&&(n.matcap=t(e.matcap)),void 0!==e.alphaMap&&(n.alphaMap=t(e.alphaMap)),void 0!==e.bumpMap&&(n.bumpMap=t(e.bumpMap)),void 0!==e.bumpScale&&(n.bumpScale=e.bumpScale),void 0!==e.normalMap&&(n.normalMap=t(e.normalMap)),void 0!==e.normalMapType&&(n.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),n.normalScale=(new Et).fromArray(t)}return void 0!==e.displacementMap&&(n.displacementMap=t(e.displacementMap)),void 0!==e.displacementScale&&(n.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(n.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(n.roughnessMap=t(e.roughnessMap)),void 0!==e.metalnessMap&&(n.metalnessMap=t(e.metalnessMap)),void 0!==e.emissiveMap&&(n.emissiveMap=t(e.emissiveMap)),void 0!==e.emissiveIntensity&&(n.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(n.specularMap=t(e.specularMap)),void 0!==e.envMap&&(n.envMap=t(e.envMap)),void 0!==e.envMapIntensity&&(n.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(n.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(n.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(n.lightMap=t(e.lightMap)),void 0!==e.lightMapIntensity&&(n.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(n.aoMap=t(e.aoMap)),void 0!==e.aoMapIntensity&&(n.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(n.gradientMap=t(e.gradientMap)),void 0!==e.clearcoatMap&&(n.clearcoatMap=t(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap=t(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(n.clearcoatNormalMap=t(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(n.clearcoatNormalScale=(new Et).fromArray(e.clearcoatNormalScale)),void 0!==e.transmission&&(n.transmission=e.transmission),void 0!==e.transmissionMap&&(n.transmissionMap=t(e.transmissionMap)),n},setTextures:function(t){return this.textures=t,this}});const Jo={decodeText:function(i){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(i);let n="";for(let t=0,e=i.length;t<e;t++)n+=String.fromCharCode(i[t]);try{return decodeURIComponent(escape(n))}catch(i){return n}},extractUrlBase:function(t){var e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}};function Ko(){Ze.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function Qo(t,e,i,n){"number"==typeof i&&(n=i,i=!1),Le.call(this,t,e,i),this.meshPerAttribute=n||1}function $o(t){io.call(this,t)}function tl(t){io.call(this,t),this.options={premultiplyAlpha:"none"}}function el(){this.type="ShapePath",this.color=new _e,this.subPaths=[],this.currentPath=null}function il(t){this.type="Font",this.data=t}function nl(t){io.call(this,t)}Ko.prototype=Object.assign(Object.create(Ze.prototype),{constructor:Ko,isInstancedBufferGeometry:!0,copy:function(t){return Ze.prototype.copy.call(this,t),this.instanceCount=t.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t=Ze.prototype.toJSON.call(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}),Qo.prototype=Object.assign(Object.create(Le.prototype),{constructor:Qo,isInstancedBufferAttribute:!0,copy:function(t){return Le.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){const t=Le.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}),$o.prototype=Object.assign(Object.create(io.prototype),{constructor:$o,load:function(e,i,t,n){const r=this,s=new ro(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(t){try{i(r.parse(JSON.parse(t)))}catch(t){n&&n(t),r.manager.itemError(e)}},t,n)},parse:function(i){const s={},a={};function n(t,e){if(void 0!==s[e])return s[e];const i=t.interleavedBuffers[e],n=function(t,e){if(void 0!==a[e])return a[e];t=t.arrayBuffers[e],t=new Uint32Array(t).buffer;return a[e]=t}(t,i.buffer),r=new Fr(Ve(i.type,n),i.stride);return r.uuid=i.uuid,s[e]=r,r}const r=new(i.isInstancedBufferGeometry?Ko:Ze),o=i.data.index;if(void 0!==o){const i=Ve(o.type,o.array);r.setIndex(new Le(i,1))}var e=i.data.attributes;for(const s in e){const a=e[s];let t;if(a.isInterleavedBufferAttribute)t=new Br(n(i.data,a.data),a.itemSize,a.offset,a.normalized);else{const i=Ve(a.type,a.array);t=new(a.isInstancedBufferAttribute?Qo:Le)(i,a.itemSize,a.normalized)}void 0!==a.name&&(t.name=a.name),r.setAttribute(s,t)}var t=i.data.morphAttributes;if(t)for(const s in t){const a=t[s],o=[];for(let e=0,t=a.length;e<t;e++){const r=a[e];let t;t=r.isInterleavedBufferAttribute?new Br(n(i.data,r.data),r.itemSize,r.offset,r.normalized):new Le(Ve(r.type,r.array),r.itemSize,r.normalized),void 0!==r.name&&(t.name=r.name),o.push(t)}r.morphAttributes[s]=o}i.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);var l=i.data.groups||i.data.drawcalls||i.data.offsets;if(void 0!==l)for(let t=0,e=l.length;t!==e;++t){const s=l[t];r.addGroup(s.start,s.count,s.materialIndex)}var c=i.data.boundingSphere;if(void 0!==c){const i=new Nt;void 0!==c.center&&i.fromArray(c.center),r.boundingSphere=new ct(i,c.radius)}return i.name&&(r.name=i.name),i.userData&&(r.userData=i.userData),r}});let rl;tl.prototype=Object.assign(Object.create(io.prototype),{constructor:tl,isImageBitmapLoader:!0,setOptions:function(t){return this.options=t,this},load:function(e,i,t,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=to.get(e);if(void 0!==s)return r.manager.itemStart(e),setTimeout(function(){i&&i(s),r.manager.itemEnd(e)},0),s;const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",fetch(e,a).then(function(t){return t.blob()}).then(function(t){return createImageBitmap(t,r.options)}).then(function(t){to.add(e,t),i&&i(t),r.manager.itemEnd(e)}).catch(function(t){n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}),Object.assign(el.prototype,{moveTo:function(t,e){return this.currentPath=new Io,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this},lineTo:function(t,e){return this.currentPath.lineTo(t,e),this},quadraticCurveTo:function(t,e,i,n){return this.currentPath.quadraticCurveTo(t,e,i,n),this},bezierCurveTo:function(t,e,i,n,r,s){return this.currentPath.bezierCurveTo(t,e,i,n,r,s),this},splineThru:function(t){return this.currentPath.splineThru(t),this},toShapes:function(i,s){function t(i){const n=[];for(let t=0,e=i.length;t<e;t++){const r=i[t],s=new Do;s.curves=r.curves,n.push(s)}return n}const a=da.isClockWise,n=this.subPaths;if(0===n.length)return[];if(!0===s)return t(n);let o,r,l;const e=[];if(1===n.length)return r=n[0],l=new Do,l.curves=r.curves,e.push(l),e;let c=!a(n[0].getPoints());c=i?!c:c;const h=[],u=[];let p,d,f=[],m=0;u[m]=void 0,f[m]=[];for(let t=0,e=n.length;t<e;t++)r=n[t],p=r.getPoints(),o=a(p),o=i?!o:o,o?(!c&&u[m]&&m++,u[m]={s:new Do,p:p},u[m].s.curves=r.curves,c&&m++,f[m]=[]):f[m].push({h:r,p:p[0]});if(!u[0])return t(n);if(1<u.length){let r=!1;const s=[];for(let t=0,e=u.length;t<e;t++)h[t]=[];for(let n=0,t=u.length;n<t;n++){const a=f[n];for(let i=0;i<a.length;i++){const o=a[i];let e=!0;for(let t=0;t<u.length;t++)!function(a,o){var t=o.length;let l=!1;for(let r=t-1,s=0;s<t;r=s++){let t=o[r],e=o[s],i=e.x-t.x,n=e.y-t.y;if(Math.abs(n)>Number.EPSILON){if(n<0&&(t=o[s],i=-i,e=o[r],n=-n),!(a.y<t.y||a.y>e.y))if(a.y===t.y){if(a.x===t.x)return 1}else{const o=n*(a.x-t.x)-i*(a.y-t.y);if(0==o)return 1;o<0||(l=!l)}}else if(a.y===t.y&&(e.x<=a.x&&a.x<=t.x||t.x<=a.x&&a.x<=e.x))return 1}return l}(o.p,u[t].p)||(n!==t&&s.push({froms:n,tos:t,hole:i}),e?(e=!1,h[t].push(o)):r=!0);e&&h[n].push(o)}}0<s.length&&(r||(f=h))}for(let i=0,t=u.length;i<t;i++){l=u[i].s,e.push(l);for(let t=0,e=(d=f[i]).length;t<e;t++)l.holes.push(d[t].h)}return e}}),Object.assign(il.prototype,{isFont:!0,generateShapes:function(t,e=100){const i=[],n=function(e,i,n){const r=Array.from?Array.from(e):String(e).split(""),s=i/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*s,o=[];let l=0,c=0;for(let t=0;t<r.length;t++){const i=r[t];if("\n"===i)l=0,c-=a;else{const e=function(h,u,p,d,t){const e=t.glyphs[h]||t.glyphs["?"];if(e){const f=new el;let i,n,r,s,a,o,l,c;if(e.o){const h=e._cachedOutline||(e._cachedOutline=e.o.split(" "));for(let t=0,e=h.length;t<e;)switch(h[t++]){case"m":i=h[t++]*u+p,n=h[t++]*u+d,f.moveTo(i,n);break;case"l":i=h[t++]*u+p,n=h[t++]*u+d,f.lineTo(i,n);break;case"q":r=h[t++]*u+p,s=h[t++]*u+d,a=h[t++]*u+p,o=h[t++]*u+d,f.quadraticCurveTo(a,o,r,s);break;case"b":r=h[t++]*u+p,s=h[t++]*u+d,a=h[t++]*u+p,o=h[t++]*u+d,l=h[t++]*u+p,c=h[t++]*u+d,f.bezierCurveTo(a,o,l,c,r,s)}}return{offsetX:e.ha*u,path:f}}}(i,s,l,c,n);l+=e.offsetX,o.push(e.path)}}return o}(t,e,this.data);for(let t=0,e=n.length;t<e;t++)Array.prototype.push.apply(i,n[t].toShapes());return i}}),nl.prototype=Object.assign(Object.create(io.prototype),{constructor:nl,load:function(t,n,e,i){const r=this,s=new ro(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,function(e){let i;try{i=JSON.parse(e)}catch(t){i=JSON.parse(e.substring(65,e.length-2))}e=r.parse(i);n&&n(e)},e,i)},parse:function(t){return new il(t)}});function sl(){return void 0===rl&&(rl=new(window.AudioContext||window.webkitAudioContext)),rl}function al(t){io.call(this,t)}function ol(t,e,i){qo.call(this,void 0,i);var n=(new _e).set(t),i=(new _e).set(e),t=new Nt(n.r,n.g,n.b),e=new Nt(i.r,i.g,i.b),n=Math.sqrt(Math.PI),i=n*Math.sqrt(.75);this.sh.coefficients[0].copy(t).add(e).multiplyScalar(n),this.sh.coefficients[1].copy(t).sub(e).multiplyScalar(i)}function ll(t,e){qo.call(this,void 0,e);t=(new _e).set(t);this.sh.coefficients[0].set(t.r,t.g,t.b).multiplyScalar(2*Math.sqrt(Math.PI))}al.prototype=Object.assign(Object.create(io.prototype),{constructor:al,load:function(e,i,t,n){const r=this,s=new ro(r.manager);s.setResponseType("arraybuffer"),s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(t){try{const e=t.slice(0);sl().decodeAudioData(e,function(t){i(t)})}catch(t){n&&n(t),r.manager.itemError(e)}},t,n)}}),ol.prototype=Object.assign(Object.create(qo.prototype),{constructor:ol,isHemisphereLightProbe:!0,copy:function(t){return qo.prototype.copy.call(this,t),this},toJSON:function(t){return qo.prototype.toJSON.call(this,t)}}),ll.prototype=Object.assign(Object.create(qo.prototype),{constructor:ll,isAmbientLightProbe:!0,copy:function(t){return qo.prototype.copy.call(this,t),this},toJSON:function(t){return qo.prototype.toJSON.call(this,t)}});const cl=new Ot,hl=new Ot;Object.assign(function(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Mi,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Mi,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}.prototype,{update:function(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;const r=t.projectionMatrix.clone(),s=e.eyeSep/2,a=s*e.near/e.focus,o=e.near*Math.tan(Pt.DEG2RAD*e.fov*.5)/e.zoom;var i,n;hl.elements[12]=-s,cl.elements[12]=s,i=-o*e.aspect+a,n=o*e.aspect+a,r.elements[0]=2*e.near/(n-i),r.elements[8]=(n+i)/(n-i),this.cameraL.projectionMatrix.copy(r),i=-o*e.aspect-a,n=o*e.aspect-a,r.elements[0]=2*e.near/(n-i),r.elements[8]=(n+i)/(n-i),this.cameraR.projectionMatrix.copy(r)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(hl),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(cl)}});class ul{constructor(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=pl(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;return this.autoStart&&!this.running?(this.start(),0):(this.running&&(e=pl(),t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t),t);var e}}function pl(){return("undefined"==typeof performance?Date:performance).now()}const dl=new Nt,fl=new _,ml=new Nt,gl=new Nt;class vl extends Qt{constructor(){super(),this.type="AudioListener",this.context=sl(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new ul}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(dl,fl,ml),gl.set(0,0,-1).applyQuaternion(fl),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(dl.x,t),e.positionY.linearRampToValueAtTime(dl.y,t),e.positionZ.linearRampToValueAtTime(dl.z,t),e.forwardX.linearRampToValueAtTime(gl.x,t),e.forwardY.linearRampToValueAtTime(gl.y,t),e.forwardZ.linearRampToValueAtTime(gl.z,t),e.upX.linearRampToValueAtTime(i.x,t),e.upY.linearRampToValueAtTime(i.y,t),e.upZ.linearRampToValueAtTime(i.z,t)}else e.setPosition(dl.x,dl.y,dl.z),e.setOrientation(gl.x,gl.y,gl.z,i.x,i.y,i.z)}}class yl extends Qt{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0!==this.isPlaying&&!1!==this.hasPlaybackControl){this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t=t||[],!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1!==this.hasPlaybackControl&&this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}function xl(t,e,i){let n,r,s;switch(this.binding=t,this.valueSize=i,e){case"quaternion":n=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":n=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(5*i);break;default:n=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(xl.prototype,{accumulate:function(t,e){const i=this.buffer,n=this.valueSize,r=t*n+n;let s=this.cumulativeWeight;if(0===s){for(let t=0;t!==n;++t)i[r+t]=i[t];s=e}else{s+=e;const t=e/s;this._mixBufferRegion(i,r,0,t,n)}this.cumulativeWeight=s},accumulateAdditive:function(t){var e=this.buffer,i=this.valueSize,n=i*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,n,0,t,i),this.cumulativeWeightAdditive+=t},apply:function(t){const i=this.valueSize,n=this.buffer,r=t*i+i,e=this.cumulativeWeight,s=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,e<1){const t=i*this._origIndex;this._mixBufferRegion(n,r,t,1-e,i)}0<s&&this._mixBufferRegionAdditive(n,r,this._addIndex*i,1,i);for(let t=i,e=i+i;t!==e;++t)if(n[t]!==n[t+i]){a.setValue(n,r);break}},saveOriginalState:function(){const t=this.binding,i=this.buffer,n=this.valueSize,r=n*this._origIndex;t.getValue(i,r);for(let t=n,e=r;t!==e;++t)i[t]=i[r+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){var t=3*this.valueSize;this.binding.setValue(this.buffer,t)},_setAdditiveIdentityNumeric:function(){var e=this._addIndex*this.valueSize,i=e+this.valueSize;for(let t=e;t<i;t++)this.buffer[t]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){var e=this._origIndex*this.valueSize,i=this._addIndex*this.valueSize;for(let t=0;t<this.valueSize;t++)this.buffer[i+t]=this.buffer[e+t]},_select:function(e,i,n,t,r){if(.5<=t)for(let t=0;t!==r;++t)e[i+t]=e[n+t]},_slerp:function(t,e,i,n){_.slerpFlat(t,e,t,e,t,i,n)},_slerpAdditive:function(t,e,i,n,r){r=this._workIndex*r;_.multiplyQuaternionsFlat(t,r,t,e,t,i),_.slerpFlat(t,e,t,e,t,r,n)},_lerp:function(e,i,n,r,s){var a=1-r;for(let t=0;t!==s;++t){const s=i+t;e[s]=e[s]*a+e[n+t]*r}},_lerpAdditive:function(e,i,n,r,s){for(let t=0;t!==s;++t){const s=i+t;e[s]=e[s]+e[n+t]*r}}});const _l=new RegExp("[\\[\\]\\.:\\/]","g"),bl="[^\\[\\]\\.:\\/]",Ml="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",wl=/((?:WC+[\/:])*)/.source.replace("WC",bl),Sl=/(WCOD+)?/.source.replace("WCOD",Ml),Al=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",bl),Tl=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",bl),Ll=new RegExp("^"+wl+Sl+Al+Tl+"$"),Pl=["material","materials","bones"];function El(t,e,i){i=i||Cl.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}function Cl(t,e,i){this.path=e,this.parsedPath=i||Cl.parseTrackName(e),this.node=Cl.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}Object.assign(El.prototype,{getValue:function(t,e){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(t,e)},setValue:function(i,n){const r=this._bindings;for(let t=this._targetGroup.nCachedObjects_,e=r.length;t!==e;++t)r[t].setValue(i,n)},bind:function(){const i=this._bindings;for(let t=this._targetGroup.nCachedObjects_,e=i.length;t!==e;++t)i[t].bind()},unbind:function(){const i=this._bindings;for(let t=this._targetGroup.nCachedObjects_,e=i.length;t!==e;++t)i[t].unbind()}}),Object.assign(Cl,{Composite:El,create:function(t,e,i){return new(t&&t.isAnimationObjectGroup?Cl.Composite:Cl)(t,e,i)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(_l,"")},parseTrackName:function(t){var e=Ll.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const i={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){const t=i.nodeName.substring(n+1);-1!==Pl.indexOf(t)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=t)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i},findNode:function(t,n){if(!n||""===n||"."===n||-1===n||n===t.name||n===t.uuid)return t;if(t.skeleton){var e=t.skeleton.getBoneByName(n);if(void 0!==e)return e}if(t.children){const r=function(e){for(let t=0;t<e.length;t++){var i=e[t];if(i.name===n||i.uuid===n)return i;i=r(i.children);if(i)return i}return null},i=r(t.children);if(i)return i}return null}}),Object.assign(Cl.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(i,n){var r=this.resolvedProperty;for(let t=0,e=r.length;t!==e;++t)i[n++]=r[t]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(i,n){const r=this.resolvedProperty;for(let t=0,e=r.length;t!==e;++t)r[t]=i[n++]},function(i,n){const r=this.resolvedProperty;for(let t=0,e=r.length;t!==e;++t)r[t]=i[n++];this.targetObject.needsUpdate=!0},function(i,n){const r=this.resolvedProperty;for(let t=0,e=r.length;t!==e;++t)r[t]=i[n++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){let i=this.node;var t=this.parsedPath,n=t.objectName,r=t.propertyName;let s=t.propertyIndex;if(i||(i=Cl.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=i),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,i){if(n){let e=t.objectIndex;switch(n){case"materials":if(!i.material)return;if(!i.material.materials)return;i=i.material.materials;break;case"bones":if(!i.skeleton)return;i=i.skeleton.bones;for(let t=0;t<i.length;t++)if(i[t].name===e){e=t;break}break;default:if(void 0===i[n])return;i=i[n]}if(void 0!==e){if(void 0===i[e])return;i=i[e]}}var a=i[r];if(void 0!==a){let t=this.Versioning.None;this.targetObject=i,void 0!==i.needsUpdate?t=this.Versioning.NeedsUpdate:void 0!==i.matrixWorldNeedsUpdate&&(t=this.Versioning.MatrixWorldNeedsUpdate);let e=this.BindingType.Direct;if(void 0!==s){if("morphTargetInfluences"===r){if(!i.geometry)return;if(!i.geometry.isBufferGeometry)return;if(!i.geometry.morphAttributes)return;void 0!==i.morphTargetDictionary[s]&&(s=i.morphTargetDictionary[s])}e=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else void 0!==a.fromArray&&void 0!==a.toArray?(e=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(e=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=r;this.getValue=this.GetterByBindingType[e],this.setValue=this.SetterByBindingTypeAndVersioning[e][t]}else t.nodeName}},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Cl.prototype,{_getValue_unbound:Cl.prototype.getValue,_setValue_unbound:Cl.prototype.setValue}),Object.assign(function(){this.uuid=Pt.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const i={};this._indicesByUUID=i;for(let t=0,e=arguments.length;t!==e;++t)i[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}.prototype,{isAnimationObjectGroup:!0,add:function(){const n=this._objects,r=this._indicesByUUID,s=this._paths,a=this._parsedPaths,o=this._bindings,l=o.length;let c=n.length,h=this.nCachedObjects_;for(let t=0,e=arguments.length;t!==e;++t){var u=arguments[t],p=u.uuid;let i=r[p];if(void 0===i){i=c++,r[p]=i,n.push(u);for(let t=0,e=l;t!==e;++t)o[t].push(new Cl(u,s[t],a[t]))}else if(i<h){n[i];const c=--h,d=n[c];r[d.uuid]=i,n[i]=d,r[p]=c,n[c]=u;for(let e=0,t=l;e!==t;++e){const r=o[e],l=r[c];let t=r[i];r[i]=l,void 0===t&&(t=new Cl(u,s[e],a[e])),r[c]=t}}else n[i]}this.nCachedObjects_=h},remove:function(){const i=this._objects,n=this._indicesByUUID,r=this._bindings,s=r.length;let a=this.nCachedObjects_;for(let t=0,e=arguments.length;t!==e;++t){var o=arguments[t],l=o.uuid,c=n[l];if(void 0!==c&&c>=a){var h=a++,u=i[h];n[u.uuid]=c,i[c]=u,n[l]=h,i[h]=o;for(let t=0,e=s;t!==e;++t){const n=r[t],s=n[h],a=n[c];n[c]=s,n[h]=a}}}this.nCachedObjects_=a},uncache:function(){const i=this._objects,n=this._indicesByUUID,r=this._bindings,s=r.length;let a=this.nCachedObjects_,o=i.length;for(let t=0,e=arguments.length;t!==e;++t){var l=arguments[t].uuid,c=n[l];if(void 0!==c)if(delete n[l],c<a){var h=--a,u=i[h],p=--o,l=i[p];n[u.uuid]=c,i[c]=u,n[l.uuid]=h,i[h]=l,i.pop();for(let t=0,e=s;t!==e;++t){const n=r[t],s=n[h],a=n[p];n[c]=s,n[h]=a,n.pop()}}else{const a=--o,d=i[a];0<a&&(n[d.uuid]=c),i[c]=d,i.pop();for(let t=0,e=s;t!==e;++t){const n=r[t];n[c]=n[a],n.pop()}}}this.nCachedObjects_=a},subscribe_:function(i,n){const t=this._bindingsIndicesByPath;let r=t[i];const e=this._bindings;if(void 0!==r)return e[r];const s=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,h=new Array(l);r=e.length,t[i]=r,s.push(i),a.push(n),e.push(h);for(let t=c,e=o.length;t!==e;++t){const r=o[t];h[t]=new Cl(r,i,n)}return h},unsubscribe_:function(t){const e=this._bindingsIndicesByPath,i=e[t];if(void 0!==i){const n=this._paths,r=this._parsedPaths,s=this._bindings,a=s.length-1,o=s[a];e[t[a]]=i,s[i]=o,s.pop(),r[i]=r[a],r.pop(),n[i]=n[a],n.pop()}}});class Nl{constructor(t,e,i=null,n=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=i,this.blendMode=n;const r=e.tracks,s=r.length,a=new Array(s),o={endingStart:l,endingEnd:l};for(let t=0;t!==s;++t){const e=r[t].createInterpolant(null);a[t]=e,e.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,i){if(t.fadeOut(e),this.fadeIn(e),i){const i=this._clip.duration,n=t._clip.duration,r=n/i,s=i/n;t.warp(1,r,e),this.warp(s,1,e)}return this}crossFadeTo(t,e,i){return t.crossFadeFrom(this,e,i)}stopFading(){var t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,i){const n=this._mixer,r=n.time,s=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=r,o[1]=r+i,l[0]=t/s,l[1]=e/s,this}stopWarping(){var t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(i,n,t,r){if(this.enabled){var e=this._startTime;if(null!==e){const r=(i-e)*t;if(r<0||0===t)return;this._startTime=null,n=t*r}n*=this._updateTimeScale(i);var s=this._updateTime(n),a=this._updateWeight(i);if(0<a){const i=this._interpolants,n=this._propertyBindings;if(2501===this.blendMode)for(let t=0,e=i.length;t!==e;++t)i[t].evaluate(s),n[t].accumulateAdditive(a);else for(let t=0,e=i.length;t!==e;++t)i[t].evaluate(s),n[t].accumulate(r,a)}}else this._updateWeight(i)}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;var i;null!==n&&(i=n.evaluate(t)[0],e*=i,t>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1)))}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const i=this._timeScaleInterpolant;null!==i&&(e*=i.evaluate(t)[0],t>i.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,i=this.loop;let n=this.time+t,r=this._loopCount;var s=2202===i;if(0===t)return-1!==r&&s&&1==(1&r)?e-n:n;if(2200===i){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(n>=e)n=e;else{if(!(n<0)){this.time=n;break t}n=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(0<=t?(r=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),n>=e||n<0){const i=Math.floor(n/e);n-=e*i,r+=Math.abs(i);var a=this.repetitions-r;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=0<t?e:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<t?1:-1});else{if(1==a){const e=t<0;this._setEndings(e,!e,s)}else this._setEndings(!1,!1,s);this._loopCount=r,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:i})}}else this.time=n;if(s&&1==(1&r))return e-n}return n}_setEndings(t,e,i){const n=this._interpolantSettings;i?(n.endingStart=h,n.endingEnd=h):(n.endingStart=t?this.zeroSlopeAtStart?h:l:2402,n.endingEnd=e?this.zeroSlopeAtEnd?h:l:2402)}_scheduleFading(t,e,i){const n=this._mixer,r=n.time;let s=this._weightInterpolant;null===s&&(s=n._lendControlInterpolant(),this._weightInterpolant=s);const a=s.parameterPositions,o=s.sampleValues;return a[0]=r,o[0]=e,a[1]=r+t,o[1]=i,this}}function Ol(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}Ol.prototype=Object.assign(Object.create(c.prototype),{constructor:Ol,_bindAction:function(t,i){const n=t._localRoot||this._root,r=t._clip.tracks,s=r.length,a=t._propertyBindings,o=t._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let h=c[l];void 0===h&&(h={},c[l]=h);for(let e=0;e!==s;++e){const s=r[e],c=s.name;let t=h[c];if(void 0!==t)a[e]=t;else{if(t=a[e],void 0!==t){null===t._cacheIndex&&(++t.referenceCount,this._addInactiveBinding(t,l,c));continue}const r=i&&i._propertyBindings[e].binding.parsedPath;t=new xl(Cl.create(n,c,r),s.ValueTypeName,s.getValueSize()),++t.referenceCount,this._addInactiveBinding(t,l,c),a[e]=t}o[e].resultBuffer=t.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){var e,i,n;null===t._cacheIndex&&(e=(t._localRoot||this._root).uuid,i=t._clip.uuid,n=this._actionsByClip[i],this._bindAction(t,n&&n.knownActions[0]),this._addInactiveAction(t,i,e));var r=t._propertyBindings;for(let t=0,e=r.length;t!==e;++t){const s=r[t];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){var i=t._propertyBindings;for(let t=0,e=i.length;t!==e;++t){const n=i[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){t=t._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(t,e,i){const n=this._actions,r=this._actionsByClip;let s=r[e];if(void 0===s)s={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=s;else{const e=s.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=n.length,n.push(t),s.actionByRoot[i]=t},_removeInactiveAction:function(t){const e=this._actions,i=e[e.length-1],n=t._cacheIndex;i._cacheIndex=n,e[n]=i,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,s=this._actionsByClip,a=s[r],o=a.knownActions,l=o[o.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),t._byClipCacheIndex=null,delete a.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete s[r],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){var i=t._propertyBindings;for(let t=0,e=i.length;t!==e;++t){const n=i[t];0==--n.referenceCount&&this._removeInactiveBinding(n)}},_lendAction:function(t){const e=this._actions,i=t._cacheIndex,n=this._nActiveActions++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_takeBackAction:function(t){const e=this._actions,i=t._cacheIndex,n=--this._nActiveActions,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_addInactiveBinding:function(t,e,i){const n=this._bindingsByRootAndName,r=this._bindings;let s=n[e];void 0===s&&(s={},n[e]=s),(s[i]=t)._cacheIndex=r.length,r.push(t)},_removeInactiveBinding:function(t){const e=this._bindings,i=t.binding,n=i.rootNode.uuid,r=i.path,s=this._bindingsByRootAndName,a=s[n],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete a[r],0===Object.keys(a).length&&delete s[n]},_lendBinding:function(t){const e=this._bindings,i=t._cacheIndex,n=this._nActiveBindings++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_takeBackBinding:function(t){const e=this._bindings,i=t._cacheIndex,n=--this._nActiveBindings,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_lendControlInterpolant:function(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let i=t[e];return void 0===i&&(i=new Ga(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),i.__cacheIndex=e,t[e]=i),i},_takeBackControlInterpolant:function(t){const e=this._controlInterpolants,i=t.__cacheIndex,n=--this._nActiveControlInterpolants,r=e[n];t.__cacheIndex=n,e[n]=t,r.__cacheIndex=i,e[i]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e,i){var n=e||this._root,r=n.uuid;let s="string"==typeof t?$a.findByName(n,t):t;n=null!==s?s.uuid:t,t=this._actionsByClip[n];let a=null;if(void 0===i&&(i=null!==s?s.blendMode:2500),void 0!==t){const o=t.actionByRoot[r];if(void 0!==o&&o.blendMode===i)return o;a=t.knownActions[0],null===s&&(s=a._clip)}if(null===s)return null;i=new Nl(this,s,e,i);return this._bindAction(i,a),this._addInactiveAction(i,n,r),i},existingAction:function(t,e){var i=e||this._root,e=i.uuid,i="string"==typeof t?$a.findByName(i,t):t,t=i?i.uuid:t,t=this._actionsByClip[t];return void 0!==t&&t.actionByRoot[e]||null},stopAllAction:function(){const e=this._actions;for(let t=this._nActiveActions-1;0<=t;--t)e[t].stop();return this},update:function(e){e*=this.timeScale;const i=this._actions,n=this._nActiveActions,r=this.time+=e,s=Math.sign(e),a=this._accuIndex^=1;for(let t=0;t!==n;++t)i[t]._update(r,e,s,a);const o=this._bindings,l=this._nActiveBindings;for(let t=0;t!==l;++t)o[t].apply(a);return this},setTime:function(t){for(let t=this.time=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)},getRoot:function(){return this._root},uncacheClip:function(i){const n=this._actions,t=i.uuid,r=this._actionsByClip,s=r[t];if(void 0!==s){const i=s.knownActions;for(let t=0,e=i.length;t!==e;++t){const r=i[t];this._deactivateAction(r);const s=r._cacheIndex,a=n[n.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,a._cacheIndex=s,n[s]=a,n.pop(),this._removeInactiveBindingsForAction(r)}delete r[t]}},uncacheRoot:function(t){const e=t.uuid,i=this._actionsByClip;for(const t in i){const n=i[t].actionByRoot[e];void 0!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}const n=this._bindingsByRootAndName[e];if(void 0!==n)for(const t in n){const e=n[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}},uncacheAction:function(t,e){e=this.existingAction(t,e);null!==e&&(this._deactivateAction(e),this._removeInactiveAction(e))}});function Il(t,e,i){Fr.call(this,t,e),this.meshPerAttribute=i||1}function Dl(t,e,i,n,r){this.buffer=t,this.type=e,this.itemSize=i,this.elementSize=n,this.count=r,this.version=0}function Rl(t,e,i,n){this.ray=new vt(t,e),this.near=i||0,this.far=n||1/0,this.camera=null,this.layers=new Ut,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return this.Points}}})}function zl(t,e){return t.distance-e.distance}function Fl(t,i,n,r){if(t.layers.test(i.layers)&&t.raycast(i,n),!0===r){const r=t.children;for(let t=0,e=r.length;t<e;t++)Fl(r[t],i,n,!0)}}Il.prototype=Object.assign(Object.create(Fr.prototype),{constructor:Il,isInstancedInterleavedBuffer:!0,copy:function(t){return Fr.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},clone:function(t){const e=Fr.prototype.clone.call(this,t);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(t){const e=Fr.prototype.toJSON.call(this,t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}),Object.defineProperty(Dl.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Dl.prototype,{isGLBufferAttribute:!0,setBuffer:function(t){return this.buffer=t,this},setType:function(t,e){return this.type=t,this.elementSize=e,this},setItemSize:function(t){return this.itemSize=t,this},setCount:function(t){return this.count=t,this}}),Object.assign(Rl.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera&&(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e)},intersectObject:function(t,e,i){const n=i||[];return Fl(t,this,n,e),n.sort(zl),n},intersectObjects:function(i,n,t){const r=t||[];if(!1===Array.isArray(i))return r;for(let t=0,e=i.length;t<e;t++)Fl(i[t],this,r,n);return r.sort(zl),r}});class Ul{constructor(t=1,e=0,i=0){return this.radius=t,this.phi=e,this.theta=i,this}set(t,e,i){return this.radius=t,this.phi=e,this.theta=i,this}clone(){return(new this.constructor).copy(this)}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,i){return this.radius=Math.sqrt(t*t+e*e+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,i),this.phi=Math.acos(Pt.clamp(e/this.radius,-1,1))),this}}const Bl=new Et;new Nt,new Nt;function kl(t){Qt.call(this),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}((kl.prototype=Object.create(Qt.prototype)).constructor=kl).prototype.isImmediateRenderObject=!0;const Vl=new Nt,jl=new Ot,Gl=new Ot;class Wl extends Es{constructor(t=10,n=10,r=4473924,s=8947848){r=new _e(r),s=new _e(s);const a=n/2,o=t/n,l=t/2,c=[],h=[];for(let t=0,e=0,i=-l;t<=n;t++,i+=o){c.push(-l,0,i,l,0,i),c.push(i,0,-l,i,0,l);const n=t===a?r:s;n.toArray(h,e),e+=3,n.toArray(h,e),e+=3,n.toArray(h,e),e+=3,n.toArray(h,e),e+=3}const e=new Ze;e.setAttribute("position",new ze(c,3)),e.setAttribute("color",new ze(h,3)),super(e,new _s({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}const Hl=new Float32Array(1),Xl=(new Int32Array(Hl.buffer),Math.pow(2,8),[.125,.215,.35,.446,.526,.582]),Yl=5+Xl.length,{}=function(){const i=[],n=[],r=[];let s=8;for(let e=0;e<Yl;e++){var a=Math.pow(2,s);n.push(a);let t=1/a;4<e?t=Xl[e-8+4-1]:0==e&&(t=0),r.push(t);const l=1/(a-1),c=-l/2,h=1+l/2,u=[c,c,h,c,h,h,c,c,h,h,c,h],p=new Float32Array(108),d=new Float32Array(72),f=new Float32Array(36);for(let t=0;t<6;t++){const n=t%3*2/3-1,r=2<t?0:-1,s=[n,r,0,n+2/3,r,0,n+2/3,1+r,0,n,r,0,n+2/3,1+r,0,n,1+r,0];p.set(s,18*t),d.set(u,12*t);var o=[t,t,t,t,t,t];f.set(o,6*t)}const m=new Ze;m.setAttribute("position",new Le(p,3)),m.setAttribute("uv",new Le(d,2)),m.setAttribute("faceIndex",new Le(f,1)),i.push(m),4<s&&s--}return{_lodPlanes:i,_sizeLods:n,_sigmas:r}}();function ql(t){_o.call(this,t),this.type="catmullrom"}Math.sqrt(5),uo.create=function(t,e){return t.prototype=Object.create(uo.prototype),(t.prototype.constructor=t).prototype.getPoint=e,t},Object.assign(Oo.prototype,{createPointsGeometry:function(t){t=this.getPoints(t);return this.createGeometry(t)},createSpacedPointsGeometry:function(t){t=this.getSpacedPoints(t);return this.createGeometry(t)},createGeometry:function(i){const n=new Xs;for(let t=0,e=i.length;t<e;t++){var r=i[t];n.vertices.push(new Nt(r.x,r.y,r.z||0))}return n}}),Object.assign(Io.prototype,{fromPoints:function(t){return this.setFromPoints(t)}}),Object.create(_o.prototype),Object.create(_o.prototype),ql.prototype=Object.create(_o.prototype),Object.assign(ql.prototype,{initFromArray:function(){},getControlPointsArray:function(){},reparametrizeByArcLength:function(){}}),Wl.prototype.setColors=function(){},class extends Es{constructor(t){const e=function e(i){const n=[];i&&i.isBone&&n.push(i);for(let t=0;t<i.children.length;t++)n.push.apply(n,e(i.children[t]));return n}(t),i=new Ze,n=[],r=[],s=new _e(0,0,1),a=new _e(0,1,0);for(let t=0;t<e.length;t++){const i=e[t];i.parent&&i.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(s.r,s.g,s.b),r.push(a.r,a.g,a.b))}i.setAttribute("position",new ze(n,3)),i.setAttribute("color",new ze(r,3)),super(i,new _s({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const i=this.bones,e=this.geometry,n=e.getAttribute("position");Gl.copy(this.root.matrixWorld).invert();for(let t=0,e=0;t<i.length;t++){var r=i[t];r.parent&&r.parent.isBone&&(jl.multiplyMatrices(Gl,r.matrixWorld),Vl.setFromMatrixPosition(jl),n.setXYZ(e,Vl.x,Vl.y,Vl.z),jl.multiplyMatrices(Gl,r.parent.matrixWorld),Vl.setFromMatrixPosition(jl),n.setXYZ(e+1,Vl.x,Vl.y,Vl.z),e+=2)}e.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}.prototype.update=function(){},Object.assign(io.prototype,{extractUrlBase:function(t){return Jo.extractUrlBase(t)}}),io.Handlers={add:function(){},get:function(){}},Object.assign(class{constructor(t,e){Object.defineProperty(this,"isBox2",{value:!0}),this.min=void 0!==t?t:new Et(1/0,1/0),this.max=void 0!==e?e:new Et(-1/0,-1/0)}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(i){this.makeEmpty();for(let t=0,e=i.length;t<e;t++)this.expandByPoint(i[t]);return this}setFromCenterAndSize(t,e){e=Bl.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(e),this.max.copy(t).add(e),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return void 0===t&&(t=new Et),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(t=new Et),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return(e=void 0===e?new Et:e).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return(e=void 0===e?new Et:e).copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Bl.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}.prototype,{center:function(t){return this.getCenter(t)},empty:function(){return this.isEmpty()},isIntersectionBox:function(t){return this.intersectsBox(t)},size:function(t){return this.getSize(t)}}),Object.assign(C.prototype,{center:function(t){return this.getCenter(t)},empty:function(){return this.isEmpty()},isIntersectionBox:function(t){return this.intersectsBox(t)},isIntersectionSphere:function(t){return this.intersectsSphere(t)},size:function(t){return this.getSize(t)}}),Object.assign(ct.prototype,{empty:function(){return this.isEmpty()}}),Ei.prototype.setFromMatrix=function(t){return this.setFromProjectionMatrix(t)},Object.assign(Pt,{random16:function(){return Math.random()},nearestPowerOfTwo:function(t){return Pt.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return Pt.ceilPowerOfTwo(t)}}),Object.assign(v.prototype,{flattenToArrayOffset:function(t,e){return this.toArray(t,e)},multiplyVector3:function(t){return t.applyMatrix3(this)},multiplyVector3Array:function(){},applyToBufferAttribute:function(t){return t.applyMatrix3(this)},applyToVector3Array:function(){},getInverse:function(t){return this.copy(t).invert()}}),Object.assign(Ot.prototype,{extractPosition:function(t){return this.copyPosition(t)},flattenToArrayOffset:function(t,e){return this.toArray(t,e)},getPosition:function(){return(new Nt).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(t){return this.makeRotationFromQuaternion(t)},multiplyToArray:function(){},multiplyVector3:function(t){return t.applyMatrix4(this)},multiplyVector4:function(t){return t.applyMatrix4(this)},multiplyVector3Array:function(){},rotateAxis:function(t){t.transformDirection(this)},crossVector:function(t){return t.applyMatrix4(this)},translate:function(){},rotateX:function(){},rotateY:function(){},rotateZ:function(){},rotateByAxis:function(){},applyToBufferAttribute:function(t){return t.applyMatrix4(this)},applyToVector3Array:function(){},makeFrustum:function(t,e,i,n,r,s){return this.makePerspective(t,e,n,i,r,s)},getInverse:function(t){return this.copy(t).invert()}}),ie.prototype.isIntersectionLine=function(t){return this.intersectsLine(t)},Object.assign(_.prototype,{multiplyVector3:function(t){return t.applyQuaternion(this)},inverse:function(){return this.invert()}}),Object.assign(vt.prototype,{isIntersectionBox:function(t){return this.intersectsBox(t)},isIntersectionPlane:function(t){return this.intersectsPlane(t)},isIntersectionSphere:function(t){return this.intersectsSphere(t)}}),Object.assign(de.prototype,{area:function(){return this.getArea()},barycoordFromPoint:function(t,e){return this.getBarycoord(t,e)},midpoint:function(t){return this.getMidpoint(t)},normal:function(t){return this.getNormal(t)},plane:function(t){return this.getPlane(t)}}),Object.assign(de,{barycoordFromPoint:function(t,e,i,n,r){return de.getBarycoord(t,e,i,n,r)},normal:function(t,e,i,n){return de.getNormal(t,e,i,n)}}),Object.assign(Do.prototype,{extractAllPoints:function(t){return this.extractPoints(t)},extrude:function(t){return new ya(this,t)},makeGeometry:function(t){return new wa(this,t)}}),Object.assign(Et.prototype,{fromAttribute:function(t,e,i){return this.fromBufferAttribute(t,e,i)},distanceToManhattan:function(t){return this.manhattanDistanceTo(t)},lengthManhattan:function(){return this.manhattanLength()}}),Object.assign(Nt.prototype,{setEulerFromRotationMatrix:function(){},setEulerFromQuaternion:function(){},getPositionFromMatrix:function(t){return this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return this.setFromMatrixColumn(e,t)},applyProjection:function(t){return this.applyMatrix4(t)},fromAttribute:function(t,e,i){return this.fromBufferAttribute(t,e,i)},distanceToManhattan:function(t){return this.manhattanDistanceTo(t)},lengthManhattan:function(){return this.manhattanLength()}}),Object.assign(Ct.prototype,{fromAttribute:function(t,e,i){return this.fromBufferAttribute(t,e,i)},lengthManhattan:function(){return this.manhattanLength()}}),Object.assign(Xs.prototype,{computeTangents:function(){},computeLineDistances:function(){},applyMatrix:function(t){return this.applyMatrix4(t)}}),Object.assign(Qt.prototype,{getChildByName:function(t){return this.getObjectByName(t)},renderDepth:function(){},translate:function(t,e){return this.translateOnAxis(e,t)},getWorldRotation:function(){},applyMatrix:function(t){return this.applyMatrix4(t)}}),Object.defineProperties(Qt.prototype,{eulerOrder:{get:function(){return this.rotation.order},set:function(t){this.rotation.order=t}},useQuaternion:{get:function(){},set:function(){}}}),Object.assign(di.prototype,{setDrawMode:function(){}}),Object.defineProperties(di.prototype,{drawMode:{get:function(){return 0},set:function(){}}}),Object.defineProperties(rs.prototype,{objects:{get:function(){return this.levels}}}),Object.defineProperty(fs.prototype,"useVertexTexture",{get:function(){},set:function(){}}),hs.prototype.initBones=function(){},Object.defineProperty(uo.prototype,"__arcLengthDivisions",{get:function(){return this.arcLengthDivisions},set:function(t){this.arcLengthDivisions=t}}),Mi.prototype.setLens=function(t,e){void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(Ro.prototype,{onlyShadow:{set:function(){}},shadowCameraFov:{set:function(t){this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){}},shadowBias:{set:function(t){this.shadow.bias=t}},shadowDarkness:{set:function(){}},shadowMapWidth:{set:function(t){this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){this.shadow.mapSize.height=t}}}),Object.defineProperties(Le.prototype,{length:{get:function(){return this.array.length}},dynamic:{get:function(){return this.usage===o},set:function(){this.setUsage(o)}}}),Object.assign(Le.prototype,{setDynamic:function(t){return this.setUsage(!0===t?o:a),this},copyIndicesArray:function(){},setArray:function(){}}),Object.assign(Ze.prototype,{addIndex:function(t){this.setIndex(t)},addAttribute:function(t,e){return e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(this.setIndex(e),this):this.setAttribute(t,e):this.setAttribute(t,new Le(e,arguments[2]))},addDrawCall:function(t,e,i){this.addGroup(t,e)},clearDrawCalls:function(){this.clearGroups()},computeTangents:function(){},computeOffsets:function(){},removeAttribute:function(t){return this.deleteAttribute(t)},applyMatrix:function(t){return this.applyMatrix4(t)}}),Object.defineProperties(Ze.prototype,{drawcalls:{get:function(){return this.groups}},offsets:{get:function(){return this.groups}}}),Object.defineProperties(Ko.prototype,{maxInstancedCount:{get:function(){return this.instanceCount},set:function(t){this.instanceCount=t}}}),Object.defineProperties(Rl.prototype,{linePrecision:{get:function(){return this.params.Line.threshold},set:function(t){this.params.Line.threshold=t}}}),Object.defineProperties(Fr.prototype,{dynamic:{get:function(){return this.usage===o},set:function(t){this.setUsage(t)}}}),Object.assign(Fr.prototype,{setDynamic:function(t){return this.setUsage(!0===t?o:a),this},setArray:function(){}}),Object.assign(ga.prototype,{getArrays:function(){},addShapeList:function(){},addShape:function(){}}),Object.assign(zr.prototype,{dispose:function(){}}),Object.defineProperties(class Zl{constructor(t){this.value=t="string"==typeof t?arguments[1]:t}clone(){return new Zl(void 0===this.value.clone?this.value:this.value.clone())}}.prototype,{dynamic:{set:function(){}},onUpdate:{value:function(){return this}}}),Object.defineProperties(we.prototype,{wrapAround:{get:function(){},set:function(){}},overdraw:{get:function(){},set:function(){}},wrapRGB:{get:function(){return new _e}},shading:{get:function(){},set:function(t){this.flatShading=1===t}},stencilMask:{get:function(){return this.stencilFuncMask},set:function(t){this.stencilFuncMask=t}}}),Object.defineProperties(Ia.prototype,{metal:{get:function(){return!1},set:function(){}}}),Object.defineProperties(Oa.prototype,{transparency:{get:function(){return this.transmission},set:function(t){this.transmission=t}}}),Object.defineProperties(_i.prototype,{derivatives:{get:function(){return this.extensions.derivatives},set:function(t){this.extensions.derivatives=t}}}),Object.assign(Dr.prototype,{clearTarget:function(t,e,i,n){this.setRenderTarget(t),this.clear(e,i,n)},animate:function(t){this.setAnimationLoop(t)},getCurrentRenderTarget:function(){return this.getRenderTarget()},getMaxAnisotropy:function(){return this.capabilities.getMaxAnisotropy()},getPrecision:function(){return this.capabilities.precision},resetGLState:function(){return this.state.reset()},supportsFloatTextures:function(){return this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return this.capabilities.vertexTextures},supportsInstancedArrays:function(){return this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){this.setScissorTest(t)},initMaterial:function(){},addPrePlugin:function(){},addPostPlugin:function(){},updateShadowMap:function(){},setFaceCulling:function(){},allocTextureUnit:function(){},setTexture:function(){},setTexture2D:function(){},setTextureCube:function(){},getActiveMipMapLevel:function(){return this.getActiveMipmapLevel()}}),Object.defineProperties(Dr.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){this.shadowMap.type=t}},shadowMapCullFace:{get:function(){},set:function(){}},context:{get:function(){return this.getContext()}},vr:{get:function(){return this.xr}},gammaInput:{get:function(){return!1},set:function(){}},gammaOutput:{get:function(){return!1},set:function(t){this.outputEncoding=!0===t?3001:Lt}},toneMappingWhitePoint:{get:function(){return 1},set:function(){}}}),Object.defineProperties(Ar.prototype,{cullFace:{get:function(){},set:function(){}},renderReverseSided:{get:function(){},set:function(){}},renderSingleSided:{get:function(){},set:function(){}}}),Object.defineProperties(E.prototype,{wrapS:{get:function(){return this.texture.wrapS},set:function(t){this.texture.wrapS=t}},wrapT:{get:function(){return this.texture.wrapT},set:function(t){this.texture.wrapT=t}},magFilter:{get:function(){return this.texture.magFilter},set:function(t){this.texture.magFilter=t}},minFilter:{get:function(){return this.texture.minFilter},set:function(t){this.texture.minFilter=t}},anisotropy:{get:function(){return this.texture.anisotropy},set:function(t){this.texture.anisotropy=t}},offset:{get:function(){return this.texture.offset},set:function(t){this.texture.offset=t}},repeat:{get:function(){return this.texture.repeat},set:function(t){this.texture.repeat=t}},format:{get:function(){return this.texture.format},set:function(t){this.texture.format=t}},type:{get:function(){return this.texture.type},set:function(t){this.texture.type=t}},generateMipmaps:{get:function(){return this.texture.generateMipmaps},set:function(t){this.texture.generateMipmaps=t}}}),Object.defineProperties(yl.prototype,{load:{value:function(t){const e=this;return(new al).load(t,function(t){e.setBuffer(t)}),this}},startTime:{set:function(){}}}),wi.prototype.updateCubeMap=function(t,e){return this.update(t,e)},wi.prototype.clear=function(t,e,i,n){return this.renderTarget.clear(t,e,i,n)},f.crossOrigin=void 0,f.loadTexture=function(t,e,i,n){const r=new ho;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,i,void 0,n);return e&&(s.mapping=e),s},f.loadTextureCube=function(t,e,i,n){const r=new lo;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,i,void 0,n);return e&&(s.mapping=e),s},f.loadCompressedTexture=function(){},f.loadCompressedTextureCube=function(){},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"124"}}))},6547:function(t,e,i){var a=i("a691"),o=i("1d80"),i=function(s){return function(t,e){var i,n=String(o(t)),r=a(e),t=n.length;return r<0||t<=r?s?"":void 0:(e=n.charCodeAt(r))<55296||56319<e||r+1===t||(i=n.charCodeAt(r+1))<56320||57343<i?s?n.charAt(r):e:s?n.slice(r,r+2):i-56320+(e-55296<<10)+65536}};t.exports={codeAt:i(!1),charAt:i(!0)}},"8aa5":function(t,e,i){"use strict";var n=i("6547").charAt;t.exports=function(t,e,i){return e+(i?n(t,e).length:1)}},9263:function(t,e,i){"use strict";var n,u=i("ad6d"),r=i("9f7f"),p=RegExp.prototype.exec,d=String.prototype.replace,s=p,f=(n=/b*/g,p.call(i=/a/,"a"),p.call(n,"a"),0!==i.lastIndex||0!==n.lastIndex),m=r.UNSUPPORTED_Y||r.BROKEN_CARET,g=void 0!==/()??/.exec("")[1];(f||g||m)&&(s=function(t){var e,i,n,r,s=this,a=m&&s.sticky,o=u.call(s),l=s.source,c=0,h=t;return a&&(-1===(o=o.replace("y","")).indexOf("g")&&(o+="g"),h=String(t).slice(s.lastIndex),0<s.lastIndex&&(!s.multiline||s.multiline&&"\n"!==t[s.lastIndex-1])&&(l="(?: "+l+")",h=" "+h,c++),i=new RegExp("^(?:"+l+")",o)),g&&(i=new RegExp("^"+l+"$(?!\\s)",o)),f&&(e=s.lastIndex),n=p.call(a?i:s,h),a?n?(n.input=n.input.slice(c),n[0]=n[0].slice(c),n.index=s.lastIndex,s.lastIndex+=n[0].length):s.lastIndex=0:f&&n&&(s.lastIndex=s.global?n.index+n[0].length:e),g&&n&&1<n.length&&d.call(n[0],i,function(){for(r=1;r<arguments.length-2;r++)void 0===arguments[r]&&(n[r]=void 0)}),n}),t.exports=s},"9f7f":function(t,e,i){"use strict";i=i("d039");function n(t,e){return RegExp(t,e)}e.UNSUPPORTED_Y=i(function(){var t=n("a","y");return t.lastIndex=2,null!=t.exec("abcd")}),e.BROKEN_CARET=i(function(){var t=n("^r","gy");return t.lastIndex=2,null!=t.exec("str")})},a434:function(t,e,i){"use strict";var n=i("23e7"),u=i("23cb"),p=i("a691"),d=i("50c4"),f=i("7b0b"),m=i("65f0"),g=i("8418"),r=i("1dde"),i=i("ae40"),r=r("splice"),i=i("splice",{ACCESSORS:!0,0:0,1:2}),v=Math.max,y=Math.min;n({target:"Array",proto:!0,forced:!r||!i},{splice:function(t,e){var i,n,r,s,a,o,l=f(this),c=d(l.length),h=u(t,c),t=arguments.length;if(0===t?i=n=0:n=1===t?(i=0,c-h):(i=t-2,y(v(p(e),0),c-h)),9007199254740991<c+i-n)throw TypeError("Maximum allowed length exceeded");for(r=m(l,n),s=0;s<n;s++)(a=h+s)in l&&g(r,s,l[a]);if(i<(r.length=n)){for(s=h;s<c-n;s++)o=s+i,(a=s+n)in l?l[o]=l[a]:delete l[o];for(s=c;c-n+i<s;s--)delete l[s-1]}else if(n<i)for(s=c-n;h<s;s--)o=s+i-1,(a=s+n-1)in l?l[o]=l[a]:delete l[o];for(s=0;s<i;s++)l[s+h]=arguments[s+2];return l.length=c-n+i,r}})},ac1f:function(t,e,i){"use strict";var n=i("23e7"),i=i("9263");n({target:"RegExp",proto:!0,forced:/./.exec!==i},{exec:i})},ad6d:function(t,e,i){"use strict";var n=i("825a");t.exports=function(){var t=n(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},c975:function(t,e,i){"use strict";var n=i("23e7"),r=i("4d64").indexOf,s=i("a640"),i=i("ae40"),a=[].indexOf,o=!!a&&1/[1].indexOf(1,-0)<0,s=s("indexOf"),i=i("indexOf",{ACCESSORS:!0,1:0});n({target:"Array",proto:!0,forced:o||!s||!i},{indexOf:function(t){return o?a.apply(this,arguments)||0:r(this,t,1<arguments.length?arguments[1]:void 0)}})},d784:function(t,e,i){"use strict";i("ac1f");var c=i("6eeb"),h=i("d039"),u=i("b622"),p=i("9263"),d=i("9112"),f=u("species"),m=!h(function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")}),g="$0"==="a".replace(/./,"$0"),i=u("replace"),v=!!/./[i]&&""===/./[i]("a","$0"),y=!h(function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};t="ab".split(t);return 2!==t.length||"a"!==t[0]||"b"!==t[1]});t.exports=function(i,t,e,n){var s,r,a=u(i),o=!h(function(){var t={};return t[a]=function(){return 7},7!=""[i](t)}),l=o&&!h(function(){var t=!1,e=/a/;return"split"===i&&((e={}).constructor={},e.constructor[f]=function(){return e},e.flags="",e[a]=/./[a]),e.exec=function(){return t=!0,null},e[a](""),!t});o&&l&&("replace"!==i||m&&g&&!v)&&("split"!==i||y)||(s=/./[a],e=(l=e(a,""[i],function(t,e,i,n,r){return e.exec===p?o&&!r?{done:!0,value:s.call(e,i,n)}:{done:!0,value:t.call(i,e,n)}:{done:!1}},{REPLACE_KEEPS_$0:g,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:v}))[0],r=l[1],c(String.prototype,i,e),c(RegExp.prototype,a,2==t?function(t,e){return r.call(t,this,e)}:function(t){return r.call(t,this)})),n&&d(RegExp.prototype[a],"sham",!0)}}}]);